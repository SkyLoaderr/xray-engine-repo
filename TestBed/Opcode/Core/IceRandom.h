///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 *	Contains code for random generators.
 *	\file		IceRandom.h
 *	\author		Pierre Terdiman
 *	\date		August, 9, 2001
 */
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Include Guard
#ifndef __ICERANDOM_H__
#define __ICERANDOM_H__

	//! Returns a unit random floating-point value
	__forceinline float UnitRandomFloat()	{ return float(rand()) * ONE_OVER_RAND_MAX;	}

	class ICECORE_API BasicRandom
	{
		public:

		//! Constructor
		__forceinline					BasicRandom(udword seed=0)	: mRnd(seed)	{}
		//! Destructor
		__forceinline					~BasicRandom()								{}

		__forceinline	void			SetSeed(udword seed)		{ mRnd = seed;											}
		__forceinline	udword			GetCurrentValue()	const	{ return mRnd;											}
		__forceinline	udword			Randomize()					{ mRnd = mRnd * 2147001325 + 715136305; return mRnd;	}

		private:
						udword			mRnd;
	};

#endif // __ICERANDOM_H__

