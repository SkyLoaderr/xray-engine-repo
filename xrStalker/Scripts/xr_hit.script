class "action_process_hit"

function action_process_hit:__init(obj, storage)
	self.object = obj
	self.st = storage
end

function action_process_hit:hit_callback(obj, amount, local_direction, who, bone_index)
	if who then
		printf("[%s] hit by [%s]", obj:name(), who:name())
		db.storage[obj:id()].hit.who = who:id()
	else
		printf("[%s] hit by [Unknown]", victim:name())
		db.storage[obj:id()].hit.who = -1
	end
	if db.storage[self.object:id()].active_scheme then
		local actor = level.actor()
		if actor then
			if xr_logic.try_switch_to_another_section(obj, self.st, actor) then
				return
			end
		end
	end
end

----------------------------------------------------------------------------------------------------------------------
-- binder
----------------------------------------------------------------------------------------------------------------------
function add_to_binder(npc, ini, scheme, section, storage) 	
 	local action = this.action_process_hit(npc, storage)
	storage.action = action
end

function set_hit_checker(npc, ini, scheme, section)
	local st = xr_logic.assign_storage_and_bind(npc, ini, scheme, section)
	st.logic = xr_logic.cfg_get_switch_conditions(ini, section, npc)
	npc:set_hit_callback(st.action, "hit_callback")
end

function disable_scheme(npc, scheme)
	npc:clear_hit_callback(true);
	npc:clear_hit_callback(false);
end

