
local object_list = {}

object_list["test0"] = {
		"test0_dog1"
}

object_list["test1"] = {
		"test1_dog1",
		"test1_dog2"
}

object_list["test2"] = {
		"test2_dog1",
		"test2_dog2",
		"test2_dog3",
		"test2_dog4",
		"test2_dog5",
		"test2_dog6"
		
}

object_list["test3"] = {
		"test3_controller1"
}

object_list["test4"] = {
		"test4_controller1",
		"test4_controller2"
}

object_list["test5"] = {
		"test5_controller1",
		"test5_flesh1",
		"test5_flesh2",
		"test5_dog1",
		"test5_dog2"
}

object_id_list = {}

-- Check if object online
function object_online(object_id)
	return (alife() == nil) or alife():object(object_id).online
end

-- Move all offline
function offline_all()
	for test_name, test_name_table in pairs(object_list) do
		for index, obj_name in pairs(test_name_table) do
			local obj =	 level.debug_object(tostring(obj_name))
			if ((obj ~= nil) and (object_online(obj:id()))) then
				alife():set_switch_online	(obj:id(),false)
				alife():set_switch_offline	(obj:id(),true)
			end
		end
	end
end
-- Move online objects that are in scene index 
function online_scene(index)
	local tab = object_id_list["test" .. tostring(index)];

	for index, obj_id in pairs(tab) do
		local obj =	alife():object(tonumber(obj_id))
		if (obj ~= nil) then
			--printf(":: TEST : try online [%s] real_id[%u] saved_id[%u]", obj:name(), obj:id(), tonumber(obj_id))
			--alife():set_switch_online	(obj:id(),true)
			--alife():set_switch_offline	(obj:id(),false)
			alife():set_switch_online	(obj_id,true)
			alife():set_switch_offline	(obj_id,false)
		else 
			printf(":: DEBUG : Error finding object by id")
		end
	end
end

-- Base function
function r(index)
	offline_all()
	online_scene(index)
end

-- Save id of object while loading
function save_object_id()
	for test_name, test_name_table in pairs(object_list) do
		local tab = {}
		for index, obj_name in pairs(test_name_table) do
			printf(":: TEST : saving object [name=%s]", tostring(obj_name))
			local obj =	level.debug_object(tostring(obj_name))
			if (obj ~= nil) then
				table.insert(tab,tonumber(obj:id()))
			end
		end
		object_id_list[tostring(test_name)] = tab
	end
end

-- Debug info
function debug()
	for test_name, test_name_table in pairs(object_id_list) do
		printf(":: TEST : test [%s]", tostring(test_name))
		for index, obj_id in pairs(test_name_table) do
			printf(":: TEST : getting object [id=%u]", tonumber(obj_id))
			local obj =	alife():object(tonumber(obj_id))
			if (obj ~= nil) then
				printf(":: TEST : obj_name = [%s] id =[%u]",obj:name(), tonumber(obj_id))
			end
		end
	end
end


function main()
	wait_game(2000)
	save_object_id()
	offline_all()
end
