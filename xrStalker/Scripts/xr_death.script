----------------------------------------------------------------------------------------------------------------------
--Actions
----------------------------------------------------------------------------------------------------------------------
-- Обычное поведение

class "action_process_death"

function action_process_death:__init(obj, storage)
	self.object = obj
	self.st = storage
end

function action_process_death:death_callback(victim, who)
	if who ~= nil then
		printf("[%s] killed by [%s]", victim:name(), who:name() )
		db.storage[victim:id()].death.killer = who:id()
	else
		printf("[%s] killed by [Unknown]", victim:name())
		db.storage[victim:id()].death.killer = -1
	end


	if db.actor then
		if self.st.info then
			xr_logic.pick_section_from_condlist(db.actor, self.npc, self.st.info)
		end
		if self.st.info2 then
			xr_logic.pick_section_from_condlist(db.actor, self.npc, self.st.info2)
		end
	end


end

----------------------------------------------------------------------------------------------------------------------
-- binder
----------------------------------------------------------------------------------------------------------------------
function add_to_binder(npc, ini, scheme, section, storage) 	
	local action = this.action_process_death(npc, storage)
	xr_logic.subscribe_action_for_events(npc, storage, action)
end

function set_death_checker(npc, ini, scheme, section)
	local st = xr_logic.assign_storage_and_bind(npc, ini, scheme, section)
	local tmp = utils.cfg_get_string(ini, section, "on_info", npc, false, "")
	if tmp then
		st.info = xr_logic.parse_condlist(npc, section, "death", tmp)
	end
	tmp = utils.cfg_get_string(ini, section, "on_info2", npc, false, "")
	if tmp then
		st.info2 = xr_logic.parse_condlist(npc, section, "death", tmp)
	end
end

function disable_scheme(npc, scheme)
	-- При отключении схемы, нужно снять подписку, чтобы hit callback перестал
	-- передаваться:
	--npc:set_callback(callback.death, nil)
	local st = db.storage[npc:id()][scheme]
	if st then
		xr_logic.unsubscribe_action_from_events(npc, st, st.death_action)
	end
end

