-- File:        UI_MAIN_MENU.SCRIPT
-- Description: Load Dialog for STALKER
-- Created:     28.10.2004
-- Copyright:   2004 GSC Game World
-- Author:      Serhiy Vynnychenko (narrator@gsc-game.kiev.ua)
-- Version:     0.1

class "main_menu" (CUIScriptWnd)

function main_menu:__init() super()
   self:SetFont(GetFontMedium()) --set base font for dialog.
   
   self:InitControls()
   self:InitCallBacks()
end

function main_menu:__finalize()

end

function main_menu:SetClGame(game_cl)
   self.m_game_cl = game_cl
end

function main_menu:InitControls()
	----- DATA ----
	local indent          = 50
	local screen          = {width = 1024,height = 768}	
	local main_rect       = {x = 0,
							 y = 0,
							 width = screen.width, 
							 height = screen.height}	
	main_rect.x = (screen.width - main_rect.width)/2
	main_rect.y = (screen.height - main_rect.height)/2
	local caption_rect    = {x = 0,      y = 0,      width = main_rect.width, height = indent*2}
	local captiontxt_rect = {x = caption_rect.width/2,
							 y = caption_rect.height/2,
							 width = 0,
							 height = 0}
	     --->> BUTTONS
	local btn_rect = {x = 0, y = 0, width = 135, height = 40}
		  btn_rect.x = (main_rect.width - btn_rect.width)/2
	local btn_save_rect   = {x = btn_rect.x,
							 y = caption_rect.y + caption_rect.height + indent,
							 width = btn_rect.width,
							 height = btn_rect.height}
	local btn_ok_rect     = {x = indent,
							 y = 0,
							 height = 40,
							 width  = 135}
	btn_ok_rect.y = main_rect.height - (btn_ok_rect.height + indent)
	local btn_cancel_rect = {x = btn_ok_rect.x + btn_ok_rect.width + indent,
							 y = btn_ok_rect.y,
							 height = btn_ok_rect.height,
							 width  = btn_ok_rect.width}	
	message_rect = {x = 0, y = 0, width = 400, height = 300}
	
	----- CODE -------
	
	-- init self position and size
	self:Init(main_rect.x, main_rect.y, main_rect.width, main_rect.height)
	
	-- MAIN FRAME WINDOW		
	local main_frame = CUIFrameWindow()
	main_frame:SetAutoDelete(true)              --parent will delete this item in destructor
	main_frame:SetWindowName("main_frame")
	main_frame:Init("ui\\ui_frame",0,0,main_rect.width, main_rect.height)    
	self:AttachChild(main_frame)
	
	-- CAPTION frame --
	local wnd_caption = CUIFrameWindow()
	wnd_caption:SetAutoDelete(true)
	wnd_caption:SetWindowName("wnd_caption")
	wnd_caption:Init("ui\\ui_pop_up",caption_rect.x, caption_rect.y, caption_rect.width, caption_rect.height)
	main_frame:AttachChild(wnd_caption)
	
	local txt_caption = CUIStatic()
	txt_caption:SetAutoDelete(true)
	txt_caption:SetWindowName("txt_caption")
	txt_caption:SetFont(GetFontLetterica25())
	txt_caption:SetText("MAIN_MENU")
	txt_caption:SetTextAlign(CGameFont.alCenter)
	txt_caption:Init(captiontxt_rect.x, captiontxt_rect.y, caption_rect.width, caption_rect.height)
	main_frame:AttachChild(txt_caption)	

--------------------------------------- 
    local btn   = CUIButton()
	btn:SetAutoDelete(true)
	btn:SetWindowName("btn_save")
	btn:Init("ui\\ui_button_01", btn_save_rect.x, btn_save_rect.y, btn_save_rect.width, btn_save_rect.height)
	btn:SetText("Save game")
	btn:SetFont(GetFontLetterica25())
	btn:SetTextAlign(CGameFont.alCenter)
	btn:SetTextY(20)
	self:Register(btn)
	main_frame:AttachChild(btn)
	
	
	
	btn   = CUIButton()
	btn:SetAutoDelete(true) 
	btn:SetWindowName("button_ok") --set window name for callback processing
	
	btn:Init("ui\\ui_button_01",btn_ok_rect.x, btn_ok_rect.y, btn_ok_rect.width, btn_ok_rect.height)
--  btn:Init(10,10,100,100) --or without texture
    btn:SetText("OK")
	btn:SetFont(GetFontLetterica25())
	btn:SetTextAlign(CGameFont.alCenter) --horizontal align. possible values are [alCenter,alLeft,alRight]
	btn:SetTextY(20) --vertical align(pixel). set value to -1 for center
	self:Register(btn) --for event-handling
	main_frame:AttachChild(btn)
--------------------------------------
    btn   = CUIButton()
    btn:SetAutoDelete(true)
    btn:SetWindowName("button_cancel")	
	btn:Init("ui\\ui_button_01",btn_cancel_rect.x, btn_cancel_rect.y, btn_cancel_rect.width, btn_cancel_rect.height) 	
	btn:SetText("cancel")
	btn:SetFont(GetFontLetterica25())
	btn:SetTextAlign(CGameFont.alCenter)
	btn:SetTextY(20)
	self:Register(btn)
	main_frame:AttachChild(btn)
	
	
	-- Message Box --
	message_box = CUIMessageBox()
	message_box:SetAutoDelete(true)
	message_box:SetWindowName("message_box")
	message_box:SetFont(GetFontLetterica25())
	message_box:Init("ui\\ui_frame",message_rect.x, message_rect.y, message_rect.width, message_rect.height)
	message_box:SetStyle(0)	
	message_box:Hide()
	self:Register(message_box)
	main_frame:AttachChild(message_box)
	message_box:AutoCenter()
end

function main_menu:InitCallBacks()
	self:AddCallback("button_ok",     ui_events.BUTTON_CLICKED,             self,"OnButton_ok_clicked")
	self:AddCallback("button_cancel", ui_events.BUTTON_CLICKED,             self,"OnButton_cancel_clicked")
	self:AddCallback("message_box",   ui_events.MESSAGE_BOX_OK_CLICKED,     self,"OnMsgOk")
	self:AddCallback("message_box",   ui_events.MESSAGE_BOX_CANCEL_CLICKED, self,"OnMsgCancel")
	self:AddCallback("message_box",   ui_events.MESSAGE_BOX_YES_CLICKED,    self,"OnMsgYes")
	self:AddCallback("message_box",   ui_events.MESSAGE_BOX_NO_CLICKED,     self,"OnMsgNo")
end

function main_menu:OnMsgOk()
	local msg_box = self:GetMessageBox("message_box")
	msg_box:Hide()
end

function main_menu:OnMsgCancel()
	local msg_box = self:GetMessageBox("message_box")
	msg_box:Hide()
end

function main_menu:OnMsgYes()
	local msg_box = self:GetMessageBox("message_box")
	msg_box:Hide()
end

function main_menu:OnMsgNo()
	local msg_box = self:GetMessageBox("message_box")
	msg_box:Hide()
end

function main_menu:OnButton_ok_clicked()	

end

function main_menu:OnButton_cancel_clicked()
	local message_box = self:GetMessageBox("message_box")
	
	message_box:SetText("Do you really want to exit?")
	message_box:Show()
end

function main_menu:OnKeyboard(dik, keyboard_action)  --virtual function
   CUIScriptWnd.OnKeyboard(self,dik,keyboard_action)
     
   DIK_RETURN = 28
   WINDOW_KEY_PRESSED = 6
   
   local bind = dik_to_bind(dik)
   if bind == key_bindings.kQUIT then
      level.start_stop_menu(self,true)
   end  
   
   if dik == DIK_RETURN and keyboard_action == WINDOW_KEY_PRESSED then
	self:OnButton_ok_clicked()
   end
   
   return true
end


function main_menu:ItemIsInList(item)
	return false
end

