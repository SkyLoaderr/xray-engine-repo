-- File:        UI_MAIN_MENU.SCRIPT
-- Description: Load Dialog for STALKER
-- Created:     28.10.2004
-- Copyright:   2004 GSC Game World
-- Author:      Serhiy Vynnychenko (narrator@gsc-game.kiev.ua)
-- Version:     0.1


function main()
	local dlg = ui_main_menu.main_menu()
	level.start_stop_menu(dlg,true)
	while true do
		wait(3000)
	end
end


class "main_menu" (ui_base_dialog.base_dialog)

function main_menu:__init() super()
   self:SetFont(GetFontMedium()) --set base font for dialog.
   
   self:InitControls()
   self:InitCallBacks()
end

function main_menu:__finalize()

end

function main_menu:SetClGame(game_cl)
   self.m_game_cl = game_cl
end

function main_menu:InitControls()
	ui_base_dialog.base_dialog.InitControls(self, "Main Menu")

	----- DATA ----
	local btn_new_rect    = {x = self.btn_rect.x,
							 y = self.top_align_y,
							 width = self.btn_rect.width,
							 height = self.btn_rect.height}
							 
	local btn_load_rect   = {x = self.btn_rect.x,
							 y = btn_new_rect.y + btn_new_rect.height + self.indent,
							 width = self.btn_rect.width,
							 height = self.btn_rect.height}
							 
	local btn_multi_rect  = {x = self.btn_rect.x,
							 y = btn_load_rect.y + btn_load_rect.height + self.indent,
							 width = self.btn_rect.width,
							 height = self.btn_rect.height}
	
	local btn_opt_rect    = {x = self.btn_rect.x,
							 y = btn_multi_rect.y + btn_multi_rect.height + self.indent,
							 width = self.btn_rect.width,
							 height = self.btn_rect.height}
	-- Bottom align
	local btn_quit_rect    = {x = self.btn_rect.x,
							 y = self.bottom_align_y - self.btn_rect.height ,
							 width = self.btn_rect.width,
							 height = self.btn_rect.height}
	local btn_bonus_rect   = {x = self.btn_rect.x,
							 y = btn_quit_rect.y - self.btn_rect.height - self.indent,
							 width = self.btn_rect.width,
							 height = self.btn_rect.height}
	-- TEST ---
	
--	local tab = CUITabControl()
--	tab:Init(0,0,300, 300);
--	self.main_frame:AttachChild(tab)
	
--	local tabBtn = CUITabButton()
--	tabBtn:SetAutoDelete(true)
--	tab:AddItem(tabBtn)
--	tabBtn:SetText("tab1")
--	tabBtn:Init(0, 0, self.btn_rect.width, self.btn_rect.height)
--	tabBtn:InitTexture("ui\\ui_button_01", "ui\\ui_button_02", "ui\\ui_button_03")
--	self.main_frame:AttachChild(tabBtn)
	
		
	----- CODE -------
-------- BUTTONS ------------------------------- 
	--------->> NEW GAME
--    local btn = CUIButton()
	local btn = CUI3tButton()
	
	btn:SetAutoDelete(true)
	btn:SetWindowName("btn_new_game")
--	btn:Init("ui\\ui_button_01", btn_new_rect.x, btn_new_rect.y, btn_new_rect.width, btn_new_rect.height)
	btn:Init(btn_new_rect.x, btn_new_rect.y, btn_new_rect.width, btn_new_rect.height)
	btn:InitTexture("ui\\ui_button_01", "ui\\ui_button_02", "ui\\ui_button_03")
	btn:SetText("New game")
	btn:SetFont(self.button_font)
	btn:SetTextAlign(CGameFont.alCenter)
	btn:SetTextY(self.button_indent)
	btn:SetTextColor(getARGB(255, 255, 0, 0))

	self:Register(btn)
	self.main_frame:AttachChild(btn)

		
	--------->> LOAD Game	
	btn = CUIButton()
	btn:SetAutoDelete(true)
	btn:SetWindowName("btn_load")
	btn:Init("ui\\ui_button_01", btn_load_rect.x, btn_load_rect.y, btn_load_rect.width, btn_load_rect.height)
	btn:SetText("Load Game")
	btn:SetFont(self.button_font)
	btn:SetTextAlign(CGameFont.alCenter)
	btn:SetTextY(self.button_indent)
	self:Register(btn)
	self.main_frame:AttachChild(btn)	
	
		
	--------->> MULTIPLAYER
	btn = CUIButton()
	btn:SetAutoDelete(true)
	btn:SetWindowName("btn_multiplayer")
	btn:Init("ui\\ui_button_01", btn_multi_rect.x, btn_multi_rect.y, btn_multi_rect.width, btn_multi_rect.height)
	btn:SetText("Multiplayer")
	btn:SetFont(self.button_font)
	btn:SetTextAlign(CGameFont.alCenter)
	btn:SetTextY(self.button_indent)
	self:Register(btn)
	self.main_frame:AttachChild(btn)
	
	
	--------->> OPTIONS
	btn = CUIButton()
	btn:SetAutoDelete(true)
	btn:SetWindowName("btn_options")
	btn:Init("ui\\ui_button_01", btn_opt_rect.x, btn_opt_rect.y, btn_opt_rect.width, btn_opt_rect.height)
	btn:SetText("Options")
	btn:SetFont(self.button_font)
	btn:SetTextAlign(CGameFont.alCenter)
	btn:SetTextY(self.button_indent)
	self:Register(btn)
	self.main_frame:AttachChild(btn)
	
	--------->> QUIT TO WINDOWS
	btn = CUIButton()
	btn:SetAutoDelete(true)
	btn:SetWindowName("btn_quit")
	btn:Init("ui\\ui_button_01", btn_quit_rect.x, btn_quit_rect.y, btn_quit_rect.width, btn_quit_rect.height)
	btn:SetText("Quit to Windows")
	btn:SetFont(self.button_font)
	btn:SetTextAlign(CGameFont.alCenter)
	btn:SetTextY(self.button_indent)
	self:Register(btn)
	self.main_frame:AttachChild(btn)
	
		--------->> QUIT TO WINDOWS
	btn = CUIButton()
	btn:SetAutoDelete(true)
	btn:SetWindowName("btn_bonus")
	btn:Init("ui\\ui_button_01", btn_bonus_rect.x, btn_bonus_rect.y, btn_bonus_rect.width, btn_bonus_rect.height)
	btn:SetText("Bonus")
	btn:SetFont(self.button_font)
	btn:SetTextAlign(CGameFont.alCenter)
	btn:SetTextY(self.button_indent)
	self:Register(btn)
	self.main_frame:AttachChild(btn)
end

function main_menu:InitCallBacks()
	self:AddCallback("btn_new_game",    ui_events.BUTTON_CLICKED,				self,"OnButton_new_game_clicked")
	self:AddCallback("btn_options",     ui_events.BUTTON_CLICKED,				self,"OnButton_options_clicked")
	self:AddCallback("btn_load",        ui_events.BUTTON_CLICKED,				self,"OnButton_load_clicked")
	self:AddCallback("btn_multiplayer", ui_events.BUTTON_CLICKED,				self,"OnButton_multiplayer_clicked")
	self:AddCallback("btn_quit",		ui_events.BUTTON_CLICKED,				self,"OnButton_quit_clicked")
	self:AddCallback("message_box",     ui_events.MESSAGE_BOX_OK_CLICKED,		self,"OnMsgOk")
	self:AddCallback("message_box",     ui_events.MESSAGE_BOX_CANCEL_CLICKED,	self,"OnMsgCancel")
	self:AddCallback("message_box",     ui_events.MESSAGE_BOX_YES_CLICKED,		self,"OnMsgYes")
	self:AddCallback("message_box",     ui_events.MESSAGE_BOX_NO_CLICKED,		self,"OnMsgNo")
end

function main_menu:OnButton_new_game_clicked()
	local dlg = ui_new_game_dialog.new_game_dlg()
	level.start_stop_menu(dlg, true)
end

function main_menu:OnButton_options_clicked()
	local dlg = ui_options_dialog.options_dialog()
	level.start_stop_menu(dlg, true)
end

function main_menu:OnButton_load_clicked()
	local dlg = ui_load_dialog.load_dialog()
	level.start_stop_menu(dlg, true)
end

function main_menu:OnButton_multiplayer_clicked()
	local dlg = ui_multiplayer_dialog.multiplayer_dialog()
	level.start_stop_menu(dlg, true)
end

function main_menu:OnButton_quit_clicked()	
	level.start_stop_menu(self, true)
end

function main_menu:OnMsgOk()
	local msg_box = self:GetMessageBox("message_box")
	msg_box:Hide()
end

function main_menu:OnMsgCancel()
	local msg_box = self:GetMessageBox("message_box")
	msg_box:Hide()
end

function main_menu:OnMsgYes()
	local msg_box = self:GetMessageBox("message_box")
	msg_box:Hide()
end

function main_menu:OnMsgNo()
	local msg_box = self:GetMessageBox("message_box")
	msg_box:Hide()
end


function main_menu:OnKeyboard(dik, keyboard_action)  --virtual function
	ui_base_dialog.base_dialog.OnKeyboard(self,dik,keyboard_action)
	
	DIK_RETURN = 28
	WINDOW_KEY_PRESSED = 6
	
	if dik == DIK_RETURN and keyboard_action == WINDOW_KEY_PRESSED then
		level.start_stop_menu(self,true)
	end
   
	return true
end