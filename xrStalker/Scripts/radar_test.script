-----------------------------------------------------------------------------------
-- Test Definitions
-----------------------------------------------------------------------------------
local object_list		= {}
local smart_terrains	= {}

-----------------------------------------------------------------------------------------
-- TEST 1
-----------------------------------------------------------------------------------------
object_list["test1"] = {
"rad_entrance_stalker_monolith3",
"rad_ambush1_walker1",
"rad_ambush1_walker_0001",
"rad_after_valley_walker1",
"rad_ambush1_walker_0003",
"rad_tramplin_rpg_walker",
"rad_tramplin_walker3",
"rad_tramplin_walker4",
"rad_stalker_monolith",
"rad_ambush3_walker2",
"rad_ambush3_walker",
"rad_ambush3_walker3",
"rad_ambush3_walker4",
"rad_ambush3_walker6",
"rad_ambush3_walker5",
"rad_ambush3_walker7",
"rad_ambush3_walker8",
"rad_zombie_normal",
"rad_zombie_normal_0000",
"rad_zombie_normal_0001",
"rad_zombie_normal_0002",
"rad_zombie_normal_0003",
"rad_zombie_normal_0004",
"rad_ambush1_walker_0004",
"rad_stalker",
"rad_prip_teleport_patroler1",
"rad_prip_teleport_patroler2",
"rad_prip_teleport_guard1",
"rad_prip_teleport_guard2",
"rad_prip_teleport_kamper1",
"rad_prip_teleport_kamper2",
"rad_prip_teleport_cache_quard1",
"rad_prip_teleport_cache_quard2",
"rad_prip_road_patroler1",
"rad_prip_road_patroler2",
"rad_prip_road_guard1",
"rad_prip_road_guard2",
"rad_prip_road_kamper1",
"rad_prip_road_kamper2",
"rad_prip_road_kamper3",
"rad_curve_road_mid_guard2",
"rad_curve_road_mid_guard1",
"rad_curve_road_high_guard1",
"rad_curve_road_high_guard2",
"rad_antenna_camper1",
"rad_stalker_monolith_antenna_0004",
"rad_stalker_monolith_antenna_0005",
"rad_stalker_monolith_antenna_0009",
"rad_stalker_monolith_antenna_0010",
"rad_stalker_monolith_antenna_0011",
"rad_stalker_monolith_antenna_0012",
"rad_stalker_monolith_antenna_0013",
"rad_stalker_monolith_antenna_0014",
"rad_stalker_monolith_antenna_0015",
"rad_stalker_monolith_antenna_0016",
"rad_stalker_monolith_antenna_0017",
"rad_antenna_sniper1",
"rad_m_gigant_e",
"rad_m_pseudodog_e",
"rad_m_pseudodog_e_0001",
"rad_m_pseudodog_e_0003",
"rad_m_pseudodog_e_0005",
"rad_m_pseudodog_e_0006",
"rad_m_pseudodog_e_0007",
"rad_ambush1_kamp",
"rad_ambush1_kamp_0000",
"rad_ambush1_kamp_0001",
"rad_before_tramplin_stalker",
"rad_ambush3_walker_0000",
"rad_antenna_sniper2",
"rad_antenna_sniper3",
"rad_antenna_sniper4",
"rad_antenna_camper2",
"rad_antenna_camper3",
"rad_stalker_dolg_0003",
"rad_stalker_svoboda_0004",
"rad_stalker_dolg_0001",
"rad_stalker_svoboda_0002",
"rad_stalker_svoboda_0005",
"rad_stalker_svoboda_0006",
"rad_stalker_dolg",
"rad_stalker_dolg_0008",
"rad_stalker_dolg_0009",
"rad_stalker_dolg_0010",
"rad_stalker_dolg_0011",
"rad_specnaz_antenna_0007",
"rad_specnaz_antenna_0008",
"rad_specnaz_antenna_0009",
"rad_specnaz_antenna_0010",
"rad_codedoor_sniper",
"rad_stalker_0000",
"rad_stalker_0002",
"rad_stalker_0003",
"rad_stalker_0005",
"rad_tramplin_sniper",
"rad_curve_road_mid_guard_0000",
"rad_entrance_stalker_monolith2",
"rad_entrance_stalker_monolith4",
"rad_entrance_stalker_monolith1",
"rad_stalker_zombied_0009",
"rad_stalker_zombied_0010",
"rad_stalker_zombied_0011",
"rad_antenna_sniper5",
"rad_ambush3_walker_0001",
"rad_ambush3_walker_0002",
"rad_ambush3_walker_0003",
"rad_ambush3_walker_0004",
"rad_ambush3_walker_0005",
"rad_stalker_svoboda_0000",
"rad_stalker_0006",
"rad_stalker_0007",
"rad_stalker_0008",
"rad_after_valley_walker2",
"rad_after_valley_walker3",
"rad_after_valley_walker4",
"rad_before_tramplin_stalker_0000",
"rad_before_tramplin_stalker_0001",
"rad_before_tramplin_stalker_0002",
"rad_before_tramplin_stalker_0003",
"rad_bloodsucker_strong",
	"rad_snork_jumper",
"rad_snork_jumper_0000",
"rad_snork_jumper_0001",
"rad_snork_jumper_0002",
"rad_snork_jumper_0003",
"rad_snork_jumper_0004",
"rad_snork_jumper_0005",
"rad_snork_jumper_0006",
"rad_snork_jumper_0007",
"rad_snork_jumper_0008",
	"rad_snork_jumper_0009",
"rad_snork_jumper_0010",
"rad_snork_jumper_0011",
"rad_snork_jumper_0012",
"rad_snork_jumper_0013",
"rad_snork_jumper_0014",
"rad_snork_jumper_0015",
"rad_snork_jumper_0016",
"rad_snork_jumper_0017",
"rad_snork_jumper_0018",
"rad_snork_jumper_0019",
"rad_stalker_zombied",
"rad_stalker_zombied_0000",
"rad_stalker_zombied_0001",
"rad_stalker_zombied_0002",
"rad_stalker_zombied_0003",
"rad_stalker_zombied_0004",
"rad_stalker_zombied_0005",
"rad_stalker_zombied_0006",
"rad_stalker_zombied_0007",
"rad_stalker_zombied_0008",
"rad_stalker_zombied_0012",
"rad_antenna_specnazer",
"rad_antenna_specnazer_0000",
"rad_antenna_specnazer_0001",
"rad_antenna_specnazer_0002",
"rad_antenna_specnazer_0003",
"rad_antenna_specnazer_0004",
"rad_antenna_specnazer_0005",
"rad_antenna_specnazer_0006",
"rad_antenna_monolither",
"rad_antenna_monolither_0000",
"rad_antenna_monolither_0001",
"rad_antenna_monolither_0002",
"rad_antenna_monolither_0003",
"rad_antenna_monolither_0004",
"rad_antenna_monolither_0005",
"rad_antenna_monolither_0006",
"rad_psy_dog"

}

-- define smart terrains
smart_terrains["test1"] = {
	"rad_antena"		or 
	"rad_entrance"	or
	"rad_antenna_monolith"	or
	"rad_valley"		or
	"rad_after_valley"			or
	"rad_after_tramplin_ambush"	or
	"rad_before_tramplin_ambush"	or
	"rad_far_road_ambush"			or 
	"rad_far_road_btr_ambush"			or 
	"rad_antenna_camper" then
	rad_zombied1
	rad_zombied2
	freedom_vs_duty
	rad_antenna_specnaz
	rad_gig
	rad_pseudodogs
	rad_bloodsucker
		rad_snork1
	rad_snork2

}

-----------------------------------------------------------------------------------------
-- TEST 2
-----------------------------------------------------------------------------------------
-- Controller Test
object_list["test2"] = {
	"rad_m_flesh_e",
	"rad_m_flesh_e_0000",
	"rad_m_flesh_e_0001",
	"rad_m_flesh_e_0002",
   	"rad_m_flesh_e_0003",
	"rad_m_flesh_e_0004"
}

smart_terrains["test2"] = {
	"rad_fleshes"
}

------------------------------------------------------------------------------
-- Base Run function (load extern)
------------------------------------------------------------------------------
function r(index)
	test_utils.setup_test(object_list, smart_terrains)
	test_utils.run_test(index)
end




