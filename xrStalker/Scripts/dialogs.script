function break_dialog(first_speaker, second_speaker)
        first_speaker:stop_talk()
        second_speaker:stop_talk()
end

function kickass(first_speaker, second_speaker)
	xr_punch.punch[first_speaker:id()] = second_speaker
end

function get_money_then_leave(first_speaker, second_speaker)
	xr_motivator.storage[first_speaker:id()].meet.enabled = false
	xr_motivator.storage[first_speaker:id()].robber.enabled = true
end


-----------------------------------------------------------------------------------
-- helper
-----------------------------------------------------------------------------------
function helper_init(first_speaker, second_speaker)
	if xr_motivator.storage[first_speaker:id()].sos.npc == nil and 
	   first_speaker:relation (second_speaker) ~= game_object.enemy then
	   xr_motivator.storage[first_speaker:id()].sos.npc = second_speaker
	end
end
-------------------
--' Прекондишн на медикит
function is_medikit_present (player, helper) 
    printf ("is_medikit_present")
    return helper:object ("medkit") ~= nil
end
-------------------
--' Прекондишн на медикит
function is_medikit_no_present (helper, player) 
    printf ("is_medikit_no_present")
    return helper:object ("medkit") == nil
end
-------------------
--' Передача медикита халявная
function drop_medikit (helper, player)
    printf ("drop_medikit")
    helper:transfer_item (helper:object ("medkit"), player)
end
-------------------
--' Продажа медикита
function sell_medikit (helper, player)
    printf ("sell_medikit")
    if player:money () < 300 then return end
    helper:transfer_item (helper:object ("medkit"), player)
    player:transfer_money (300, helper)
end
-------------------
--' Имеется ли лишнее оружие
function have_extra_weapon (player, helper)
    printf ("have_extra_weapon")
    local count = helper:object_count () 
    if count == 0 then return false end
    local wpn = 0
    for a = 0, count - 1, 1 do
        local obj = helper:object (a)
        if isWeapon (obj) == true then wpn = wpn + 1 end
    end
    if wpn >= 1 then return true end
    return false    
end
-------------------
function no_have_extra_weapon (player, helper)
    printf ("no_have_extra_weapon")
    return not this.have_extra_weapon (helper, player)
end    
-------------------
--' Хорошо ли персонаж себя чувствует
function is_health_good (helper, player)
    printf ("is_health_good")
    return player.health >= 0.9 
end    
-------------------
function is_good_relation (helper, player)
    return helper:goodwill (player) > 50 
end
-------------------
function is_bad_relation (helper, player)
    return helper:goodwill (player) <= 50 
end
-------------------
function activate_helper_follow (helper, player)
    printf ("activate_helper_follow")
    xr_motivator.storage[helper:id ()].sos.need_follow = true
    xr_meet.override_meet (helper, true)
end
-------------------
function disable_helper (helper, player)
    printf ("disable_helper")
    helper:stop_talk ()
    xr_meet.override_meet (helper, false)
    xr_motivator.storage[helper:id ()].sos.npc = nil
end
-------------------
function disable_helper_2 (player, helper)
    printf ("disable_helper")
    helper:stop_talk ()
    xr_meet.override_meet (helper, false)
    xr_motivator.storage[helper:id ()].sos.npc = nil
end
-------------------
function dialogs.trade_help (helper, player)
    helper:switch_to_trade ()
end
------------------------------------------------------------------------------------
