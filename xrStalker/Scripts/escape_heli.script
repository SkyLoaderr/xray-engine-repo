--[[------------------------------------------------------------------------------------------------------------------
Управление вертолётом для Escape. Патрулирование, убийство новичков возле вагончика.
Чугай Саша

Сделать:
	- убрать внешний скрипт
--------------------------------------------------------------------------------------------------------------------]]

local heli_mgr
local actor, actor_dist
local wounded_tip

local state_before      = 0
local state_heli_fly    = 1
local state_heli_attack = 2
local state_after       = 3

local state_init

-- нужно сохранять
local state
local wounded_id
local newbies = {}
local attack_end
local actor_is_victim

function chst( new_state )
	state      = new_state
	state_init = true
end

function update()
	actor_dist = actor:position():distance_to_sqr( wounded_tip:position() )

	-- вертолёт стоит в stay-point
	if state == state_before then
		if state_init then
--			heli_mgr:set_path( "heli_path_tutorial" )
			heli_mgr.not_die = true
			heli_mgr.heliObject:TurnEngineSound( false )

			-- запомнить ID раненого и тут же его спрятать
			wounded_id = get_level_object( "esc_vagon_wounded" ):id()

			local sim = alife()
			if sim then
				sim:set_switch_online(  wounded_id, false )
				sim:set_switch_offline( wounded_id, true )
			end

			state_init = false
		end

		if actor:has_info( "tutorial_artefact_gain" ) then
			chst( state_heli_fly )
		end
	end

	-- вертолёт летит к новичкам
	if state == state_heli_fly then
		if state_init then
			heli_mgr.heliObject:TurnEngineSound( true )

			for i = 1, 2 do
				table.insert( newbies, get_level_object( "esc_vagon_newbie" .. i ) )
			end

			heli_mgr:set_enemy( newbies[1], 1000 )

			-- до определённого расстояния не стрелять
			heli_mgr.heliObject.m_use_rocket_on_attack = false
			heli_mgr.heliObject.m_use_mgun_on_attack   = false

			state_init = false
		end

		if heli_mgr.heli:position():distance_to_sqr( newbies[1]:position() ) <= 70 * 70 then
			chst( state_heli_attack )
		end
	end

	-- перестрелка с вертолётом
	if state == state_heli_attack then
		if state_init then
			attack_end = game.CTime()
			attack_end:setHMS( 0, 8, 0 )
			attack_end:add( game.get_game_time() )
			
--			printf("_ch: 1 %s", attack_end:timeToString(game.CTime.TimeToMilisecs))

			local snd = sound_object( [[characters_voice\human_01\scenario\helicopter\heli_attack]] )
			snd:play_at_pos( newbies[1], newbies[1]:position() )

			heli_mgr.heliObject.m_use_mgun_on_attack   = true
			heli_mgr.heliObject.m_use_rocket_on_attack = true

			actor:give_info_portion( "tutorial_heli_attack" )
			
			state_init = false
		end

		-- если актёр близко, то атаковать его
		if not actor_is_victim and actor_dist < 50*50 then
			table.insert( newbies, actor )
			actor_is_victim = true
		end

		-- вертолёт атакует новичков
		if not heli_mgr.enemy then
			heli_mgr:set_enemy( newbies[1], 1000 )
		else
			if not heli_mgr.enemy:alive() then
				table.remove( newbies, 1 )
				heli_mgr:set_enemy( newbies[1], 1000 )
			end
		end

		-- если все умерли
		if table.getn( newbies ) == 0 and not actor_is_victim then
--			printf("_ch: 2 %s", game.get_game_time:timeToString(game.CTime.TimeToMilisecs))
			chst( state_after )
		end

		-- если прошло время
--[[		if attack_end < game.get_game_time() and not actor_is_victim then
			-- убить всех живых
			for i, npc in newbies do
				npc:kill( heli_mgr.heli )
			end

			chst( state_after )
		end]]
	end

	-- сцена закончена
	if state == state_after then
		if state_init then
			local sim = alife()
			if sim then
				sim:set_switch_online( wounded_id, true )
			end

			actor:give_info_portion( "tutorial_wounded_start" )
			news_manager.send_news( actor, "tutorial_trader_look_vagon" )

			-- отправить вертолёт патрулировать уровень
			heli_mgr:set_path( "heli_path_patrol" )
			heli_mgr.not_die = false

			state_init = false
		end
	end

	-- рождение раненого
--[[	if ( state == state_after or
	   ( state ~= state_before and actor_dist < 50*50 ) ) and
	   actor:dont_has_info( "tutorial_wounded_start" )
	then
		local sim = alife()
		if sim then
			sim:set_switch_online( wounded_id, true )
		end

		actor:give_info_portion( "tutorial_wounded_start" )
	end]]
end

function main()
	actor       = get_actor()
	wounded_tip = get_level_object( "esc_tip_vagon_medikit" )

--	local snd = sound_object( [[characters_voice\human_01\scenario\helicopter\heli_attack]] )
--	snd:play_at_pos( actor, actor:position():add( vector():set( 80, 0, 0 ) ) )

	heli_mgr = xr_heli.HeliManager()
	heli_mgr:initialize( "heli", nil, 30, 30 )

	if not state then
		chst( state_before )
	end

--	actor:give_info_portion( "tutorial_wounded_help" )

	while true do
		update()
		heli_mgr:update()
		wait()

--[[		if actor:has_info( "tutorial_artefact_gain" ) then
			printf( "tutorial_artefact_gain" )
		end
		if actor:has_info( "tutorial_wounded_help" ) then
			printf( "tutorial_wounded_help" )
		end
		if actor:has_info( "tutorial_volk_acquainted" ) then
			printf( "tutorial_volk_acquainted" )
		end]]
	end
end
