local t = {}

function load_job(sj, gname, type, squad, groups)
	--' Radar antena
	if type == "rad_antena" then
		for i = 1, 12 do
			t = { section = "logic@rad_patroler"..i,
				idle = 0,
				prior = 5, state = {0},
				squad = squad, group = groups[1],
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end
		for i = 1, 15 do
			t = { section = "logic@rad_alarm",
				idle = 0,
				prior = 5, state = {1},
				squad = squad, group = groups[1],
				in_rest = "", out_rest = ""
			}
			table.insert(sj, t)
		end

	end

	if type == "rad_boars_migrate" then
		local boar_num = 8
		local r = 1
		for i = 1, boar_num do
			r = 1
			t = { section = "logic@rad_boars_migrate", 
				idle = 0,
				prior = 5, state = {1}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "rad_boars_migrate_sr"..r
			}
			table.insert(sj, t)
		end

		for i = 1, boar_num do
			r = 2
			t = { section = "logic@rad_boars_migrate", 
				idle = 0,
				prior = 5, state = {2}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "rad_boars_migrate_sr"..r
			}
			table.insert(sj, t)
		end

		for i = 1, boar_num do
			r = 3
			t = { section = "logic@rad_boars_migrate", 
				idle = 0,
				prior = 5, state = {3}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "rad_boars_migrate_sr"..r
			}
			table.insert(sj, t)
		end

		for i = 1, boar_num do

			t = { section = "logic@rad_boars_migrate", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "rad_boars_migrate_territory"
			}
			table.insert(sj, t)
		end
	end

	if type == "rad_chimeras" then
		local chimera_num = 2
		for i = 1, chimera_num do
			t = { section = "logic@rad_chimeras", 
				idle = 0,
				prior = 5, state = {1}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "rad_chimeras"
			}
			table.insert(sj, t)
		end

		for i = 1, chimera_num do
			t = { section = "logic@rad_chimeras", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "rad_chimeras_territory"
			}
			table.insert(sj, t)
		end
	end

	if type == "rad_boars" then
		local chimera_num = 6
		for i = 1, chimera_num do
			t = { section = "logic@rad_boars", 
				idle = 0,
				prior = 5, state = {1}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "rad_boars"
			}
			table.insert(sj, t)
		end

		for i = 1, chimera_num do
			t = { section = "logic@rad_boars", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "rad_boars_territory"
			}
			table.insert(sj, t)
		end
	end

	if type == "rad_fleshes" then
		local chimera_num = 6
		for i = 1, chimera_num do
			t = { section = "logic@rad_fleshes", 
				idle = 0,
				prior = 5, state = {1}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "rad_fleshes"
			}
			table.insert(sj, t)
		end

		for i = 1, chimera_num do
			t = { section = "logic@rad_fleshes", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "rad_fleshes_territory"
			}
			table.insert(sj, t)
		end
	end

	if type == "rad_pseudodogs" then
		local chimera_num = 6
		for i = 1, chimera_num do
			t = { section = "logic@rad_pseudodogs", 
				idle = 0,
				prior = 5, state = {1}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "rad_pseudodogs"
			}
			table.insert(sj, t)
		end

		for i = 1, chimera_num do
			t = { section = "logic@rad_pseudodogs", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "rad_pseudodogs_territory"
			}
			table.insert(sj, t)
		end
	end

	if type == "rad_zombies" then
		local chimera_num = 6
		for i = 1, chimera_num do
			t = { section = "logic@rad_zombies", 
				idle = 0,
				prior = 5, state = {1}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "rad_zombies_nest"
			}
			table.insert(sj, t)
		end
		for i = 1, chimera_num do
			t = { section = "logic@rad_zombies", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "rad_zombies_territory"
			}
			table.insert(sj, t)
		end
	end

	if type == "rad_gig" then
			t = { section = "logic@rad_gig", 
				idle = 0,
				prior = 5, state = {1}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "rad_gig"
			}
			table.insert(sj, t)

			t = { section = "logic@rad_gig", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "rad_gig_territory"
			}
			table.insert(sj, t)
	end
	if type == "freedom_vs_duty" then
			t = { section = "logic@rad_svoboda", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "",
				predicate = function(obj) return obj:profile_name() == "rad_Svoboda_master"
							end
			}
			table.insert(sj, t)

			t = { section = "logic@rad_dolg", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "",
				predicate = function(obj) return obj:profile_name() == "rad_Dolg_specnaz"
							end
			}
			table.insert(sj, t)
--------------------------------------------------------------------
			t = { section = "logic@rad_svoboda1", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "",
				predicate = function(obj) return obj:profile_name() == "rad_Svoboda_master"
							end
			}
			table.insert(sj, t)

			t = { section = "logic@rad_dolg1", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "",
				predicate = function(obj) return obj:profile_name() == "rad_Dolg_specnaz"
							end
			}
			table.insert(sj, t)			
			t = { section = "logic@rad_svoboda2", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "",
				predicate = function(obj) return obj:profile_name() == "rad_Svoboda_master"
							end
			}
			table.insert(sj, t)

			t = { section = "logic@rad_dolg2", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "",
				predicate = function(obj) return obj:profile_name() == "rad_Dolg_specnaz"
							end
			}
			table.insert(sj, t)			t = { section = "logic@rad_svoboda3", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "",
				predicate = function(obj) return obj:profile_name() == "rad_Svoboda_master"
							end
			}
			table.insert(sj, t)

			t = { section = "logic@rad_dolg3", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "",
				predicate = function(obj) return obj:profile_name() == "rad_Dolg_specnaz"
							end
			}
			table.insert(sj, t)			t = { section = "logic@rad_svoboda4", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "",
				predicate = function(obj) return obj:profile_name() == "rad_Svoboda_master"
							end
			}
			table.insert(sj, t)

			t = { section = "logic@rad_dolg4", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "",
				predicate = function(obj) return obj:profile_name() == "rad_Dolg_specnaz"
							end
			}
			table.insert(sj, t)
			t = { section = "logic@rad_svoboda5", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "",
				predicate = function(obj) return obj:profile_name() == "rad_Svoboda_master"
							end
			}
			table.insert(sj, t)

			t = { section = "logic@rad_dolg5", 
				idle = 0,
				prior = 5, state = {0}, squad = squad, group = groups[0],
				in_rest = "", out_rest = "",
				predicate = function(obj) return obj:profile_name() == "rad_Dolg_specnaz"
							end
			}
			table.insert(sj, t)
---------------------------------------------------------------------			
	end

end

function load_states(gname, type)
	if type == "rad_antena" then
		return function(gulag)
			local actor = db.actor
			if not actor then
				return gulag.state
			end

			local be
			local alarm = false

			for k, v in gulag.Object do
				be = v:best_enemy()
				if be and be:id() == actor:id() then
					alarm = true
					break
				end
			end

			if alarm then
				actor:give_info_portion( "rad_alarm" )
				return 1
			else
				actor:disable_info_portion( "rad_alarm" )
			end
			return 0
		end
	end


	if type == "rad_boars_migrate" then
		return function(gulag)
			local t = db.zone_by_name["rad_boars_migrate_territory"] 
			local actor = db.actor

			if t and actor then
				if t:inside(actor:position()) then
					return 0
				elseif game.get_game_time():diffSec( gulag.stateBegin ) > 600 then
					return math.random(1, 3)
				else
					return gulag.state
				end
			else
				return gulag.state
			end
		end
	end

	if type == "rad_boars" then
		return function(gulag)
			local t = db.zone_by_name["rad_boars_territory"] 
			local actor = db.actor

			if t and actor then
				if t:inside(actor:position()) then
					return 0
				else
					return 1
				end
			else
				return gulag.state
			end
		end
	end

	if type == "rad_chimeras" then
		return function(gulag)
			local t = db.zone_by_name["rad_chimeras_territory"] 
			local actor = db.actor

			if t and actor then
				if t:inside(actor:position()) then
					return 0
				else
					return 1
				end
			else
				return gulag.state
			end
		end
	end

	if type == "rad_fleshes" then
		return function(gulag)
			local t = db.zone_by_name["rad_fleshes_territory"] 
			local actor = db.actor

			if t and actor then
				if t:inside(actor:position()) then
					return 0
				else
					return 1
				end
			else
				return gulag.state
			end
		end
	end

	if type == "rad_gig" then
		return function(gulag)
			local t = db.zone_by_name["rad_gig_territory"] 
			local actor = db.actor

			if t and actor then
				if t:inside(actor:position()) then
					return 0
				else
					return 1
				end
			else
				return gulag.state
			end
		end
	end

	if type == "rad_pseudodogs" then
		return function(gulag)
			local t = db.zone_by_name["rad_pseudodogs_territory"] 
			local actor = db.actor

			if t and actor then
				if t:inside(actor:position()) then
					return 0
				else
					return 1
				end
			else
				return gulag.state
			end
		end
	end
	if type == "rad_zombies" then
		return function(gulag)
			local t = db.zone_by_name["rad_zombies_territory"] 
			local actor = db.actor

			if t and actor then
				if t:inside(actor:position()) then
					return 0
				else
					return 1
				end
			else
				return gulag.state
			end
		end
	end

	if type == "freedom_vs_duty" then
		return	function(gulag)
					return 0
				end
	end
end

--------------------------------------------------------------------------
-- Dynamic ltx
--------------------------------------------------------------------------
function load_ltx(gname, type)
	return nil
end

function checkStalker(npc_community, gulag_type)
	if gulag_type == "rad_antena" then
		return npc_community == "monolith"
	end
	
	if gulag_type == "freedom_vs_duty" then
		return true
	end

	return false
end

function checkMonster( npc_community, gulag_type )

	if gulag_type == "rad_boars_migrate" or gulag_type == "rad_boars" then
		return npc_community == "boar"
	end

	if gulag_type == "rad_chimeras" then
		return npc_community == "chimera"
	end

	if gulag_type == "rad_fleshes" then
		return npc_community == "flesh"
	end
	if gulag_type == "rad_gig" then
		return npc_community == "pseudo_gigant"
	end

	if gulag_type == "rad_pseudodogs" then
		return npc_community == "pseudodog"
	end

	if gulag_type == "rad_zombies" then
		return true
	end

	return false
end
