local task_ini = ini_file("misc\\task_manager.ltx")

local k,v,kk,vv = 0,0,0,0 -- инициализация итераторов
	
local task_trader_id = 0
local task_barman_id = 0
local task_ecolog_id = 0
local task_dolg_id = 0
local task_freedom_id = 0

local task_table_filled = false
local task_info = {
			trader  = {},
			barmen  = {},
			ecolog  = {},
			dolg    = {},
			freedom = {}}

function get_id(type)
	if type == "trader" then
		task_trader_id = task_trader_id + 1
		return task_trader_id
	elseif type == "barmen" then
		task_barman_id = task_barman_id + 1
		return task_barman_id
	elseif type == "ecolog" then
		task_ecolog_id = task_ecolog_id + 1
		return task_ecolog_id
	elseif type == "dolg" then
		task_dolg_id = task_dolg_id + 1
		return task_dolg_id
	elseif type == "freedom" then
		task_freedom_id = task_freedom_id + 1
		return task_freedom_id
	else
		abort("Task manager error: unknown GET_ID() type")
	end
end

-- Необходимо сформировать набор предикатов  table[string_id] = predicate()
function fill_phrase_table()
	-- Итерируемся по всем настройкам фраз
	if not task_ini:section_exist("list") then
		abort("There is no section [list] in task_manager.ltx")
	end
	local n = task_ini:line_count("list")
	local id, value = "",""
	local category = ""
	
	for i=0,n-1 do
		result, id, value	= task_ini:r_line("list",i,"","")
		
		if not task_ini:section_exist(id) then
			abort("There is no section [%s] in task_manager.ltx", id)
		end		
		-- 2. Необходимо сформировать набор предикатов  table[string_id] = predicate()
		if not task_ini:line_exist(id, "type") then
			abort("Task manager error: no type in section [%s]", id)
		end
		if not task_ini:line_exist(id, "parent") then
			abort("Task manager error: no parent in section [%s]", id)
		end
		if not task_ini:line_exist(id, "target") then
			abort("Task manager error: no target in section [%s]", id)
		end
		if not task_ini:line_exist(id, "text") then
			abort("Task manager error: no text in section [%s]", id)
		end

		type = task_ini:r_string(id, "type")
		parent = task_ini:r_string(id, "parent")		
		if task_info[parent] == nil then
			abort("Task manager error: wrong parent in section [%s]", id)
		end

		local tt = {}
		tt.name = id
		tt.type = type
		tt.target = task_ini:r_string(id, "target")
		tt.text = task_ini:r_string(id, "text")
		
		if task_ini:line_exist(id, "community") then
			tt.community = task_ini:r_string(id, "community")
		end		
		if task_ini:line_exist(id, "condlist") then
			tt.condlist = xr_logic.parse_condlist(db.actor, "task_manager", "condlist", task_ini:r_string(id, "condlist"))
		end

		table.insert(task_info[parent], tt)
	end
end

-- Создается диалог актера, в котором будут выдаваться задания.
function init_trader_task_dialog(dlg)
	if task_table_filled == false then
		fill_phrase_table()
		task_table_filled = true
	end

	local phr = dlg:AddPhrase("tm_seek_new_job",0,-1,-10000)
	local phrase_script = phr:GetPhraseScript()
	phrase_script:AddAction("task_manager.action_task_init")

	phr = dlg:AddPhrase("tm_trader_list_job",get_id("trader"),0,-10000)
	phrase_script = phr:GetPhraseScript()
	phrase_script:AddAction("task_manager.action_task_show")
	phrase_script:AddPrecondition("task_manager.precondition_trader_can_task")
		
	phr = dlg:AddPhrase("tm_trader_has_no_job",get_id("trader"),0,-10000)
	phrase_script = phr:GetPhraseScript()
	phrase_script:AddPrecondition("task_manager.precondition_trader_cannot_task")
	
	-- Изначально считаем что каждый сталкер знает ВСЮ информацию. Не забыть потом
	-- вставить инфопоршн, что сталкер сам знает информацию
	for k,v in pairs(task_info["trader"]) do
		local phrase_id = get_id("trader")
		phr = dlg:AddPhrase(v.name,phrase_id,1,-10000)		
		phrase_script = phr:GetPhraseScript()

		local phrase_id_descr = get_id("trader")
		phr = dlg:AddPhrase(v.text,phrase_id_descr, phrase_id,-10000)
		
		phr = dlg:AddPhrase("tm_seek_job_yes",get_id("trader"),phrase_id_descr,-10000)
		phrase_script = phr:GetPhraseScript()
		phrase_script:AddAction("task_manager.action_give_task")


		phr = dlg:AddPhrase("tm_seek_job_no",get_id("trader"),phrase_id_descr,-10000)
	end

	dlg:AddPhrase("tm_seek_job_abandon",get_id("trader"),1,-10000)
end


local call_count, max_count = 0,0
local show_tbl = {}
function action_task_init(actor, npc)
	local parent = get_parent(npc)
	
	max_count = 0
	show_tbl = {}
	for k,v in pairs(task_info[parent]) do	
		max_count = max_count + 1
		if calculate_predicate(npc, v) == true then
			table.insert(show_tbl, k)
		end		
	end
end
function action_give_task(actor, npc)
	db.actor:set_task_state(task.in_progress, "eliminate_lager", 0)
end
function action_task_show(npc, actor)
	local parent = get_parent(npc)
	
	for k,v in pairs(show_tbl) do
		db.actor:give_talk_message(task_info[parent][v].name, "ui\\ui_icons_task", Frect():set(350,150,50,50),"iconed_trade_info")
	end
end


function get_parent(npc)
	local story_id = npc:story_id()
	if story_id == 003 then
		return "trader"
	elseif story_id == 500 then
		return "barman"
	elseif story_id == 902 then
		return "ecolog"
	elseif story_id == 507 then
		return "dolg"
	elseif story_id == 707 then
		return "freedom"
	end
	abort("Task manager error: wrong parent story_id[%s]", story_id)
end
function precondition_trader_can_task(npc, actor)
	return table.getn(show_tbl) > 0
end
function precondition_trader_cannot_task(npc, actor)
	return table.getn(show_tbl) == 0
end




function calculate_predicate(npc, tbl)
	local parent = get_parent(npc)

	if tbl.parent ~= nil then
		if tbl.parent ~= parent then return false end
	end
	if tbl.community ~= nil then
		if tbl.community ~= db.actor:character_community() then return false end
	end
	if tbl.condlist ~= nil then
		if xr_logic.pick_section_from_condlist(db.actor, db.actor, tbl.condlist) ~= "true" then return false end
	end
	-- Проверка по таргету
	
	return true
end