----------------------------------------------------------------------------------------------------
-- Button
----------------------------------------------------------------------------------------------------
-- Разработчик: Andrey Fidrya (Zmey) af@svitonline.com
----------------------------------------------------------------------------------------------------

class "ph_button"

function ph_button:__init(obj, storage)
	self.object = obj
	self.st = storage
end

function ph_button:reset_scheme()
	--local visual = self.object:Visual()
	--local ska = visual:dcast_PSkeletonAnimated()
	--ska:PlayCycle(self.st.anim)

	self.last_hit_tm = device():time_global()
	self.object:set_callback(callback.hit, self.hit_callback, self)
	self.object:set_callback(callback.use_object, self.use_callback, self)
end

function ph_button:update(delta)
end

function ph_button:hit_callback(obj, amount, local_direction, who, bone_index)
	printf("_bp: ph_button:hit_callback: obj='%s', amount=%d, who='%s'", obj:name(), amount,
		if_then_else(who ~= nil, who:name(), "nil"))
	if device():time_global() - self.last_hit_tm > 500 then
		if db.storage[self.object:id()].active_scheme then
			if xr_logic.try_switch_to_another_section(obj, self.st, db.actor) then
				return
			end
		end
		self.last_hit_tm = device():time_global()
	end
end

function ph_button:use_callback(victim, who)
	printf("_bp: ph_button:use_callback: [%s] used by [%s]",
		victim:name(), who:name())

	if db.storage[self.object:id()].active_scheme then
		if xr_logic.try_switch_to_another_section(victim, self.st, db.actor) then
			return
		end
	end
end

---------------------------------------------------------------------------------------------------------------------
function add_to_binder(npc, ini, scheme, section, storage)
	printf("DEBUG: add_to_binder: npc:name()='%s', scheme='%s', section='%s'", npc:name(), scheme, section)

 	local new_action = ph_button(npc, storage)

	xr_logic.subscribe_action_for_events(npc, storage, new_action)
end

function set_scheme(npc, ini, scheme, section, gulag_name)
	local st = xr_logic.assign_storage_and_bind(npc, ini, scheme, section)

	st.logic     = xr_logic.cfg_get_switch_conditions(ini, section, npc)

	st.anim = utils.cfg_get_string(ini, section, "anim", npc, true, "")
end

