

local trade_manager = {
}





function trade_init(npc, cfg)
	trade_manager[npc:id()] = {}

	trade_manager[npc:id()].config = ini_file(cfg)
	
	-- коэфициенты покупки
	local str = utils.cfg_get_string(trade_manager[npc:id()].config, "trader", "buy_condition", npc, true, "")
	if str == nil then
		abort("Incorrect trader settings. Cannot find buy_condition. [%s]->[%s]", npc:name(), cfg)
	end
	trade_manager[npc:id()].buy_condition = xr_logic.parse_condlist(npc, "trade_manager", "buy_condition", str)
	
	-- коэфицисенты продажи
	str = utils.cfg_get_string(trade_manager[npc:id()].config, "trader", "sell_condition", npc, true, "")
	if str == nil then
		abort("Incorrect trader settings. Cannot find sell_condition. [%s]->[%s]", npc:name(), cfg)
	end	
	trade_manager[npc:id()].sell_condition = xr_logic.parse_condlist(npc, "trade_manager", "sell_condition", str)
	
	-- список закупки
	str = utils.cfg_get_string(trade_manager[npc:id()].config, "trader", "buy_supplies", npc, false, "")
	if str ~= nil then
		trade_manager[npc:id()].buy_supplies = xr_logic.parse_condlist(npc, "trade_manager", "buy_supplies", str)
	end

	update(npc)
end


function update(npc)
	local tt = trade_manager[npc:id()]
	
	printf("NPC: [%s]", npc:name())
	local str = xr_logic.pick_section_from_condlist(db.actor, npc, tt.buy_condition)
	if tt.current_buy_condition ~= str then
		npc:buy_condition(tt.config, str)
	end

	str = xr_logic.pick_section_from_condlist(db.actor, npc, tt.sell_condition)
	if tt.current_sell_condition ~= str then
		npc:sell_condition(tt.config, str)
	end
	
end