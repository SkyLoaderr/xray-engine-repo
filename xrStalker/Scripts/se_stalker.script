class "se_stalker"	(cse_alife_human_stalker)
--------------------
function se_stalker:__init (section) super (section)
	self.ini = nil
	self.ini_initialized = false

	self.spawner_present = false

	self.smart_terrain_conditions = nil
	self.smart_terrain_conditions_initialized = false
end
--------------------
function se_stalker:get_ini()
	if not self.ini_initialized then
		self.ini             = self:spawn_ini ()
		self.ini_initialized = true

		self.spawner_present = self.ini:section_exist ("spawner")
	end
end
--------------------
function se_stalker:can_switch_offline ()
	return cse_alife_human_stalker.can_switch_offline (self)
end
--------------------
function se_stalker:can_switch_online ()
	self:get_ini()

	if self.ini == nil or self.spawner_present == false	then
		return cse_alife_human_stalker.can_switch_online (self)
	end
    
    if db.actor ~= nil and db.actor:alive () == false then
       return self.online
    end    
    
	if self.online == false then
   	    -- если игрока нет, то в оффлайн
        if db.actor == nil then 
			return false 
		end
	    return xr_spawner.check_spawn (self) and cse_alife_human_stalker.can_switch_online (self)
    else
        if db.actor == nil then 
			return true 
		end
        if xr_spawner.check_spawn (self) == true then 
           return true
        end
        return false --cse_alife_human_stalker.can_switch_online (self)
    end    	    

	--return xr_spawner.check_spawn (self)
end
--------------------
function se_stalker:on_register()
	cse_alife_human_stalker.on_register( self )
	if(actor_stats.add_to_ranking~=nil)then
		actor_stats.add_to_ranking(self.id)
	end
end
--------------------
function se_stalker:on_unregister()
	cse_alife_human_stalker.on_unregister( self )
	if(actor_stats.remove_from_ranking~=nil)then
		actor_stats.remove_from_ranking(self.id)
	end
end
--------------------
function se_stalker:read_smart_terrain_conditions()
	return smart_terrain.read_smart_terrain_conditions( self )
end
--------------------
function se_stalker:get_smart_terrain_conditions()
	return smart_terrain.get_smart_terrain_conditions( self )
end
