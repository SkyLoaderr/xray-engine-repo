--------------------------------------------------------------------------------------------------------
-- Dialog & InfoPortions Function
--------------------------------------------------------------------------------------------------------

--------------------------------------------------------------------------------------------------------
-- Trader
--------------------------------------------------------------------------------------------------------
function trader_alredy_give_job(trader, actor)
	local actor = db.actor
	if (actor:has_info("esc_kill_bandits_quest_have") and actor:dont_has_info("esc_kill_bandits_quest_done")) or
	   (actor:has_info("agroprom_military_case") and actor:dont_has_info("agroprom_military_case_done")) or
	   (actor:has_info("escape_blockpost_case") and actor:dont_has_info("escape_blockpost_case_done")) or
	   (actor:has_info("cit_documents_need") and actor:dont_has_info("cit_documents_give")) or
	   (actor:has_info("tutorial_artefact_start") and actor:dont_has_info("tutorial_artefact_done")) or
	   (actor:has_info("tutorial_wounded_start") and actor:dont_has_info("esc_serious_talk"))
	then
		return true
	end
	return false 
end

function trader_give_extra_job(trader, actor)
	local actor = db.actor
	if 	   (actor:has_info("escape_blockpost_case") and actor:dont_has_info("escape_blockpost_case_done")) or
		   (actor:has_info("cit_documents_need") and actor:dont_has_info("cit_documents_give"))
	then
		return true
	end
	return false
end

function trader_need_extra_job(trader, actor)
	return not this.trader_give_extra_job(trader, actor)
end

function is_tutorial(trader, actor)
	return not db.actor:has_info("tutorial_end")
end
function is_not_tutorial(trader, actor)
 return not this.is_tutorial(trader, actor)
end

function trader_dont_give_job(first_speaker, second_speaker)
	return not trader_alredy_give_job(first_speaker, second_speaker)
end

function finalize_quests(first_speaker, second_speaker)
	if tutorial_artefact_end(first_speaker, second_speaker) == true or
	   tutorial_wounded_end(first_speaker, second_speaker) == true or
	   factory_bandits_end(first_speaker, second_speaker) == true
	then
		return true
	end
	return false
end

function not_finalize_quests(first_speaker, second_speaker)
	return not this.finalize_quests(first_speaker, second_speaker)	
end

function tutorial_artefact_end(first_speaker, second_speaker)
	local actor = db.actor
	local tutorial_artefact = first_speaker:object("af_blood_tutorial")
	if actor:has_info("tutorial_artefact_start") and 
	   actor:dont_has_info("tutorial_artefact_done") and
	   tutorial_artefact ~= nil
	then
		return true
	end
	return false
end

function tutorial_wounded_end(first_speaker, second_speaker)
	local actor = db.actor
	local wounded_flash = first_speaker:object("esc_wounded_flash")
	if actor:has_info("tutorial_wounded_start")	and 
	   actor:dont_has_info("esc_serious_talk") and
	   wounded_flash ~= nil
	then
		return true
	end
	return false
end

function factory_bandits_end(first_speaker, second_speaker)
	local actor = db.actor
	if actor:has_info("esc_kill_bandits_quest_have")	and 
	   actor:has_info("esc_kill_bandits_quest_kill")	and 
	   actor:dont_has_info("esc_kill_bandits_quest_done")
	then
		return true
	end
	return false
end



function trader_dont_has_job(first_speaker, second_speaker)
    if trader_need_free_factory(first_speaker, second_speaker) == false and
	   trader_need_military_case(first_speaker, second_speaker) == false and
	   trader_need_blockpost_box(first_speaker, second_speaker) == false and
	   trader_need_deadcity(first_speaker, second_speaker) == false
	then
		return true
	end
	return false
end


--' Escape tutorial artefact
function have_tutorial_artefact(first_speaker, second_speaker)
  	return first_speaker:object("af_blood_tutorial") ~= nil
end
function give_medkit(first_speaker, second_speaker)
	local medkit = first_speaker:object("medkit")
	if medkit ~= nil then
		dialogs.relocate_item(first_speaker, medkit, "in")
	else
		printf("ERROR: Escape trader dont has a medkit.")
	end
end
function give_tutorial_artefact(first_speaker, second_speaker)
	local artefact = first_speaker:object("af_blood_tutorial")
	dialogs.relocate_item(second_speaker, artefact, "out")
end


--' Meet fox
function have_fox_info(first_speaker, second_speaker)
  	return first_speaker:object("fox_flash") ~= nil
end

function give_flash_to_actor(npc, actor)
	local item = npc:object("fox_flash")
	if item then
		dialogs.relocate_item(npc, item, "in")
	end
end

--' fox help

function transfer_medikit_to_fox (player, wounded)
    local obj = player:object("medkit")
    dialogs.relocate_item(wounded, obj, "out")   
	wounded:set_relation(game_object.friend, player)
	db.actor:give_info_portion("escape_fox_heal")
end


--' Escape blockpost box
function have_blockpost_case(first_speaker, second_speaker)
  	return first_speaker:object("quest_case_01") ~= nil
end
function trader_need_blockpost_box(actor, npc)
--	if true then return false end
	printf ("FIRST_SPEAKER : %s", actor:name ())
	printf ("SECOND_SPEAKER : %s", npc:name ())
	if actor:has_info("esc_return") and
	   actor:dont_has_info("escape_blockpost_case")
	then
		return true
	end
	return false
end

function trader_test(actor, npc)
	printf ("!!!!!")	
	return true
end

function give_blockpost_case(first_speaker, second_speaker)
	local case = first_speaker:object("quest_case_01")
	dialogs.relocate_item(second_speaker, case, "out")
	dialogs.relocate_money(second_speaker, 2000, "in")
end

--' Agroprom military case
function trader_need_military_case(first_speaker, second_speaker)
	local actor = db.actor
    if actor ~= nil and
	   actor:has_info("esc_kill_bandits_quest_done") and
	   actor:dont_has_info("agroprom_military_case")
	then
		return true
	end
	return false
end

--' Escape trader artefact
function have_artefact_from_fleshes(first_speaker, second_speaker)
	local actor = db.actor
	if actor ~= nil and
	   (actor:object("af_vyvert") ~= nil or
	   actor:object("af_gravi") ~= nil or
	   actor:object("af_gold_fish") ~= nil)
	then
		return true
	end
  	return false
end


--' Kill bandits on factory
function trader_need_free_factory(first_speaker, second_speaker)
	local actor = db.actor
    if actor ~= nil and
	   actor:has_info("tutorial_end") and
	   actor:dont_has_info("esc_kill_bandits_quest_have")
	then
		return true
	end
	return false
end
--' ящик с блокпоста
function trader_need_blockpost_box(first_speaker, second_speaker)
	local actor = db.actor
    if actor ~= nil and
	   actor:has_info("tutorial_end") and
	   actor:has_info("esc_return") and
	   actor:dont_has_info("esc_blockpost_case")
	then
		return true
	end
	return false
end
--' Ќайти лагерь наемников
function trader_need_deadcity(first_speaker, second_speaker)
	local actor = db.actor
    if actor ~= nil and
	   actor:has_info("tutorial_end") and
	   actor:has_info("escape_lager_killers_die") and
	   actor:dont_has_info("cit_documents_need")
	then
		return true
	end
	return false
end


--' tutorial wounded in vagon
function wounded_need_help(first_speaker, second_speaker)
	local actor = db.actor
	return actor ~= nil and actor:dont_has_info( "tutorial_wounded_help" )
end

--' trader needs military documents
function trader_need_military_document(first_speaker, second_speaker)
	local actor = db.actor
    if actor ~= nil and
	   actor:has_info("escape_blockpost_case_done") and
	   actor:dont_has_info("agroprom_military_case")
	then
		return true
	end
	return false
end

--' trader dialog about docs from labx18
function actor_has_documents (actor, npc)
	if actor:object("dar_document4") then
		return true
	else
		return false
	end
end

--' Wolf has a job
function wolf_dont_has_job(first_speaker, second_speaker)
    if wolf_need_dynamite(first_speaker, second_speaker) == false
	then
		return true
	end
	return false
end

function wolf_need_dynamite(first_speaker, second_speaker)
	local actor = db.actor
    if actor ~= nil and
	   actor:dont_has_info("escape_dynamite_start") and
	   actor:dont_has_info("escape_dynamite_have") and
	   actor:dont_has_info("escape_dynamite_done")
	then
		return true
	end
	return false
end

--' WOLF
function has_novice_access(actor, npc)
	if db.actor then
		return db.actor:has_info("esc_path_lo_lager")
	end
	return false
end
function not_has_novice_access(actor, npc)
	return not this.has_novice_access(actor, npc)
end
function need_wolf_greet(actor, npc)
	if db.actor then
		return db.actor:has_info("tutorial_wounded_help") and db.actor:dont_has_info("tutorial_wounded_volk_greet")
	end
	return false	
end
function not_need_wolf_greet(actor, npc)
	return not this.need_wolf_greet(actor, npc)
end

function wolf_speak(actor, npc)
	if db.actor then
		return db.actor:has_info("tutorial_wounded_death") or (db.actor:has_info("tutorial_wounded_help") and db.actor:has_info("tutorial_wounded_volk_greet"))
	end
	return false
end


--' Escape dynamite for Wolf
function transfer_wolf_ammo_to_actor(first_speaker, second_speaker)
	local obj = first_speaker:object("af_medusa")
	if obj ~= nil then
		dialogs.relocate_item(first_speaker, obj, "in")
	end
end

function have_dynamite(first_speaker, second_speaker)
  	return first_speaker:object("dynamite") ~= nil
end
function give_dynamite(first_speaker, second_speaker)
	local case = first_speaker:object("dynamite")
	dialogs.relocate_item(second_speaker, case, "out")
	dialogs.relocate_money(second_speaker, 1000, "in")
end


--' Escape Wounded's flash
function wounded_give_flash(first_speaker, second_speaker)
	local wounded_flash = second_speaker:object("esc_wounded_flash")
	dialogs.relocate_item(second_speaker, wounded_flash, "in")
end

function have_wounded_flash(first_speaker, second_speaker)
  	return first_speaker:object("esc_wounded_flash") ~= nil
end

function give_wounded_flash(first_speaker, second_speaker)
	local wounded_flash = first_speaker:object("esc_wounded_flash")
	dialogs.relocate_item(second_speaker, wounded_flash, "out")
	dialogs.relocate_money(second_speaker, 250, "in")
end

function give_knife_to_actor(first_speaker, second_speaker)
	local knife = second_speaker:object("wpn_knife")
	if knife ~= nil then
		dialogs.relocate_item(second_speaker, knife, "in")
	end
end

function path_to_lager(actor, npc)
	local actor = db.actor
    if actor ~= nil and
	   (actor:has_info("tutorial_wounded_death") 
	   or actor:has_info("tutorial_wounded_help")) and
	   actor:dont_has_info("esc_path_to_lager") and
	   actor:dont_has_info("esc_wolf_dead")
	then
		xr_effects.esc_wolf_thanks(actor, npc)
	end
end


--' Escape bandits factory
function give_factory_reward_trader(first_speaker, second_speaker)
	dialogs.relocate_money(second_speaker, 500, "in")
end

--' Give X-18 documents read

function give_documents_reward (first_speaker, second_speaker)
	dialogs.relocate_money(first_speaker, 1000, "out")
end


--' Kill killers raid
function give_reward_killers(first_speaker, second_speaker)
	dialogs.relocate_money(second_speaker, 2500, "in")
end


--' Soldiers on bridge
function has_soldiers_bribe(actor, npc)
	return actor:money() >= 500
end

function give_soldiers_bribe(actor, npc)
	dialogs.relocate_money(npc, 500, "out")	
end