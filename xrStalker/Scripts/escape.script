local raid_storage = {}
--------------------------------------------------------------------------------------------------------
function raid_init (npc)
    local ini = npc:spawn_ini ()
    if ini == nil or ini:section_exist ("escape_raid") == false then
       return false 
    end
    
    if ini:line_exist ("escape_raid", "raider") == false then
       return false
    end
    
    local t = {raider = ini:r_bool ("escape_raid", "raider"),
               npc_id = npc:id (),
               name = npc:name ()
              }
    if t.raider == false then
       return false
    end
    
    table.insert (raid_storage, t)
    
    local sim = alife ()
    if sim ~= nil then
       sim:set_switch_online  (npc:id (), false) 
       sim:set_switch_offline (npc:id (), true)
    end   
    
--    printf ("Object %s added to ESCAPE_RAID", npc:name ())
    
    return true
end
--------------------------------------------------------------------------------------------------------
function start_raid ()
    local size = table.getn (raid_storage)
    if size == 0 then return false end
    local sim = alife ()
    
    for a = 1, size, 1 do
        if sim ~= nil then
           sim:set_switch_online (raid_storage[a].npc_id, true)
           sim:set_switch_offline (raid_storage[a].npc_id, false)
        end
        local npc = level.get_level_object (raid_storage[a].name)
        if npc ~= nil then
            xr_patrol.set_patrol (npc)
            xr_follower.set_follower (npc)
        end
    end                
end


--------------------------------------------------------------------------------------------------------
-- Dialog & InfoPortions Function                                                                                                    
--------------------------------------------------------------------------------------------------------
function give_weapon_to_loser(first_speaker, second_speaker)
	local wpn = nil
	if(second_speaker:object("wpn_ak74")) then
		wpn = second_speaker:object("wpn_ak74")
	else
		wpn = second_speaker:object("wpn_toz34")
	end
	second_speaker:transfer_item (wpn, first_speaker)
end

