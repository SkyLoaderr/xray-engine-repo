local raid_storage = {}
--------------------------------------------------------------------------------------------------------
function raid_init (npc)
    local ini = npc:spawn_ini ()
    if ini == nil or ini:section_exist ("escape_raid") == false then
       return false
    end

    if ini:line_exist ("escape_raid", "raider") == false then
       return false
    end

    local t = {raider = ini:r_bool ("escape_raid", "raider"),
               npc_id = npc:id (),
               name = npc:name ()
              }
    if t.raider == false then
       return false
    end

    table.insert (raid_storage, t)

    local sim = alife ()
    if sim ~= nil then
       sim:set_switch_online  (npc:id (), false)
       sim:set_switch_offline (npc:id (), true)
    end

--    printf ("Object %s added to ESCAPE_RAID", npc:name ())

    return true
end
--------------------------------------------------------------------------------------------------------
function start_raid ()
    local size = table.getn (raid_storage)
    if size == 0 then return false end
    local sim = alife ()

    for a = 1, size, 1 do
        if sim ~= nil then
           sim:set_switch_online (raid_storage[a].npc_id, true)
           sim:set_switch_offline (raid_storage[a].npc_id, false)
        end
        local npc = level.get_level_object (raid_storage[a].name)
        if npc ~= nil then
            xr_patrol.set_patrol (npc)
            xr_follower.set_follower (npc)
        end
    end
end


--------------------------------------------------------------------------------------------------------
-- Dialog & InfoPortions Function
--------------------------------------------------------------------------------------------------------
function give_kalash_to_loser(first_speaker, second_speaker)
	local weap = first_speaker:object("wpn_ak74")
	first_speaker:transfer_item (weap, second_speaker)
end
function give_toz_to_loser(first_speaker, second_speaker)
	local weap = first_speaker:object("wpn_toz34")
	first_speaker:transfer_item (weap, second_speaker)
end
function haveAK(first_speaker, second_speaker)
	return( first_speaker:object("wpn_ak74") ~= nil )
end
function haveTOZ(first_speaker, second_speaker)
	return( first_speaker:object("wpn_toz34") ~= nil )
end

function bandits_dead(first_speaker, second_speaker)
    return(first_speaker:has_info("escape_factory_bandits_dead"))
end

function bandits_alive(first_speaker, second_speaker)
    return(first_speaker:dont_has_info("escape_factory_bandits_dead"))
end

function set_dialog_thank(first_speaker, second_speaker)
	first_speaker:set_start_dialog("escape_novice_thank_actor")
end


-- Trader
function have_blockpost_case(first_speaker, second_speaker)
	return( first_speaker:object("quest_case_01") ~= nil )
end
function give_blockpost_case(first_speaker, second_speaker)
	local case = first_speaker:object("quest_case_01")
	first_speaker:transfer_item (case, second_speaker)
	second_speaker:transfer_money (500, first_speaker)
end
function trader_need_blockpost_box(first_speaker, second_speaker)
	local actor = level.actor()
       	if actor ~= nil and
	   actor:dont_has_info("escape_need_blockpost_case") and
	   actor:dont_has_info("escape_have_blockpost_case")
	then
		return true
	end
	return false
end
function trader_alredy_give_job(first_speaker, second_speaker)
	local actor = level.actor()
       	if actor ~= nil and
	   actor:has_info("escape_need_blockpost_case") and
	   actor:dont_has_info("escape_have_blockpost_case")
	then
		return true
	end
	return false
end
function trader_dont_has_job(first_speaker, second_speaker)
	local actor = level.actor()
       	if actor ~= nil and
	   (actor:has_info("escape_need_blockpost_case") or
	   actor:has_info("escape_have_blockpost_case"))
	then
		return true
	end
	return false
end