function boarcallback (obj, action_type, index)
  	local ptr = patrol (obj:patrol ())
	printf ("Path : %s, index : %d", obj:patrol (), index) 
end


function main ()

    local niva = get_level_object ("niva")

    niva:script (true, s_test.script_name ())

	action (niva, object ("left_light", object.activate), cond (cond.time_end, 1000))
	action (niva, object ("right_light", object.activate), cond (cond.time_end, 1000))
    action (niva, move (move.on + move.up + move.fwd, 1.0), cond (cond.time_end, 1000000000))

--    while niva:action () do wait () end

--    niva:script (false, s_test.script_name ())

	local boar = get_level_object ("boar")
	boar:script (true, s_test.script_name ())
	boar:set_callback (s_test.boarcallback, game_object.movement)
	action (boar, move (move.act_walk_fwd, patrol ("boarway")), cond (cond.time_end, 100000000))

	local t = {
			  get_level_object ("m_stalker_e0000"),
			  get_level_object ("m_stalker_e0001"),			
			  get_level_object ("m_stalker_e0002"),
			  get_level_object ("m_stalker_e0003"),
			  get_level_object ("m_stalker_e0004")
			  }

	local paths = {
			  patrol ("way0000"),	
			  patrol ("way0001"),
			  patrol ("way0002"),
			  patrol ("way0003"),
			  patrol ("way0004")
			  }

	for a = 1, table.getn (t), 1 do
	    t[a]:script (true, s_test.script_name ())
--		action (t[a], move (move.standing, move.run, move.line, paths[a]),
--			    anim (anim.danger), cond (cond.move_end))
		end

	wait (5000)
	local h = hit ()
    h.power = 1
    h.direction = vector():set (0, 1, 0)
    h:bone ("bip01_pelvis")
    h.draftsman = get_actor ()
    h.impulse = 5000
    h.type  = hit.strike

	for a = 1, table.getn (t), 1 do  t[a]:hit (h) end



	wait (5000);

	for a = 1, table.getn (t), 1 do
	    reset_action (t[a], s_test.script_name ())
		action (t[a], move (move.standing, move.run, move.line, paths[a]),
			    anim (anim.danger), cond (cond.move_end))
		end

	while t[1]:action () do wait () end 

	for a = 1, table.getn (t), 1 do
	    t[a]:script (fale, s_test.script_name ())
		end

	boar:script (false, s_test.script_name ())

 end