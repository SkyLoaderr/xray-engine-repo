-- file:		UI_MM_OPT_MAIN.script
-- created:		01.07.2005
-- description:	options dialog
-- author:		Serge Vynnychenko
--

class "options_dialog" (CUIScriptWnd)

function options_dialog:__init() super()
   self:SetFont(GetFontMedium()) --set base font for dialog.
   
   self:InitControls()
   self:InitCallBacks()
end

function options_dialog:__finalize()

end

function options_dialog:InitControls()	
	self:Init(0,0,1024,768)
	self:Enable(true)
	
	local xml = CScriptXmlInit()
	xml:ParseFile("ui_mm_opt.xml")
	
	
	
	xml:InitStatic("background", self)
	self.dialog = xml:InitStatic("main_dialog:dialog", self)
	
	xml:InitLabel("main_dialog:cap_options", self.dialog)
		
	self.dlg_video = ui_mm_opt_video.opt_video()
	self.dlg_video:InitControls(55,74, xml, self)
	self.dialog:AttachChild(self.dlg_video)

	self.dlg_sound = ui_mm_opt_sound.opt_sound()
	self.dlg_sound:InitControls(55,74, xml, self)
	self.dlg_sound:Show(false)
	self.dialog:AttachChild(self.dlg_sound)
	
	self.dlg_gameplay = ui_mm_opt_gameplay.opt_gameplay()
	self.dlg_gameplay:InitControls(55,74, xml, self)
	self.dlg_gameplay:Show(false)
	self.dialog:AttachChild(self.dlg_gameplay)
	
	self.dlg_controls = ui_mm_opt_controls.opt_controls()
	self.dlg_controls:InitControls(55,74, xml, self)
	self.dlg_controls:Show(false)
	self.dialog:AttachChild(self.dlg_controls)

	local btn
	btn = xml:Init3tButton("main_dialog:btn_accept", self.dialog)
	self:Register(btn, "btn_accept")
	btn = xml:Init3tButton("main_dialog:btn_cancel", self.dialog)
	self:Register(btn, "btn_cancel")
	
	
	self.tab = xml:InitTab("main_dialog:tab", self.dialog)
	self:Register(self.tab, "tab")
	
	self.dlg_video_adv = ui_mm_opt_video_adv.opt_video_adv()
	self.dlg_video_adv:InitControls(55,40, xml, self)
	self.dlg_video_adv:Show(false)
	self.dialog:AttachChild(self.dlg_video_adv)
end

function options_dialog:UpdateControls()
	local opt = COptionsManager()
	opt:SetCurrentValues("mm_opt_video")
	opt:SetCurrentValues("mm_opt_gameplay")
	opt:SetCurrentValues("mm_opt_sound")
	opt:SetCurrentValues("mm_opt_controls")
	opt:SetCurrentValues("key_binding")
end


function options_dialog:InitCallBacks()
	self:AddCallback("tab",					ui_events.TAB_CHANGED,		self.OnTabChange,	self)
	self:AddCallback("btn_advanced",		ui_events.BUTTON_CLICKED,	self.OnBtnAdvVideo,	self)
	self:AddCallback("btn_accept",			ui_events.BUTTON_CLICKED,	self.OnBtnAccept,	self)
	self:AddCallback("btn_cancel",			ui_events.BUTTON_CLICKED,	self.OnBtnCancel,	self)
end

function options_dialog:OnBtnAccept()
	
	local opt = COptionsManager()
	
--	opt:SaveValues("mm_opt_video")
--	opt:SaveValues("mm_opt_sound")
--	opt:SaveValues("mm_opt_controls")
--	opt:SaveValues("key_binding")
--	console:execute("vid_restart")
	
	local i = self.tab:GetActiveIndex()
	if i == 0 then
		local console = get_console()
		opt:SaveValues("mm_opt_video")
		console:execute("vid_restart")
	elseif i == 1 then		
		opt:SaveValues("mm_opt_sound")
	elseif i == 2 then
--		self.dlg_gameplay:Show(true)
		opt:SaveValues("mm_opt_gameplay")
	elseif i == 3 then
		opt:SaveValues("mm_opt_controls")
		opt:SaveValues("key_binding")
	end

end

function options_dialog:OnBtnCancel()
	self:GetHolder():start_stop_menu(self,true)
	self.owner:Show(true)
end

function options_dialog:OnTabChange()
	self.dlg_video:Show(false)
	self.dlg_sound:Show(false)
	self.dlg_gameplay:Show(false)
	self.dlg_controls:Show(false)
	
	local i = self.tab:GetActiveIndex()
	if i == 0 then
		self.dlg_video:Show(true)		
	elseif i == 1 then
		self.dlg_sound:Show(true)
	elseif i == 2 then
		self.dlg_gameplay:Show(true)
	elseif i == 3 then
		self.dlg_controls:Show(true)
	end
end

function options_dialog:OnBtnAdvVideo()
	self.dlg_video_adv:Show(true)
end

function options_dialog:OnKeyboard(dik, keyboard_action)
	CUIScriptWnd.OnKeyboard(self,dik,keyboard_action)
	
	local bind = dik_to_bind(dik)
	local console = get_console()
	
	if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
		if dik == DIK_keys.DIK_ESCAPE then
			if self.dlg_video_adv:IsShown() then
				self.dlg_video_adv:Show(false)
			else
				self:GetHolder():start_stop_menu(self,true)
				self.owner:Show(true)
			end
		end	
	
	end
   
	return true
end

