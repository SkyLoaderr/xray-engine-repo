// Кровосос на ростке. Стоит в нулевой точке, и смотрит в направлении первой точки. При
// подходе игрока к нему ближе заданной дистанции, он поворачивается в его сторону, становится
// видимым, если у него есть враг, орет несколько секунд, и отпускается из под скрипта на 
// заданное время. Если время прошло, и у него нет врагов, то он берется опять под скрипт, 
// и опять садится, и ждет врагов. 
// Биндится к монстру.

local min_distance	= 10		// Дистанци, ближе которой кровосос отпускается из под скрипта

class "CRostokBloodSucker" (object_binder)

function CRostokBloodSucker:__init(obj) super(obj)
end 

----------------------------------------------------------------------------------------------------

function CRostokBloodSucker:reload(section)
	object_binder.reload(self, section)
	
	local char_ini		= self.object:spawn_ini()
	self.path       	= patrol(utils.mob_get_string(char_ini, "rostok_bloodsuceker", "path", nil, self.object, true))
	self.add_time		= utils.mob_get_number(char_ini, "rostok_bloodsuceker", "time", nil, self.object, false, 60)
	self.zone			= utils.mob_get_string(char_ini, "rostok_bloodsuceker", "zone", nil, self.object, false)
	
	self.not_working	= false
	self.on_position	= false
	
	self:set_script_control(true)
	self.time			= 0
	self.need_freed		= false	
end

----------------------------------------------------------------------------------------------------

function CRostokBloodSucker:update(delta)
	object_binder.update(self, delta)
	
	if(self.not_working) then return end
	
	if(self.object:alive() == false) then
		// Если умерли, то отпускаем и больше не будем апдейтить
		self:set_script_control(false)
		self.not_working	= true
		return
	end
	
	// Если надо было поставить callback на зону, но еще не поставили, так как зона еще не появилась, то ставим
	if(self.zone and self.zone_obj == nil) then
		self.zone_obj		= level.object(self.zone)
		if(self.zone_obj) then
			self.zone_obj:set_callback(self, "actor_enter", true)
		end
	end
	
	// Необходимо отпустить из под скрипта. Поворачиваемся на актера, орем и отпускаем
	if(self.need_freed) then
		if(self.object:action() == nil) then
			if(self.object:get_invisible() == true and self.object:get_enemy()) then
				// Невидимый. Становимся видимым и орем(это только если нет врага)
				action(self.object, anim(anim.look_around, 0), sound(sound.attack), cond(cond.time_end, 4000))
				self.object:set_invisible(false)
			else
				// Отпускаем
				self:set_script_control(false)
				self.need_freed	= false
			end
		else
			return
		end
	end
	
	if(self.object:get_script()) then
		// Обьект под скриптом
		self:action()
	else
		// На данный момент мы отпустили монстра из под скрипта
		if(device():time_global() > self.time and self.object:get_enemy() == nil) then
			// Без скрипта уже больше заданного времени и нет врага - берем под скрипт
			self:set_script_control(true)
		end
	end
end

----------------------------------------------------------------------------------------------------

function CRostokBloodSucker:action()
	if(self.object:get_monster_hit_info().time ~= 0) then
		// Получили хит, отпускаем из под скрипта
		self:set_script_control(false)
	end
	
	if(level.actor() and distance_between(self.object, level.actor()) < min_distance) then
		// Актер подошел на опасное расстояние
		self:freed()
	end
	
	if(self.object:action()) then return end
	
	printf("distance = %f", self.object:position():distance_to(self.path:point(0)))
	
	if(self.on_position == false) then
		if(self.object:position():distance_to(self.path:point(0)) > 1) then
			// Далеко от точки сидения, идем и садимся
			action(self.object, move(move.walk_fwd, self.path:point(0), 1), sound(sound.idle), cond(cond.move_end))
			action(self.object, look(look.point, self.path:point(1)), anim(anim.turn), cond(cond.look_end))
		else
			self.on_position	= true
			action(self.object, anim(anim.sit_idle), cond(cond.time_end, 1000000))
			self.object:set_invisible(true)
		end
	else
		action(self.object, anim(anim.sit_idle), cond(cond.time_end, 1000000))	
	end
end

function CRostokBloodSucker:actor_enter(zone, obj)
	if(level.actor() and level.actor():id() == obj:id()) then
		// В нашу зону зашел актер, есили монстр под скриптом, то его отпускаем
		printf("actor enter")
		if(self.object:get_script()) then
			self:freed()
		end
	end
end

----------------------------------------------------------------------------------------------------

function CRostokBloodSucker:freed()
	// Скоро отпустим из под скрипта. Поорет немного и отпустим
	
	if(self.need_freed) then return end			// Уже отпускаем
	
	reset_action(self.object, script_name())
	if(level.actor()) then
		action(self.object, anim(anim.turn, 0), look(look.point, level.actor():position()), cond(cond.look_end))
	end
	self.need_freed		= true
end 

----------------------------------------------------------------------------------------------------

function CRostokBloodSucker:set_script_control(param)
	if(self.object:get_script() ~= param) then
		self.object:script (param, script_name())
	end
	self.object:set_manual_invisibility	(param)
	self.on_position	= false
	self.time			= device():time_global() + self.add_time * 1000
end 

----------------------------------------------------------------------------------------------------

function CRostokBloodSucker:net_destroy()
	object_binder.net_destroy(self)
	
	if(self.zone_obj and level.object(self.zone)) then
		self.zone_obj:clear_callback(true)
	end
end 
