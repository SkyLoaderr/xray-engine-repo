local walk_after_speak  = 7000
---------------------------------------------------------------------------------------------------------------------
-- Actions
---------------------------------------------------------------------------------------------------------------------
class "action_scientist_walk" (action_base)
function action_scientist_walk:__init (name, storage) super (nil, name)
    self.a 	  = storage
    self.time = 0
    self.zone = nil
    self.walk_time      	= 0
    self.actor_enter 		= false
    self.say_remove_weapon	= 0
    self.speek_with_actor 	= false
	self.can_walk       	= false
end
---------------------------------------------------------------------------------------------------------------------
function action_scientist_walk:initialize ()
    action_base.initialize (self)

    self.object:set_item          	(object.deactivate, self.object:best_weapon () )

    self.object:set_body_state      (move.standing)
    self.object:set_mental_state    (anim.free)
    self.object:set_path_type    	(game_object.patrol_path)
    self.object:set_sight			(look.path_dir, nil, 0)
    self.object:set_movement_type 	(move.walk)
    self.object:set_patrol_path   	(self.a.path, patrol.nearest, patrol.continue, true)

    self.zone	= get_level_object	(self.a.zone)
    self.zone:set_callback(self, "zone_callback_enter", true)
    self.zone:set_callback(self, "zone_callback_exit", false)

    self.object:enable_talk			()
    self.speek_with_actor = false
end
---------------------------------------------------------------------------------------------------------------------
function action_scientist_walk:execute ()

	--ѕока говорим через диалог, смотрим на актера
	if(self.object:is_talking()) then
    	self:look_to_actor()
		self.walk_time		= device():time_global() + 5000
		self.can_walk		= false
        self.speak			= true
		self.object:set_movement_type(move.stand)
        if(self.object:active_sound_count() ~= 0) then
        	stop_play_sound(self.object)
        end
        return
    end

	--“олько что закончили говорить, через некоторое врем€ пойдем ходить по комнате.
	if(self.speak) then
    	self.can_walk		= true
        self.speak 			= false
        self.walk_time		= device():time_global() + 5000
    end

	if(self.actor_enter) then
        --јктер зашел, еще что-то не сделали, что уже можем идти и не пришло врем€ идти
    	if(self.can_walk == true and device():time_global() > self.walk_time) then
            self:walk			()
        else
--            printf("time   %d  walk_time %d", device():time_global(), self.walk_time)
            self:actor_near     ()
        end
    else
        self:walk           ()
    end

    action_base.execute (self)
end
---------------------------------------------------------------------------------------------------------------------
function action_scientist_walk:walk()
	self.object:set_movement_type	(move.walk)
    self.object:set_sight			(look.path_dir, nil, 0)
end
---------------------------------------------------------------------------------------------------------------------
function action_scientist_walk:actor_near()
	self:look_to_actor()
    if(self.object:see(level.actor()) and distance_between(self.object, level.actor()) < 4) then
		if(self.speek_with_actor == false) then

			if(self:is_task()) then
            	--≈ще не говорили с актером и у нас есть задание дл€ него
                self:tell_task()
            else
            	--ѕросто приветствие
            	xr_sounds.play_sound(self.object, 0, "laboratory_scientist", 1, 3)
            end

            self.speek_with_actor	= true
            self.can_walk			= false
        else
			--”же что-то сказали актеру
        	if(self.object:active_sound_count() == 0 and self.can_walk == false) then
            	self.walk_time  	= device():time_global() + walk_after_speak
	            printf("time   %d  walk_time %d", device():time_global(), self.walk_time)
                self.can_walk		= true
            end
        end
    end   --–€дом ли актер
end
---------------------------------------------------------------------------------------------------------------------
function action_scientist_walk:zone_callback_exit(zone, obj)
    if(level.actor() and obj:id() == level.actor():id()) then
        self.actor_enter     = false
        printf("exit")
    end
end
---------------------------------------------------------------------------------------------------------------------
function action_scientist_walk:is_task(zone, obj)
	return math.random() > 0.5
end
---------------------------------------------------------------------------------------------------------------------
function action_scientist_walk:tell_task(zone, obj)
	xr_sounds.play_sound(self.object, 0, "laboratory_scientist", 1, 2)
end
---------------------------------------------------------------------------------------------------------------------
function action_scientist_walk:zone_callback_enter(zone, obj)
	if(level.actor() and obj:id() == level.actor():id()) then
    	self.actor_enter	 	= true
		self.speek_with_actor 	= false
        self.can_walk			= false
		self.object:set_movement_type	(move.stand)
        if(device():time_global() > (self.say_remove_weapon + 8000) ) then
        	xr_sounds.play_sound(self.object, 0, "laboratory_scientist", 1, 1)
            self.say_remove_weapon = device():time_global()
        end
        printf("enter")
    end
end
---------------------------------------------------------------------------------------------------------------------
function action_scientist_walk:look_to_actor()
    local pos = level.actor():position()
    pos.y     = pos.y + 1.4

    self.object:set_sight               (look.point, pos, 0)
end
---------------------------------------------------------------------------------------------------------------------
function action_scientist_walk:finalize ()
    action_base.finalize 		(self)
    self.object:clear_animations()
	self.object:disable_talk	()
end


----------------------------------------------------------------------------------------------------------------------
--scientist binder
----------------------------------------------------------------------------------------------------------------------
function add_to_binder(obj)

    local operators     = {}
    local properties    = {}

    xr_sounds.load_sounds(obj)

    properties["enabled"]            = xr_evaluators_id.jon_scientist

    operators["scientist"]       	 = xr_actions_id.jon_scientist

    local manager  = obj:motivation_action_manager ()
    manager:add_evaluator (properties["enabled"], enabled_evaluator("enabled_evaluator", xr_motivator.storage[obj:id()].scientist))

    local action = this.action_scientist_walk ("action_scientist_walk", xr_motivator.storage[obj:id()].scientist)

    action:add_precondition         (world_property (stalker_ids.property_alive,    true))
    action:add_precondition         (world_property (stalker_ids.property_enemy,    false))
    action:add_precondition         (world_property (properties["enabled"],        true))
    action:add_effect               (world_property (properties["enabled"],        false))
    manager:add_action              (operators["scientist"], action)

    action = manager:action 		(stalker_ids.action_puzzle_solver)
    action:add_precondition         (world_property (properties["enabled"],  false))
end