// Скрипт: грамофон на ескейпе

local time_pause = 30000        --Через сколько пригруются мелодии в спокойном состоянии

local music = nil

local melody2            = "\monsters\\dog\\bk_0"


local music1		 = "\script_replics\\megafon\\music\\megafon_music_1"
local music2         = "\script_replics\\megafon\\music\\megafon_music_2"
local music3         = "\script_replics\\megafon\\music\\megafon_music_3"
local music4         = "\script_replics\\megafon\\music\\megafon_music_5"
local music5         = "\script_replics\\megafon\\music\\megafon_music_6"
local music6         = "\script_replics\\megafon\\music\\megafon_music_7"
local music7         = "\script_replics\\megafon\\music\\megafon_music_8"
local music8         = "\script_replics\\megafon\\music\\megafon_music_9"
local music9         = "\script_replics\\megafon\\music\\megafon_music_10"
local music10        = "\script_replics\\megafon\\music\\megafon_music_11"
local music11        = "\script_replics\\megafon\\music\\megafon_music_12"
local music12        = "\script_replics\\megafon\\music\\megafon_music_13"
local music13        = "\script_replics\\megafon\\music\\megafon_music_14"
local music14        = "\script_replics\\megafon\\music\\megafon_music_15"



local siren1_1       = "\script_replics\\megafon\\alarm\\megafon_alarm_1"
local siren1_2       = "\script_replics\\megafon\\alarm\\megafon_alarm_10"
local siren1_3       = "\script_replics\\megafon\\alarm\\megafon_alarm_11"
local siren1_4       = "\script_replics\\megafon\\alarm\\megafon_alarm_12"
local siren1_5       = "\script_replics\\megafon\\alarm\\megafon_alarm_13"

local siren2_1       = "\script_replics\\megafon\\alarm\\megafon_alarm_2"
local siren2_2       = "\script_replics\\megafon\\alarm\\megafon_alarm_3"
local siren2_3       = "\script_replics\\megafon\\alarm\\megafon_alarm_4"
local siren2_4       = "\script_replics\\megafon\\alarm\\megafon_alarm_5"
local siren2_5       = "\script_replics\\megafon\\alarm\\megafon_alarm_6"

local commader1      = "\script_replics\\megafon\\comandir\\comandir_megafon_1"
local commader2      = "\script_replics\\megafon\\comandir\\comandir_megafon_2"
local commader3      = "\script_replics\\megafon\\comandir\\comandir_megafon_3"
local commader4      = "\script_replics\\megafon\\comandir\\comandir_megafon_4"
local commader5      = "\script_replics\\megafon\\comandir\\comandir_megafon_5"

local siren_on2 = 2     --Не опасный
local siren_on1 = 1		--Опасность
local siren_off = 0

class "m_gramofon"
function m_gramofon:__init(obj_name, _commander_name)
  	self.npc_name     	= obj_name
	self.commander_name	= _commander_name
	self.npc          	= nil
	self.commander		= nil
    self.snd          	= nil
  	self.param        	= 0
    self.melody       	= nil
    self.delay        	= 0
    self.time         	= device():time_global() - 30000
    self.need_stop    	= false
    self.curState     	= siren_off
    printf("_______curState = %d", self.curState)
    self.hours        	= 0              --Время в часах прошлого update
    self.work			= true
	self.queue        	= {}
    self.sounds       	= {
           		    		sound_object( music1 ),
                            sound_object( music2 ),
                            sound_object( music3 ),
			    			sound_object( music4 ),
                            sound_object( music5 ),
                            sound_object( music6 ),
                            sound_object( music7 ),
                            sound_object( music8 ),
                            sound_object( music9 ),
                            sound_object( music10 ),
                            sound_object( music11 ),
                            sound_object( music12 ),
                            sound_object( music13 ),
                            sound_object( music14 ),

                            sound_object( siren1_1 ),
                            sound_object( siren1_2 ),
                            sound_object( siren1_3 ),
                            sound_object( siren1_4 ),
                            sound_object( siren1_5 ),

                            sound_object( siren2_1 ),
                            sound_object( siren2_2 ),
                            sound_object( siren2_3 ),
                            sound_object( siren2_4 ),
                            sound_object( siren2_5 ),

                            sound_object( commader1 ),
                            sound_object( commader2 ),
                            sound_object( commader3 ),
                            sound_object( commader4 ),
                            sound_object( commader5 )
                        }

end

function m_gramofon:is_on_line()
  	if( level.object( self.npc_name ) ) then
      	if( self.npc == nil ) then
        	self.npc = level.object( self.npc_name )
--            printf( "gramofon in line______________" )
        end
    else
      	self.npc = nil
    end
end

function m_gramofon:event(new_event)
	printf( "new event = %d", new_event )

	if(new_event == self.curState) then return end

    if( new_event == siren_on1 ) then
        self:clear_music()
        self.curState  = siren_on1
    elseif( new_event == siren_on2 ) then
        self:clear_music()
        self.curState  = siren_on2
	end

    if( new_event == siren_off ) then
    	self:clear_music()
        self.curState  = siren_off
    end
end

function m_gramofon:update()
	
	// Если убили коммандира, суки, то перестаем проигрывать звуки
	if(self.work == false) then return end
	
	if(self.commander == nil and self.commander_name ~= nil) then
		self.commander = level.object(self.commander_name)
	else
		if(self.commander:alive() == false) then
			self.work	= false
			
			// Если сирена и убили коммандира, то останавливаем текущий звук
			if(self.curState ~= siren_off) then
				self:stop()
			end
		end
	end

	
	self:is_on_line()
    
	if( self.npc == nil ) then return end

   	self:select_sound()
    self:play()
end

local h = 0
local m = 0
local i = 0

function m_gramofon:select_sound()
    h = this.local_hour()
    m = this.local_min()
	if( self.curState == siren_on1 ) then
    	self:danger_siren()
    elseif( self.curState == siren_on2 ) then
    	self:not_danger_siren()
    end

	--Когда атака, звуки не играем
	if( self.curState ~= siren_off ) then return end

    --Пробивает новый час
    if( self.hours ~= h and m < 1 ) then
		self:clear_music()
        self:play_sound( self.sounds[ 1 ] )
        self.hours = h
	else
		if( self.snd == nil and device():time_global() > self.time + time_pause ) then
        	i = math.random( 2, 14 )
        	self:play_sound( self.sounds[ i ] )
        	self.time = device():time_global() + self.sounds[i]:length()
    	end
    end
end

function m_gramofon:play_sound( sound_o, delay, param )

  	if( param == nil ) then param = sound_object.s3d end                --Если Nil, то значет звук надо проигрывать не зацыкленный
    if( delay == nil ) then delay = 0 end

   	table.insert( self.queue, { sound_o, param, delay } )

end

function m_gramofon:play()
  	if( self.snd ) then
      	if( self.snd:playing() ) then return end          	--Музыка играет, не тревожим
        self.time = device():time_global()
        self.snd  = nil
    end

    --Выдерживаем паузу перед игрой звука
    if( self.delay ~= 0 ) then
    	if( device():time_global() < self.time + self.delay ) then return end
        self.delay  = 0
    end

    if( table.getn( self.queue ) == 0 ) then return end     --В очереди ничего нет, выходим

    self.snd = self.queue[1][1]
  	self.snd:play_at_pos( self.npc, self.npc:position() , self.queue[1][2] )
    self.delay = self.queue[1][3]
    table.remove( self.queue, 1 )                           --Проиграли звук, выкинули его с очереди
end

function m_gramofon:stop()
  	if( self.snd and self.snd:playing() ) then  self.snd:stop() end
    self.snd = nil
end

function m_gramofon:clear_music()
  	for i = table.getn( self.queue ), 1, -1 do
      table.remove( self.queue, i )
    end
    self:stop()
end

function m_gramofon:not_danger_siren()
	if( table.getn( self.queue ) > 0 ) then return end      --Если в очереди есть звуки, то ничего не добовляем

    self:play_sound( self.sounds[ math.random( 20, 24 )], 0 )
    self:play_sound( self.sounds[ math.random( 20, 24 )], 0 )
    self:play_sound( self.sounds[ math.random( 20, 24 )], 0 )
    self:play_sound( self.sounds[ math.random( 20, 24 )], 0 )
    self:play_sound( self.sounds[ math.random( 20, 24 )], 5000 )
end

function m_gramofon:danger_siren()
    if( table.getn( self.queue ) > 0 ) then return end      --Если в очереди есть звуки, то ничего не добовляем

    self:play_sound( self.sounds[ math.random( 15, 19 )], 3000 )
    self:play_sound( self.sounds[ math.random( 15, 19 )], 3000 )
    self:play_sound( self.sounds[ math.random( 15, 19 )], 3000 )
    self:play_sound( self.sounds[ math.random( 15, 19 )], 3000 )
    self:play_sound( self.sounds[ math.random( 15, 19 )], 3000 )
end

function m_gramofon:commander_speak(ind)
	if(ind == nil) then
    	ind = math.random(1, 5)
    end

    self:clear_music()
	if(self.sounds[24 + ind]) then
		self:play_sound (self.sounds[24 + ind], 1000)
        return self.sounds[24 + ind]:length() + 1000
    end

    return 0
end

function local_time()
  	local time  = game.time()/1000
    local sek   = math.mod( time, 60 )
    local min   = math.floor( math.mod( time, 3600 ) / 60 )
    local hours = math.floor( math.mod( time, 86400 ) / 3600 )
    return hours, min, sek
end

function local_hour()
	return math.floor( math.mod( game.time()/1000, 86400 )/ 3600 )
end

function local_min()
	return math.floor( math.mod( game.time()/1000, 3600 ) / 60 )
end