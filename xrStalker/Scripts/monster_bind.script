// Различные мелкие скрипты.
local max_distance		= 30	// Максимальная дистанция, куда может отбежать собака


// Собака доктора отшельника
class "COutcastDog" (object_binder)
function COutcastDog:__init(obj) super(obj)
	self.sleep		= true
	self.time		= -10000000
end 

function COutcastDog:reload(section)
	object_binder.reload(self, section)
	
	local char_ini	= self.object:spawn_ini()
	
	self.path		= patrol(utils.conf_get_string(char_ini, "outcast_dog", "path", nil, self.object, true))
	// self.object:script(true, script_name())
end

function COutcastDog:update(delta)
	object_binder.update(self, delta)

	if(self.object:alive() == false) then
		// Умер пес
		if(self.object:get_script()) then self.object:script(false, script_name()) end
		return
	end
	
	// Если еще не взяли под контроль, то берем
	if(self.object:get_script() == false) then self.object:script(true, script_name()) end

	// Увидели актера, подходим к нему
	if(level.actor() and self.object:see(level.actor()) and self.sleep == true and device():time_global() > self.time + 60000) then
		self.sleep		= false
		reset_action(self.object, script_name())
	end
	
	// Если подбегаем к актеру и сильно далеко отбежали, то останавливаемя
	if(self.sleep == false and self.object:position():distance_to(self.path:point(0)) > max_distance) then
		reset_action(self.object, script_name())
	end
	
	if(self.object:action()) then return end
	
	if(self.sleep) then
		// Идем к коврику, ложимся и лежим
		if(self.object:position():distance_to(self.path:point(0)) > 1) then
			action(self.object, move(move.walk_fwd, self.path:point(0), 0.8), sound(sound.idle), cond(cond.move_end))
			action(self.object, anim(anim.turn), look(look.point, self.path:point(1)), sound(sound.idle), cond(cond.look_end))
			action(self.object, anim(anim.lie_idle, 0), sound(sound.idle), cond(cond.time_end, 10000))
		else
			action(self.object, anim(anim.sit_idle, 0), sound(sound.idle), cond(cond.time_end, 10000))
			action(self.object, anim(anim.lie_idle, 0), sound(sound.idle), cond(cond.time_end, 10000))
			action(self.object, anim(anim.sleep,    0), sound(sound.idle), cond(cond.time_end, 10000))
		end
	else
		// Подходим к актеру, нюжаем и возвращаемся спать
		if(distance_between(self.object, level.actor()) > 3 and
		  self.object:position():distance_to(self.path:point(0)) < max_distance) then
			// Подбегаем к актеру
			action(self.object, move(move.walk_fwd, level.actor(), 2.5), sound(sound.idle), cond(cond.move_end+cond.time_end, 2000))			
		else
			action(self.object, anim(anim.turn), look(look.point, level.actor():position()), sound(sound.idle), cond(cond.look_end))
			action(self.object, anim("stand_idle_1"), sound(sound.idle), cond(cond.anim_end))
			action(self.object, anim(anim.stand_idle, 0), sound(sound.idle), cond(cond.time_end, 4000)) //math.random(2000, 4000)))
			self.sleep	= true
			self.time	= device():time_global()
		end
	end
end

------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------

class "CNecrophil" (object_binder)
function CNecrophil:__init(obj) super(obj)
end

function CNecrophil:reload(section)
	object_binder.reload(self, section)
	
	self.ini 	= self.object:spawn_ini()
	self.time	= utils.conf_get_number(self.ini, "play_with_corpse", "time", nil, self.object, false)
	self.corpse	= utils.conf_get_string(self.ini, "play_with_corpse", "corpse", nil, self.object, false)
	
	self.enemy		= nil
	self.enemy_id 	= -1
	self.is_corpse	= false
	self.state		= 0
	
	self.hit			= hit()
	self.hit.power		= 10
	self.hit.impulse    = 4000
	self.hit.draftsman  = self.object
	self.hit.type       = hit.wound
	self.hit:bone("bip01_spine")
	self.update_time	= 0
end

function CNecrophil:update(delta)
	object_binder.update(self, delta)

	self.update_time	= device():time_global()
	// Не задан враг, не было врагов, нет трупа и нет врагов
	if(self.corpse == nil and self.enemy == nil and self.is_corpse == false and self.object:get_enemy() == nil) then
		return
	end

	if(self.corpse and self.enemy == nil) then
		if(self.time and self.end_time and device():time_global() > self.end_time) then
			// Если задано время окончания и оно пришло, то конец
			if(self.object:get_script()) then self:set_script_control(false) end
			return
		end
		// езли задан труп
		self.enemy = level.object(self.corpse)
		if(self.object:get_enemy()) then self.enemy = nil end  		// fake, что когда задано тело, кабан не реагировал на него, если есть враги
		if(self.enemy == nil) then
			if(self.object:get_script()) then self:set_script_control(true) end		
			return
		end
	
		self.enemy_id	= self.enemy:id()
		self.is_corpse	= true
		if(self.object:get_script() == false) then self:set_script_control(true) end
	end
	
	if(self.is_corpse) then
		if(self.object:get_enemy()) then
			self:set_script_control(false)
			return
		end
		
		// Труп ушел в офлайн
		if(is_object_online(self.enemy_id) == false) then
			self:set_script_control(false)
			return
		end
		
		// Закончилось время буцания труппа
		if(self.end_time and device():time_global() > self.end_time) then
			if(self.corpse) then self.corpse = nil end        // Это сделано для того, чтобы больше не бил труп
			self:set_script_control(false)
			return
		end
		
		self:action()
	else
		// Еще нет труппа, поджидаем его
		if(self.object:get_enemy() == nil and self.enemy ~= nil and is_object_online(self.enemy_id) and
			distance_between(self.object, self.enemy) < 10)
		then
			// Нет врага, до этого враг был, он в онлайне и он рядом, вот наш трупп
			self.is_corpse	= true
			self:set_script_control(true)
			self:action()
		else
			// Запоминаем врага для следующего update-a
			self.enemy		= self.object:get_enemy()
			if(self.enemy) then self.enemy_id = self.enemy:id() end
		end
	end
end

function CNecrophil:action()
	if(self.state == 0 and self.object:action() == nil) then
		action(self.object, move(move.run_fwd, self.enemy), sound(sound.attack), cond(cond.move_end))
	end

	if(device():time_global() > self.time_play) then
		if(distance_between(self.object, self.enemy) < 2) then
			if(self.state == 0) then
				// Проигруем анимацию
				reset_action(self.object, script_name())
				action(self.object, look(look.point, self.enemy:position()), anim(anim.turn, 0), cond(cond.look_end))
				self.state 		= 1
				self.temp_time 	= device():time_global() + 00
			elseif(self.state == 1 and self.object:action() == nil) then
				action(self.object, anim(anim.attack, 0), cond(cond.time_end, 900))
				self.temp_time 	= device():time_global() + 400
				self.state		= 2
			elseif(self.state == 2 and device():time_global() > self.temp_time) then
				// Бьем
				self:play()
				self.state		= 0
			end
		else
			self.state	= 0
		end
	end	
end 

function CNecrophil:play()   
	self.hit.dir	= self.enemy:position():sub(self.object:position())
	if(self.hit.dir:magnitude() ~= 0) then
		self.hit.dir:normalize()
	end
	self.hit.dir.y  = 0.5
	self.enemy:hit(self.hit)
	self.time_play	= device():time_global() + 500
end 

function CNecrophil:set_script_control(value)
	if(value) then
		// Берем под контроль
		if(self.object:get_script() == false) then
			self.object:script(true, script_name())
		end
		
		if(self.time) then
			self.end_time = device():time_global() + self.time
		end
		
		self.time_play	= 0
		self.state		= 0
	else
		// Берем под контроль
		if(self.object:get_script()) then
			self.object:script(false, script_name())
		end
		
		self.end_time	= nil
		self.is_corpse	= false
		self.enemy		= nil
	end	
end
// is_object_online(id)