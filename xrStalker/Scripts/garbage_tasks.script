function proceed()
    local actor = db.actor

	--' GARBAGE
	if actor:dont_has_info("agr_krot_band_start") and
		actor:object("garbage_seriy_flash") ~= nil 
	then
		actor:give_info_portion("agr_krot_band_start")
	end       	
	
	if actor:has_info("garbage_meetstalker_die") and
		actor:dont_has_info("garbage_meetstalker_done") and
		actor:dont_has_info("garbage_meetstalker_end")
	then
		level_tasks.set_task_state(task.fail, "garbage_meet_stalker", 0)
		actor:give_info_portion("garbage_meetstalker_end")
	end
	
	if actor:has_info("gar_kill_boars_done") and
		actor:dont_has_info("gar_kill_boars_request") 
	then
		actor:give_info_portion("gar_kill_boars_request")
		level_tasks.set_task_state(task.completed, "gar_kill_boars", 1)
	end
	
	if actor:has_info("gar_bandits_killed") and
		actor:dont_has_info("gar_hellcar_death") and
		actor:dont_has_info("gar_after_battle") 
	then
		actor:give_info_portion("gar_after_battle")
		level_tasks.set_task_state(task.completed, "gar_help_dymon", 2)
	end
	
	if actor:has_info("gar_hellcar_death") and
		actor:has_info("gar_hellcar_help") and
		xr_conditions.is_dead_all(actor, nil, {107}) and
		actor:dont_has_info("gar_after_battle") and
		actor:dont_has_info("gar_hellcar_dialog_end")		
	then
		level_tasks.set_task_state(task.fail, "gar_help_dymon", 1)
		actor:give_info_portion("gar_hellcar_dialog_end")
	end
	
	if actor:has_info("gar_bandits_killed") and
		actor:has_info("gar_hellcar_help") and
		actor:has_info("gar_hellcar_death") and
		xr_conditions.is_dead_all(actor, nil, {107}) and
		actor:dont_has_info("gar_after_battle") 
	then
		actor:give_info_portion("gar_after_battle")
		level_tasks.set_task_state(task.completed, "gar_help_dymon", 0)
	end
	
	
	if actor:has_info("gar_help_newbie_done") and
		actor:dont_has_info("gar_help_newbie_return") and
		actor:has_info("gar_help_newbie")
	then	
		level_tasks.set_task_state(task.completed, "gar_help_tunnel_newbie", 1)
		actor:give_info_portion("gar_help_newbie_return")
	end
	
	if actor:has_info("gar_help_newbie_die") and
		actor:dont_has_info("gar_help_newbie_exit")
	then	
		level_tasks.set_task_state(task.fail, "gar_help_tunnel_newbie", 0)
		actor:give_info_portion("gar_help_newbie_exit")
	end

end

function process_info_portion(info_id)
	-- garbage

		
	if info_id == "gar_hellcar_death" then
		level_tasks.remove_location(107, "green_location")
		
--	elseif info_id == "gar_open_fire" then
--		level_tasks.remove_location(106, "gar_bandits_leader_location")
		
--	elseif info_id == "gar_bandit_leader_dead" then
--		level_tasks.remove_location(106, "gar_bandits_leader_location")

	elseif info_id == "gar_start_graveyard" then
		level_tasks.add_location(107, "green_location")

--	elseif info_id == "gar_alarm" then
--		level_tasks.remove_location(107, "green_location")
	
	elseif info_id == "gar_no_mapspot" then
		level_tasks.remove_location(107, "green_location")
	
	elseif info_id == "gar_wounded_help" then
		level_tasks.add_location(109, "green_location")

	elseif info_id == "gar_wounded_fight" then
		level_tasks.remove_location(109, "green_location")
	
	
--  Fake_spots

	elseif info_id == "gar_add_fake_spot1" and not level_tasks.is_map_spot_present (112, "gar_spot_swamp_location") then
		level_tasks.add_location(112, "gar_spot_swamp_location")
	return true
		
	elseif info_id == "gar_remove_fake_spot1" then
		level_tasks.remove_location(112, "gar_spot_swamp_location")
	
				
	elseif info_id == "gar_add_fake_spot2" and not level_tasks.is_map_spot_present (113, "gar_spot_secret1_location") then
		level_tasks.add_location(113, "gar_spot_secret1_location")
	return true
		
	elseif info_id == "gar_remove_fake_spot2" then
		level_tasks.remove_location(113, "gar_spot_secret1_location")
		
		
	elseif info_id == "gar_add_fake_spot3" and not level_tasks.is_map_spot_present (114, "gar_spot_car_graveyard_location") then
		level_tasks.add_location(114, "gar_spot_car_graveyard_location")
	return true
		
	elseif info_id == "gar_remove_fake_spot3" then
		level_tasks.remove_location(114, "gar_spot_car_graveyard_location")	
	
	
	elseif info_id == "gar_add_fake_spot4" and not level_tasks.is_map_spot_present (115, "gar_spot_dolg_blokpost_location") then
		level_tasks.add_location(115, "gar_spot_dolg_blokpost_location")
	return true
		
	elseif info_id == "gar_remove_fake_spot4" then
		level_tasks.remove_location(115, "gar_spot_dolg_blokpost_location")
		
		
	elseif info_id == "gar_add_fake_spot5" and not level_tasks.is_map_spot_present (116, "gar_spot_angar_location") then
		level_tasks.add_location(116, "gar_spot_angar_location")
	return true
		
	elseif info_id == "gar_remove_fake_spot5" then
		level_tasks.remove_location(116, "gar_spot_angar_location")
		
		
	elseif info_id == "gar_add_fake_spot6" and not level_tasks.is_map_spot_present (117, "gar_spot_bandit_agr_location") then
		level_tasks.add_location(117, "gar_spot_bandit_agr_location")
	return true
		
	elseif info_id == "gar_remove_fake_spot6" then
		level_tasks.remove_location(117, "gar_spot_bandit_agr_location")
		
		
	elseif info_id == "gar_add_fake_spot7" and not level_tasks.is_map_spot_present (118, "gar_spot_tunnel_location") then
		level_tasks.add_location(118, "gar_spot_tunnel_location")
	return true
		
	elseif info_id == "gar_remove_fake_spot7" then
		level_tasks.remove_location(118, "gar_spot_tunnel_location")							
		
		
	elseif info_id == "gar_add_fake_spot8" and not level_tasks.is_map_spot_present (119, "gar_spot_dogs_forest_location") then
		level_tasks.add_location(119, "gar_spot_dogs_forest_location")
	return true
		
	elseif info_id == "gar_remove_fake_spot8" then
		level_tasks.remove_location(119, "gar_spot_dogs_forest_location")		
		
		
	elseif info_id == "gar_add_fake_spot9" and not level_tasks.is_map_spot_present (120, "gar_spot_trash1_location") then
		level_tasks.add_location(120, "gar_spot_trash1_location")
	return true
		
	elseif info_id == "gar_remove_fake_spot9" then
		level_tasks.remove_location(120, "gar_spot_trash1_location")		
		
		
	elseif info_id == "gar_add_fake_spot10" and not level_tasks.is_map_spot_present (121, "gar_spot_trash2_location") then
		level_tasks.add_location(121, "gar_spot_trash2_location")
	return true
		
	elseif info_id == "gar_remove_fake_spot10" then
		level_tasks.remove_location(121, "gar_spot_trash2_location")
		
		
	elseif info_id == "gar_add_fake_spot11" and not level_tasks.is_map_spot_present (122, "gar_spot_trash3_location") then
		level_tasks.add_location(122, "gar_spot_trash3_location")
	return true
		
	elseif info_id == "gar_remove_fake_spot11" then
		level_tasks.remove_location(122, "gar_spot_trash3_location")				
		
		
		
		
--	elseif info_id == "gar_free_pass" then
--		level_tasks.remove_location(108, "gar_dolg_blockpost_location")
	end
	
	return false
end