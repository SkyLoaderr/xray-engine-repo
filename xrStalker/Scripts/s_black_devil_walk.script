local s_walk	= 7

local d_state	= 1
local n_state	= 2

local time_sleep	= 15000

local howling		= {
						"\monsters\\pseudodog\\pdog_howl_0",
						"\monsters\\pseudodog\\pdog_howl_1",
						"\monsters\\pseudodog\\pdog_howl_2",
						"\monsters\\pseudodog\\pdog_howl_3"
					  }

//----------------------------------------------------------------------------------------------------------
//Чертенок. Ночью ходит по кочкам и воет, днем живет позле избы, изредка прогуливается
//----------------------------------------------------------------------------------------------------------

function is_day()
	//'Возвращает true, если сейчас день, false, если сейчас ночь
	if(local_hours() > 6 and local_hours() < 21) then
		return true
	end
	
	return false
end

class "CStateDevilWalk"
function CStateDevilWalk:__init(_data, _mem)
	self.data		= _data
	self.memory		= _mem
	self.index		= 0
	self.state		= 0
	
	self.day_path	= nil
	self.night_path = nil
end

function CStateDevilWalk:initialize()
	reset_action(self.data.npc, self.data.scr_name)
	self.day_path	= self.data.npc:spawn_ini():r_string("monster", "day_path")
	self.night_path	= self.data.npc:spawn_ini():r_string("monster", "night_path")
	
	self.data.npc:set_callback(self, "move_callback", game_object.movement)
	self.index		= -1
	self.state		= -1
	printf("Call function is_day()")
	if(is_day()) then 
		self:init_day_lie()
		self.state	= d_state
	else
		self:init_night_walk()
		
	end
end

function CStateDevilWalk:execute()
	if(self.state == d_state) then
		self:day_walk()
	else
		self:night_walk()
	end
end

function CStateDevilWalk:day_walk()
	if(self.data.npc:action() == nil) then
		action(self.data.npc, move(move.walk_fwd, patrol(self.day_path, patrol.next, patrol.continue, true, 
							  self.index)), sound(sound.idle), cond(cond.move_end))
	end
	
	if(is_day() == false) then
		self:init_night_walk()
	end
end

function CStateDevilWalk:night_walk()
	if(self.data.npc:action() == nil) then
		if(is_day() == true) then
			//'Пора идти на дневной отдых
			self:init_day_lie()
		end
		
		action(self.data.npc, move(move.walk_fwd, patrol(self.night_path, patrol.next, patrol.continue, true,
							  self.index)), sound(sound.idle), cond(cond.move_end))
	end	
end

function CStateDevilWalk:init_day_lie()
	printf("init day walk")
	if(self.data.npc:action()) then
		reset_action(self.data.npc, self.data.scr_name)
		printf("reset action")
	end
	//action(self.data.npc, anim(anim.look_around, 0), cond(cond.time_end, 3000))	
	action(self.data.npc, move(move.walk_fwd, patrol(self.day_path):point(0), 1), sound(sound.idle), cond(cond.move_end))
	action(self.data.npc, look(look.point, patrol(self.day_path):point(1)), anim(anim.turn, 0), 
						  sound(sound.idle), cond(cond.look_end))
	
	self.index		= 0
	self.state		= d_state
end

function CStateDevilWalk:init_night_walk()
	printf("init night walk")
	if(self.data.npc:action()) then
		reset_action(self.data.npc, self.data.scr_name)
	end
	
	action(self.data.npc, move(move.walk_fwd, patrol(self.night_path, patrol.nearest, patrol.continue, true)),
						  sound(sound.idle), cond(cond.move_end))
	self.state		= n_state
	self.index		= -1
end

function CStateDevilWalk:move_callback(obj, type, _index)
	if(self.index == _index or _index == -1) then printf("returned self.index == %f   _index == %f", self.index, _index)  return end
	
	printf("callback. Index %d", _index)
	self.index	= _index
	if(self.state == d_state) then
		if(_index == patrol(self.day_path):count() - 1) then
			printf("go lie")
			//reset_action(self.data.npc, self.data.scr_name)
			self:init_day_lie()
			return
		end
		//'Дневной отдых
		reset_action(self.data.npc, self.data.scr_name)
		action(self.data.npc, anim(anim.look_around, 0), sound(sound.idle), cond(cond.time_end, math.random(4000, 8000)))	
	else
		//'Ночная работа
		reset_action(self.data.npc, self.data.scr_name)
		self:set_action_howling()
	end
end

function CStateDevilWalk:set_action_howling()
	//'Накидуем кучу экшенов вытья на луну
	for i = 1, math.random(2, 5) do
		action(self.data.npc, anim(anim.stand_idle, 0), cond(cond.time_end, math.random(2000, 4000)))
		action(self.data.npc, anim("stand_howling_0"), sound(howling[math.random(1, table.getn(howling))],
							  "bip01_head"), cond(cond.sound_end))

	end
end

function CStateDevilWalk:id()
	return s_walk
end

function CStateDevilWalk:finalize()
	self.data.npc:clear_callback(game_object.movement)
end
