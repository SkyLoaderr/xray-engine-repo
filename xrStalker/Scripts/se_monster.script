class "se_monster" (cse_alife_monster_base)
--------------------
function se_monster:__init (section) super (section)
	self.ini = nil
	self.ini_initialized = false

	self.spawner_present = false

	self.smart_terrain_conditions = nil
	self.smart_terrain_conditions_initialized = false

	self.check_distance = false
	self.min_distance   = 150
end
--------------------
function se_monster:get_ini()
	if not self.ini_initialized then
		self.ini             = self:spawn_ini ()
		self.ini_initialized = true

		self.spawner_present = self.ini:section_exist ("spawner")

		if self.ini ~= nil and self.spawner_present == true then
		   if self.ini:line_exist ("spawner", "check_distance") == true then
		      self.check_distance = self.ini:r_bool ("spawner", "check_distance")
		      if self.check_distance == nil then self.check_distance = false end
		      if self.ini:line_exist ("spawner", "min_distance") == true then
		         self.min_distance = self.ini:r_u32 ("spawner", "min_distance")
		      end
		   end

		   if self.min_distance == nil then
		      local sys = ini_file ("system.ltx")
		      if sys ~= nil and sys:line_exist ("alife", "switch_distance") == true then
		         self.min_distance = sys:r_u32 ("alife", "switch_distance") - 50
		         if self.min_distance == nil then
		            self.min_distance = 150
		         else
		            if self.min_distance <= 50 then
		               abort ("SE_MONSTER - SWITCH DISTANCE IS TOO SMALL !!!")
		            end
		         end
		      else
		         self.min_distance = 150
		      end
		   end
		end
	end
end
--------------------
function se_monster:can_switch_offline ()
	return cse_alife_monster_base.can_switch_offline (self)
end
--------------------
function se_monster:can_switch_online ()
	self:get_ini()

    --стандартная проверка у родителя, если нет спавнера или игрок помер
	if self.ini == nil or self.spawner_present == false then --or (db.actor ~= nil and db.actor:alive () == false)
	--if self.ini == nil or self.spawner_present == false or db.actor == nil
	    return cse_alife_monster_base.can_switch_online (self)
	end

	if self.online == false then
   	    -- если игрока нет, то в оффлайн
        if db.actor == nil or db.actor:alive () == false then return false end

        --если задана дистанция проверки, то проверим.
        if self.check_distance == true then
           --printf ("Check distance")
           --получим позицию.
           local pos = level.vertex_position (self.m_level_vertex_id)
            -- проверим дистанцию до игрока. если меньше требуемой, то от винта
            if pos:distance_to (db.actor:position ()) < self.min_distance then
               --printf ("Check distance 1")
               return false
            end
        end
        --все проверки прошли - финал, вызов спавнера
	    return xr_spawner.check_spawn (self) and cse_alife_monster_base.can_switch_online (self)
    else
        if db.actor == nil or db.actor:alive () == false then return true end
        if xr_spawner.check_spawn (self) == true then
           return true
        end
        if self.check_distance == true then
           local pos = level.vertex_position (self.m_level_vertex_id)
           -- проверим дистанцию до игрока. если больше требуемой, то от винта
           if pos:distance_to (db.actor:position ()) > self.min_distance then
              return false
           end
        end
        return cse_alife_monster_base.can_switch_online (self)
    end
end
--------------------
function se_monster:read_smart_terrain_conditions()
	return smart_terrain.read_smart_terrain_conditions( self )
end
--------------------
function se_monster:get_smart_terrain_conditions()
	return smart_terrain.get_smart_terrain_conditions( self )
end
