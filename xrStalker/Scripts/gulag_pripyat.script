
local state_kamp = 0
local state_wave1 = 1
local state_wave2 = 2
local state_wave3 = 3
local state_wave4 = 4
local state_wave5 = 5

function load_job(sj, gname, type, squad, groups)
	if type == "pri_followers" then
		return load_job_followers(sj, gname, type, squad, groups)
	--elseif type == "val_boars_nest2" then
	--	return load_job_boars_nest2(sj, gname, type, squad, groups)
	end
	
	return
end

function f_predicate1(obj) 
	return obj:profile_name() == "stalker_veteran"
end

function f_predicate2(obj) 
    local t = obj:best_weapon()
    printf("gulag <prip>: predicate f_predicate2. best_weapon(%s)", t:name())
	return obj:profile_name() == "stalker_veteran" and string.sub(t:name(), 1, 8) == "wpn_rpg7" --and t and t:animation_slot() == "4"
end

function load_job_followers(sj, gname, type, squad, groups)
	-----------------------------------------------------------------------
	-- À»ƒ≈– - œ–»Œ–»“≈“ 2,3
	-----------------------------------------------------------------------
	--- state: kamp
	t = { section = "logic@pri_followers_leader_wait",
		idle = 0,
		prior = 2, state = { state_kamp },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave1
	t = { section = "logic@pri_followers_leader_wave1",
		idle = 0,
		prior = 2, state = { state_wave1 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave1_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave2
	t = { section = "logic@pri_followers_leader_wave2",
		idle = 0,
		prior = 2, state = { state_wave2 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave2_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave3
	t = { section = "logic@pri_followers_leader_wave3",
		idle = 0,
		prior = 2, state = { state_wave3 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave3_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave4
	t = { section = "logic@pri_followers_leader_wave4",
		idle = 0,
		prior = 2, state = { state_wave4 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave4_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave5
	t = { section = "logic@pri_followers_leader_wave5",
		idle = 0,
		prior = 2, state = { state_wave5 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave5_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	-----------------------------------------------------------------------
	-- √–¿Õ¿“ŒÃ≈“◊»  - œ–»Œ–»“≈“ 3,2
	-----------------------------------------------------------------------
	--- state: kamp
	t = { section = "logic@pri_followers_bomber_kamp",
		idle = 0,
		prior = 3, state = { state_kamp },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "",
		predicate = f_predicate2
	}
	table.insert(sj, t)
	--- state: wave1
	t = { section = "logic@pri_followers_bomber_wave1",
		idle = 0,
		prior = 3, state = { state_wave1 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave1_out_restr",
		predicate = f_predicate2
	}
	table.insert(sj, t)
	--- state: wave2
	t = { section = "logic@pri_followers_bomber_wave2",
		idle = 0,
		prior = 3, state = { state_wave2 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave2_out_restr",
		predicate = f_predicate2
	}
	table.insert(sj, t)
	--- state: wave3
	t = { section = "logic@pri_followers_bomber_wave3",
		idle = 0,
		prior = 3, state = { state_wave3 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave3_out_restr",
		predicate = f_predicate2
	}
	table.insert(sj, t)
	--- state: wave4
	t = { section = "logic@pri_followers_bomber_wave4",
		idle = 0,
		prior = 3, state = { state_wave4 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave4_out_restr",
		predicate = f_predicate2
	}
	table.insert(sj, t)
	--- state: wave5
	t = { section = "logic@pri_followers_bomber_wave5",
		idle = 0,
		prior = 3, state = { state_wave5 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave5_out_restr",
		predicate = f_predicate2
	}
	table.insert(sj, t)
	-----------------------------------------------------------------------
	-- Õ¿œ¿–Õ» 1 - œ–»Œ–»“≈“ 1
	-----------------------------------------------------------------------
	--- state: kamp
	t = { section = "logic@pri_followers_nap1_kamp",
		idle = 0,
		prior = 1, state = { state_kamp },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave1
	t = { section = "logic@pri_followers_nap1_wave1",
		idle = 0,
		prior = 1, state = { state_wave1 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave1_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave2
	t = { section = "logic@pri_followers_nap1_wave2",
		idle = 0,
		prior = 1, state = { state_wave2 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave2_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave3
	t = { section = "logic@pri_followers_nap1_wave3",
		idle = 0,
		prior = 1, state = { state_wave3 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave3_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave4
	t = { section = "logic@pri_followers_nap1_wave4",
		idle = 0,
		prior = 1, state = { state_wave4 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave4_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave5
	t = { section = "logic@pri_followers_nap1_wave5",
		idle = 0,
		prior = 1, state = { state_wave5 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave5_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	-----------------------------------------------------------------------
	-- Õ¿œ¿–Õ» 2 - œ–»Œ–»“≈“ 1
	-----------------------------------------------------------------------
	--- state: kamp
	t = { section = "logic@pri_followers_nap2_kamp",
		idle = 0,
		prior = 1, state = { state_kamp },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave1
	t = { section = "logic@pri_followers_nap2_wave1",
		idle = 0,
		prior = 1, state = { state_wave1 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave1_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave2
	t = { section = "logic@pri_followers_nap2_wave2",
		idle = 0,
		prior = 1, state = { state_wave2 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave2_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave3
	t = { section = "logic@pri_followers_nap2_wave3",
		idle = 0,
		prior = 1, state = { state_wave3 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave3_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave4
	t = { section = "logic@pri_followers_nap2_wave4",
		idle = 0,
		prior = 1, state = { state_wave4 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave4_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave5
	t = { section = "logic@pri_followers_nap2_wave5",
		idle = 0,
		prior = 1, state = { state_wave5 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave5_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	-----------------------------------------------------------------------
	-- Õ¿œ¿–Õ» 3 - œ–»Œ–»“≈“ 1
	-----------------------------------------------------------------------
	--- state: kamp
	t = { section = "logic@pri_followers_nap3_kamp",
		idle = 0,
		prior = 1, state = { state_kamp },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave1
	t = { section = "logic@pri_followers_nap3_wave1",
		idle = 0,
		prior = 1, state = { state_wave1 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave1_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave2
	t = { section = "logic@pri_followers_nap3_wave2",
		idle = 0,
		prior = 1, state = { state_wave2 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave2_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave3
	t = { section = "logic@pri_followers_nap3_wave3",
		idle = 0,
		prior = 1, state = { state_wave3 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave3_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave4
	t = { section = "logic@pri_followers_nap3_wave4",
		idle = 0,
		prior = 1, state = { state_wave4 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave4_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
	--- state: wave5
	t = { section = "logic@pri_followers_nap3_wave5",
		idle = 0,
		prior = 1, state = { state_wave5 },
		squad = squad, group = groups[1],
		in_rest = "", out_rest = "pri_followers_wave5_out_restr",
		predicate = f_predicate1
	}
	table.insert(sj, t)
end

function load_states(gname, type)
	if type == "pri_followers" then
	    --printf("LOAD_STATES: pri_followers")
		return function(gulag)
		    local state = gulag.state
		    local actor = db.actor
		    if state == state_kamp and actor:has_info("pri_followers_start") then
		        return state_wave1
		    end
		    if state == state_wave1 and
		       actor:has_info("pri_wave1_monolith1_dead") and
		       actor:has_info("pri_wave1_monolith2_dead") and
		       actor:has_info("pri_wave1_monolith3_dead") and
		       actor:has_info("pri_wave1_monolith4_dead")
		    then
		        return state_wave2
		    end
		    if state == state_wave2 and
		       actor:has_info("pri_wave2_monolith1_dead") and
		       actor:has_info("pri_wave2_monolith2_dead") and
		       actor:has_info("pri_wave2_monolith3_dead") and
		       actor:has_info("pri_wave2_monolith4_dead") and
		       --actor:has_info("pri_wave2_monolith5_dead") and
		       actor:has_info("pri_wave2_monolith6_dead")
		    then
		        return state_wave4
		    end
		    --if state == state_wave3 and actor:has_info("pri_wave3_btr_dead") then
		    --    return state_wave4
		    --end
		    if state == state_wave4 and
		       actor:has_info("pri_wave4_monolith1_dead") and
		       actor:has_info("pri_wave4_monolith2_dead") and
		       actor:has_info("pri_wave4_monolith3_dead") and
		       actor:has_info("pri_wave4_monolith4_dead")
		       --actor:has_info("pri_wave4_monolith5_dead") and
		    then
		        return state_wave5
		    end
	        return state
	    end
	--elseif type == "val_monolith_base" then
	--	return check_state_monolith_base(gulag)
	end

	return nil
end

function checkStalker(npc_community, gulag_type)
	if gulag_type == "pri_followers" then
		return npc_community == "stalker"
	end
	
	return false
end

function checkMonster(npc_community, gulag_type)
    return false
end
