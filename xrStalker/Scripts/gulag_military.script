-----------------------------------------------------------------------
-- Состояния базы Свободы
--    0 - нормальное состояние
--    1 - атака базы
--    2 - атака хутора Долга
-----------------------------------------------------------------------


function load_job (sj, gname, type, squad, groups)
    
	if type ~= "mil_freedom" then return end
	
    -----------------------------------------------------------------------
    -- Нормальное состояние базы
    -----------------------------------------------------------------------
    -- Max
    t = {section = "logic@mil_freedom_max",
		idle = 0,
		prior = 10, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
		predicate = function (obj)
		                     return obj:profile_name () == "svoboda_master_max"
		            end
		}
	table.insert(sj, t)		
	-- мужик у костра 1
    t = {section = "logic@mil_freedom_stalker1",
		idle = 0,
		prior = 2, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
        dependent = "logic@mil_freedom_max"
		}
	table.insert(sj, t)		

    -- мужик у костра 2
    t = {section = "logic@mil_freedom_stalker2",
		idle = 0,
		prior = 2, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
        dependent = "logic@mil_freedom_stalker1"
		}
	table.insert(sj, t)		
    -- Павлик Морозов
    t = {section = "logic@mil_freedom_stalker3",
		idle = 0,
		prior = 2, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
		predicate = function (obj)
		                     return obj:profile_name () == "svoboda_specnaz_stukach"
		            end         
		}
	table.insert(sj, t)		
    -- одиночный патрульный на базе
    t = {section = "logic@mil_freedom_stalker4",
		idle = 0,
		prior = 10, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
        dependent = "logic@mil_freedom_stalker2",
		predicate = function (obj)
		                     return obj:profile_name () == "svoboda_specnaz"
		            end         
		}
	table.insert(sj, t)		

    -- патрульный на базе
    t = {section = "logic@mil_freedom_stalker5",
		idle = 0,
		prior = 10, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
        dependent = "logic@mil_freedom_stalker4",
		predicate = function (obj)
		                     return obj:profile_name () == "svoboda_specnaz"
		            end         
		}
	table.insert(sj, t)		

    -- фолловер на базе
    t = {section = "logic@mil_freedom_stalker6",
		idle = 0,
		prior = 10, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
        dependent = "logic@mil_freedom_stalker5"
		}
	table.insert(sj, t)		
	-- фолловер на базе
    t = {section = "logic@mil_freedom_stalker7",
		idle = 0,
		prior = 10, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
        dependent = "logic@mil_freedom_stalker5",
		}
	table.insert(sj, t)		
    --охранник у входа 
    t = {section = "logic@mil_freedom_stalker8",
		idle = 0,
		prior = 10, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
		predicate = function (obj)
		                     return obj:profile_name () == "svoboda_specnaz"
		            end         
		}
	table.insert(sj, t)		
	-- просто мужик на входе
    t = {section = "logic@mil_freedom_stalker9",
		idle = 0,
		prior = 10, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
        dependent = "logic@mil_freedom_stalker7",
		}
	table.insert(sj, t)		
	-- просто мужик на входе
    t = {section = "logic@mil_freedom_stalker10",
		idle = 0,
		prior = 10, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
        dependent = "logic@mil_freedom_stalker9",
		}
	table.insert(sj, t)		

        
	t = { section = "logic@mil_freedom_walker1",
		idle = 0,
		prior = 1, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
		predicate = function (obj)
		                return (level.get_time_hours() > 6 and level.get_time_hours() < 21)
		            end    
	}
	table.insert(sj, t)		
	------
	t = { section = "logic@mil_freedom_walker2",
		idle = 0,
		prior = 1, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
		predicate = function (obj)
		                return (level.get_time_hours() > 6 and level.get_time_hours() < 21)
		            end    
	}                         
	table.insert(sj, t)		
	------
	t = { section = "logic@mil_freedom_walker3",
		idle = 0,
		prior = 1, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
		predicate = function (obj)
		                return (level.get_time_hours() > 6 and level.get_time_hours() < 21)
		            end    
	}
	table.insert(sj, t)		
	------
	t = { section = "logic@mil_freedom_walker4",
		idle = 0,
		prior = 5, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)		
	------
	t = { section = "logic@mil_freedom_kamp1",
		idle = 0,
		prior = 0, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	    }
	table.insert(sj, t)		
	------
	t = { section = "logic@mil_freedom_kamp2",
		idle = 0,
		prior = 0, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)
	------
	t = { section = "logic@mil_freedom_kamp3",
		idle = 0,
		prior = 0, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)
	------
	t = { section = "logic@mil_freedom_sleep1",
		idle = 0,
		prior = 0, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)
	------
	t = { section = "logic@mil_freedom_sleep2",
		idle = 0,
		prior = 0, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)
	------
	t = { section = "logic@mil_freedom_sleep3",
		idle = 0,
		prior = 0, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)
	------
	t = { section = "logic@mil_freedom_walker7",
		idle = 0,
		prior = 0, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)
	------
	t = { section = "logic@mil_freedom_walker5",
		idle = 0,
		prior = 0, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)
	------
	t = { section = "logic@mil_freedom_camper6",
		idle = 0,
		prior = 1, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)
	
end

function load_states (gname, type)
	if type ~= "mil_freedom" then return nil end
	
    return function (gulag)
           return this.check_state (gulag)
           end
end

function check_state (gulag)
    
    for k,v in gulag.Object do
        local enemy = v:best_enemy ()
        if enemy ~= nil then
           local enemy_type = get_clsid (enemy)
           if enemy_type == clsid.actor or enemy_type == clsid.soldier or enemy_type == clsid.script_stalker then
              if db.actor then
                 db.actor:give_info_portion ("mil_freedom_under_attack")
              end   
              if gulag.attack_time == nil then
                 gulag.attack_time = device ():time_global ()
              else
                 if device ():time_global () - gulag.attack_time > 300000 then
                    db.actor:disable_info_portion ("mil_freedom_under_attack")   
                    gulag.attack_time = 0
                    return 0
                 end  
              end    
              return 0
           end
        end
    end
    
    return 0   
end