-----------------------------------------------------------------------
-- Состояния базы Свободы
--    0 - нормальное состояние
--    1 - атака базы
--    2 - атака хутора Долга
-----------------------------------------------------------------------


function load_job (sj, gname, type, squad, groups)
    
	if type ~= "mil_freedom" then return end
	
    -----------------------------------------------------------------------
    -- Нормальное состояние базы
    -----------------------------------------------------------------------
    -- Max
    t = {section = "logic@mil_freedom_max",
		idle = 0,
		prior = 10, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
		predicate = function (obj)
		                     return obj:profile_name () == "svoboda_master_max"
		            end
		}
	table.insert(sj, t)		
	-- мужик у костра 1
    t = {section = "logic@mil_freedom_stalker1",
		idle = 0,
		prior = 2, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
        dependent = "logic@mil_freedom_max"
		}
	table.insert(sj, t)		

    -- мужик у костра 2
    t = {section = "logic@mil_freedom_stalker2",
		idle = 0,
		prior = 2, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
        dependent = "logic@mil_freedom_stalker1"
		}
	table.insert(sj, t)		
    -- Павлик Морозов
    t = {section = "logic@mil_freedom_stalker3",
		idle = 0,
		prior = 2, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
		predicate = function (obj)
		                     return obj:profile_name () == "svoboda_specnaz_stukach"
		            end         
		}
	table.insert(sj, t)		
    -- одиночный патрульный на базе
    t = {section = "logic@mil_freedom_stalker4",
		idle = 0,
		prior = 10, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
        dependent = "logic@mil_freedom_stalker2",
		predicate = function (obj)
		                     return obj:profile_name () == "svoboda_specnaz"
		            end         
		}
	table.insert(sj, t)		

    -- патрульный на базе
    t = {section = "logic@mil_freedom_stalker5",
		idle = 0,
		prior = 10, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
        dependent = "logic@mil_freedom_stalker4",
		predicate = function (obj)
		                     return obj:profile_name () == "svoboda_specnaz"
		            end         
		}
	table.insert(sj, t)		

    -- фолловер на базе
    t = {section = "logic@mil_freedom_stalker6",
		idle = 0,
		prior = 10, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
        dependent = "logic@mil_freedom_stalker5"
		}
	table.insert(sj, t)		
	-- фолловер на базе
    t = {section = "logic@mil_freedom_stalker7",
		idle = 0,
		prior = 10, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
        dependent = "logic@mil_freedom_stalker5",
		}
	table.insert(sj, t)		
    --охранник у входа 
    t = {section = "logic@mil_freedom_stalker8",
		idle = 0,
		prior = 10, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
		predicate = function (obj)
		                     return obj:profile_name () == "svoboda_specnaz"
		            end         
		}
	table.insert(sj, t)		
	-- просто мужик на входе
    t = {section = "logic@mil_freedom_stalker9",
		idle = 0,
		prior = 10, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
        dependent = "logic@mil_freedom_stalker7",
		}
	table.insert(sj, t)		
	-- просто мужик на входе
    t = {section = "logic@mil_freedom_stalker10",
		idle = 0,
		prior = 10, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
        dependent = "logic@mil_freedom_stalker9",
		}
	table.insert(sj, t)		

        
	t = { section = "logic@mil_freedom_walker1",
		idle = 0,
		prior = 1, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
		predicate = function (obj)
		                return (level.get_time_hours() > 6 and level.get_time_hours() < 21)
		            end    
	}
	table.insert(sj, t)		
	------
	t = { section = "logic@mil_freedom_walker2",
		idle = 0,
		prior = 1, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
		predicate = function (obj)
		                return (level.get_time_hours() > 6 and level.get_time_hours() < 21)
		            end    
	}                         
	table.insert(sj, t)		
	------
	t = { section = "logic@mil_freedom_walker3",
		idle = 0,
		prior = 1, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = "",
		predicate = function (obj)
		                return (level.get_time_hours() > 6 and level.get_time_hours() < 21)
		            end    
	}
	table.insert(sj, t)		
	------
	t = { section = "logic@mil_freedom_walker4",
		idle = 0,
		prior = 5, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)		
	------
	t = { section = "logic@mil_freedom_kamp1",
		idle = 0,
		prior = 0, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	    }
	table.insert(sj, t)		
	------
	t = { section = "logic@mil_freedom_kamp2",
		idle = 0,
		prior = 0, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)
	------
	t = { section = "logic@mil_freedom_kamp3",
		idle = 0,
		prior = 0, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)
	------
	t = { section = "logic@mil_freedom_sleep1",
		idle = 0,
		prior = 0, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)
	------
	t = { section = "logic@mil_freedom_sleep2",
		idle = 0,
		prior = 0, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)
	------
	t = { section = "logic@mil_freedom_sleep3",
		idle = 0,
		prior = 0, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)
	------
	t = { section = "logic@mil_freedom_walker7",
		idle = 0,
		prior = 0, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)
	------
	t = { section = "logic@mil_freedom_walker5",
		idle = 0,
		prior = 0, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)
	------
	t = { section = "logic@mil_freedom_camper6",
		idle = 0,
		prior = 1, state = {0},
		squad = squad, group = groups[0],
		in_rest = "", out_rest = ""
	}
	table.insert(sj, t)
	
	-------------------------------- combat state -----------------------------
	for a = 1, 30, 1 do
	    t = { section = "logic@mil_freedom_defence",
		    idle = 0,
		    prior = 15, state = {1},
		    squad = squad, group = groups[0],
		    in_rest = "", out_rest = "mil_freedom_gulag_defense_res"
	        }
	    table.insert(sj, t)
	end    
	
end

function load_states (gname, type)
	if type ~= "mil_freedom" then return nil end
	
    return function (gulag)
           return this.check_state (gulag)
           end
end

function check_state (gulag)
    if gulag.state == 1 then
       for k,v in gulag.Object do
           local enemy = v:best_enemy ()
           if enemy ~= nil then 
              return 1 
           else
              db.actor:disable_info_portion ("mil_enemy_nearest")
              return 0     
           end
       end    
    end       
    if gulag.state == 0 and db.actor:has_info ("mil_enemy_nearest") == true then
       return 1
    end    
    return 0   
end

-----------------------------------------------------------------------
-- Гулаг монстров около труб
--    0 - нормальное состояние
--    1 - изгнание игрока
-----------------------------------------------------------------------

function checkMonster (npc_community, gulag_type)
	if gulag_type == "mil_tubes" then
		return npc_community == "dog" 
    end
	return false
end