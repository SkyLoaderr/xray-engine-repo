-- Сталкер  -   s_patrol
-- путь     -   patrolway


class "SPatrol"

local snd_interval      =   20000
local anim_interval     =   30000

function SPatrol:__init (npc, script, way, sounds, anims, flags)
    self.npc = npc
    self.script = script
    self.way = way
    self.sounds = sounds
    self.snd_time = 0
    self.anim_time = 0
    self.snd_len = 0
    self.animation = false
    self.anims = anims
    self.flags = flags
    
    npc:script (true, script)
    action (npc, anim (anim.free), cond (cond.time_end, time_infinite))
    
end

function SPatrol:initialize ()
    reset_action (self.npc, self.script)
    action (self.npc, move (move.standing, move.walk, move.line, self.way), anim (anim.free), look (look.search), 
            object (self.npc:best_weapon (), object.activate), cond (cond.move_end))
    self.snd_time = device():time_global()
    self.anim_time = self.snd_time
	self.npc:set_callback (self, "anim_callback", game_object.animation)
end

function SPatrol:anim_callback (obj, action_type, index)
    if action_type ~= game_object.animation or self.animation == false then return end
    self.animation = false
    self.anim_time = device():time_global() + anim_interval
end


function SPatrol:process ()

    --if patrol man is dead then exit
    if self.npc == nil or self.npc:alive () == false then return end
    
    local ctime = device():time_global()
    
    --sounds
    if table.getn (self.sounds) ~= 0 and self.animation == false then
       if self.snd_len ~= 0 and ctime >= self.snd_len then 
          self.snd_len = 0
          self.snd_time = ctime
       else
          if ctime - self.snd_time >= snd_interval and self.snd_len == 0 then
             local sname = self.sounds[math.random (1, table.getn (self.sounds) + 1)]
             local s = sound_object (sname)
             self.snd_len = s:length () + ctime
             update_action (self.npc, self.script, sound (sname, "bip01_head", 
                            vector ():set (0, 0, 0), vector ():set (0, 0, 0), false))
          end
       end   
    end   
    
    
    --animations    
    if self.animation == true then return end
    
    if ctime - self.anim_time < anim_interval then return end
    
    if table.getn (self.anims) == 0 then return end
    local nanim = math.random (1, table.getn (self.anims))
    printf ("Set animation %s", self.anims[nanim])
    action_first (self.npc, anim (self.anims[nanim], self.flags[nanim]), cond (cond.anim_end))
    self.animation = true
        
end



function main ()

    local snds = 
               { 
               "monsters\\Stalker\\Humming\\em1_humming1",
               "monsters\\Stalker\\Humming\\em1_humming2",
               "monsters\\Stalker\\Humming\\em1_humming3",
               "monsters\\Stalker\\Humming\\em1_humming4",
               "monsters\\Stalker\\Humming\\em1_humming5",
               "monsters\\Stalker\\Humming\\em1_whistle1",
               "monsters\\Stalker\\Humming\\em1_whistle2",
               "monsters\\Stalker\\Humming\\em1_whistle3",
               "monsters\\Stalker\\Humming\\em1_whistle4",
               "monsters\\Stalker\\Humming\\em1_whistle5"
               }

    local anims = {"stoya_ruje_ 0", "plechi", "vishka_3", "vishka_1" }
    local flags =  {true, false, false, false }
    
    local sss = ptr.SPatrol (get_level_object ("s_patrol"), ptr.script_name (), patrol ("patrolway"), snds, anims, flags)
    wait (5000)
    
    sss:initialize ()
    
    while true do
          sss:process ()
          wait ()
    end        
    
    
end

