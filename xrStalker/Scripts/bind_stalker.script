module("level_tips")

function init    (obj)
	xr_motivator.AddToMotivator(obj)
end

lasthealth  = 0
lasttime	= 0
----------------------------------------------------------------------------------------------------------------------
class "actor_binder" (object_binder)
----------------------------------------------------------------------------------------------------------------------
function actor_binder:__init (obj) super(obj)
	self.bCheckStart = false
end
----------------------------------------------------------------------------------------------------------------------
function actor_binder:net_spawn(data)
	
	self.bCheckStart = true

	if object_binder.net_spawn(self,data) == false then
		return false
	end

	db.add_actor(self.object)

	return true
end
----------------------------------------------------------------------------------------------------------------------
function actor_binder:net_destroy()
	db.del_actor(self.object)

	object_binder.net_destroy(self)
end
----------------------------------------------------------------------------------------------------------------------
function actor_binder:reinit()
    object_binder.reinit(self)

	self.object:set_info_callback(self, "info_callback")
end
----------------------------------------------------------------------------------------------------------------------
function actor_binder:info_callback(npc, info_id)
	printf("*INFO*: npc='%s' id='%s'", npc:name(), info_id)
	this.process_task_changing(self.object, info_id)
end
----------------------------------------------------------------------------------------------------------------------
function actor_binder:update(delta)
	object_binder.update(self, delta)
	--' Проверка потери жизни
if false then
	printf("%f * %f | %d", self.object.health, self.object.health - lasthealth, game.time() - lasttime)
	lasthealth = self.object.health
	lasttime = game.time()
end

	--' Выдача подсказок
	level_tips.get_tips(self.object)

	--' Сюжет
	level_tasks.proceed(self.object)

	self.object:give_info_portion("encyclopedy")
		
	if  self.bCheckStart then

		printf("SET DEFAULT INFOS")		
		if self.object:dont_has_info("storyline_actor_start") and
		   (level.name() == "l01_escape") then
			self.object:give_info_portion("storyline_actor_start")
			local console = get_console()
			console:execute("run_script avi_start")
			printf("*AVI* RUN START AVI")			
		end

		if self.object:dont_has_info("encyclopedy") then
			self.object:give_info_portion("encyclopedy")
		end

		if self.object:dont_has_info("global_dialogs") then
			self.object:give_info_portion("global_dialogs")
		end

		if self.object:dont_has_info("esc_map_locations") then
			self.object:give_info_portion("esc_map_locations")
		end

		if self.object:dont_has_info("level_changer_icons") then
			self.object:give_info_portion("level_changer_icons")
		end
			
		self.bCheckStart = false		
	end			


end
----------------------------------------------------------------------------------------------------------------------
function actor_init    (npc)
	npc:bind_object(actor_binder(npc))
end




function object_init    (obj)
	local obj_ini = obj:spawn_ini()
	if obj_ini == nil then return end
	
	if obj_ini:section_exist("tip") == true then
		if obj_ini:line_exist("tip", "label") == true then
			local ll = obj_ini:r_string("tip", "label")
			local st = string_table()
			text = st:get_by_id(ll)
			obj:set_tip_text(text)
		end
	end
	
	if obj_ini:section_exist("info") == true then
		if obj_ini:line_exist("info", "id") == true then
			obj:set_use_callback(object_info_callback)
		end
	end	
end

function object_info_callback(obj)
	local obj_ini = obj:spawn_ini()	
	local actor = level.actor()
	if obj_ini == nil or actor == nil then return end
	if obj_ini:section_exist("info") == true then
		if obj_ini:line_exist("info", "id") == true then
			local label = obj_ini:r_string("info", "id")
			actor:give_info_portion(label)			
		end
	end
end

function script_zone_init(obj)
	obj:bind_object(xr_zones.zone_binder(obj))
end


function process_task_changing(actor, info)
	--' Новое задание
	if (info == "tutorial_artefact_start" and
	   actor:dont_has_info("tutorial_artefact_gain") and
	   actor:dont_has_info("tutorial_artefact_done")) or

	   (info == "tutorial_wounded_start" and
	   actor:dont_has_info("tutorial_wounded_help") and
	   actor:dont_has_info("tutorial_wounded_die")) or

	   (info == "escape_artefact_start" and
	   actor:dont_has_info("escape_artefact_gain") and
	   actor:dont_has_info("escape_artefact_done")) or

	   (info == "escape_stalker_meet" and
	   actor:dont_has_info("escape_stalker_give") and
	   actor:dont_has_info("escape_stalker_done")) or

	   (info == "escape_blockpost_case" and
	   actor:dont_has_info("escape_blockpost_case_have") and
	   actor:dont_has_info("escape_blockpost_case_done")) or

	   (info == "escape_dynamite_meet" and
	   actor:dont_has_info("escape_dynamite_gain") and
	   actor:dont_has_info("escape_dynamite_have") and
	   actor:dont_has_info("escape_dynamite_done")) or

	   (info == "garbage_meetstalker_start" and
	   actor:dont_has_info("garbage_meetstalker_done") and
	   actor:dont_has_info("garbage_meetstalker_die")) or

	   (info == "agroprom_military_case" and
	   actor:dont_has_info("agroprom_military_case_have") and
	   actor:dont_has_info("agroprom_military_case_done")) or

	   (info == "agr_krot_band" and
	   actor:dont_has_info("agr_krot_band_done")) or

	   (info == "agr_find_gunslinger_cache" and
	   actor:dont_has_info("agr_find_gunslinger_cache_done")) or

	   (info == "agroprom_find_stalker_phantom" and
	   actor:dont_has_info("agroprom_find_stalker_phantom_done"))
	then
		news_manager.send_task(actor, "new", info)
	end

	--' Обновление задания
	if (info == "tutorial_artefact_gain" and
	   actor:dont_has_info("tutorial_artefact_done")) or

	   (info == "escape_artefact_gain" and
	   actor:dont_has_info("escape_artefact_done")) or

	   (info == "escape_stalker_give" and
	   actor:dont_has_info("escape_stalker_done")) or

	   (info == "escape_blockpost_case_have" and
	   actor:dont_has_info("escape_blockpost_case_done")) or

	   ((info == "escape_dynamite_gain" or
	   info == "escape_dynamite_have") and
	   actor:dont_has_info("escape_dynamite_done")) or

	   (info == "agroprom_military_case_have" and
	   actor:dont_has_info("agroprom_military_case_done"))
	then
		news_manager.send_task(actor, "update", info)
	end
	
	--' Выполнение задания
	if info == "tutorial_artefact_done" or

	   info == "tutorial_wounded_help" or
	   
	   info == "escape_artefact_done" or
	   
	   info == "escape_stalker_done" or
	   
	   info == "escape_blockpost_case_done" or
	   
	   info == "escape_dynamite_done" or
	   
	   info == "garbage_meetstalker_done" or
		
	   info == "agroprom_military_case_done" or
		
	   info == "agr_krot_band_done" or

	   info == "agr_find_gunslinger_cache_done" or
		
	   info == "agroprom_find_stalker_phantom_done"
	then
		news_manager.send_task(actor, "complete", info)
	end
		
	--' Фейл задания
	if info == "tutorial_wounded_die" or

	   info == "garbage_meetstalker_die"
	then
		news_manager.send_task(actor, "fail", info)
	end	
end