local s_walk	= 7

class "CStateWalk"
function CStateWalk:__init(_data, _mem, _path)
	self.data	= _data
	self.memory = _mem
	self.path	= _path
end

function CStateWalk:set_data(_data, _mem)			// это не правильно, но по другому ни как
	self.data	= _data
	self.memory = _mem
end

function CStateWalk:initialize()
	reset_action(self.data.npc, self.data.scr_name)
	if(self.path == nil) then															// Если когда создавли, не передали путь, то читаем из custom data
		self.path	= self.data.npc:spawn_ini():r_string("monster", "walk_path")
	end
	
	assert(self.path ~= nil)			// Нет пути, что-то не то
end

function CStateWalk:execute()
	if(self.data.npc:action() == nil) then	
		action(self.data.npc, move(move.walk_fwd, patrol(self.path)), sound(sound.idle), cond(cond.move_end))
	end
end

function CStateWalk:id()
	return s_walk
end

function CStateWalk:finalize()
end

//---------------------------------------------------------------------------------------------------------
//State walk patrol
//---------------------------------------------------------------------------------------------------------
local time_to_look	= 4000
local time_to_walk	= 10000

class "CStateWalkPatrol" (CStateWalk)
function CStateWalkPatrol:__init(_data, _mem, _path) super(_data, _mem, _path)
	self.index	= 0
end

function CStateWalkPatrol:set_data(_data, _mem)			// это не правильно, но по другому ни как
	self.data	= _data
	self.memory = _mem
end

function CStateWalkPatrol:initialize()
	self.index	= -1
	self.data.npc:set_callback(self, "move_callback", game_object.movement)
	this.CStateWalk.initialize(self)
end

function CStateWalkPatrol:execute()
	if(self.data.npc:action() == nil) then
		if(self.index ~= -1) then
			action(self.data.npc, anim(anim.look_around, 0), sound(sound.idle), cond(cond.time_end, math.random(time_to_look, 1.5*time_to_look)))
			action(self.data.npc, move(move.walk_fwd, patrol(self.path, patrol.next, patrol.continue, true, self.index)),
								sound(sound.idle), cond(cond.time_end, math.random(time_to_walk, 1.5*time_to_walk)))			
		
		else
			action(self.data.npc, move(move.walk_fwd, patrol(self.path, patrol.nearest, patrol.continue, true)),
								sound(sound.idle), cond(cond.time_end, math.random(time_to_walk, 1.5*time_to_walk)))			
		end
	end
end

function CStateWalkPatrol:move_callback(obj, type, index)
	self.index	= index
end

function CStateWalkPatrol:finalize()
	if(self.data.npc) then
		self.data.npc:clear_callback(game_object.movement)
	end
	this.CStateWalk.finalize(sefl)
end
