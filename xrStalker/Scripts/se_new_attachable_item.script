function printf(fmt,...)
    log(string.format(fmt,unpack(arg)))
end

class "CSE_NewAttachableItem"				(cse_alife_item)

function CSE_NewAttachableItem:__init		(section) super(section)
	log							("CSE_NewAttachableItem::CSE_NewAttachableItem called!")
	// s8
//	self._s8_0					= 8
//	self._s8_1					= 7
//	self._s8_2					= 6
//	self._s8_3					= 5
	// s16
	self._s16_0					= 16
	self._s16_1					= 15
	self._s16_2					= 14
	self._s16_3					= 13
	// s32
	self._s32_0					= 32
	self._s32_1					= 31
	self._s32_2					= 30
	self._s32_3					= 29
	// u8
	self._u8_0					= 8
	self._u8_1					= 7
	self._u8_2					= 6
	self._u8_3					= 5
	// u16
	self._u16_0					= 16
	self._u16_1					= 15
	self._u16_2					= 14
	self._u16_3					= 13
	// u32
	self._u32_0					= 32
	self._u32_1					= 31
	self._u32_2					= 30
	self._u32_3					= 29
	// float
	self._float_0				= 1.0
	self._float_1				= 0.9
	self._float_2				= 0.8
	self._float_3				= 0.7
	self._float_4				= 0.6
	// bool
	self._bool_0				= true
	// vector
	self._vector_0				= vector():set(0.0,0.0,0.0)
	self._vector_1				= vector():set(0.1,0.1,0.1)
	self._vector_2				= vector():set(0.2,0.2,0.2)
	self._vector_3				= vector():set(0.3,0.3,0.3)
	self._vector_4				= vector():set(0.4,0.4,0.4)
	// vcolor
	self._vcolor_0				= vector():set(0,0,0)
	// angle
	self._angle_0				= 1.0
	self._angle_1				= 0.9
	self._angle_2				= 0.8
	self._angle_3				= 0.7
	self._angle_4				= 0.6
	// vangle
	self._vangle_0				= vector():set(0.0,0.0,0.0)
	self._vangle_1				= vector():set(0.1,0.1,0.1)
	self._vangle_2				= vector():set(0.2,0.2,0.2)
	self._vangle_3				= vector():set(0.3,0.3,0.3)
	self._vangle_4				= vector():set(0.4,0.4,0.4)
	// flags16
	self._flag16_0				= flags16()
	self._flag16_0:zero			()
	// flags32
	self._flag32_0				= flags32()
	self._flag32_0:zero			()
	// color
	self._color_0				= 0
	// time
	self._time_0				= 0.0
	self._time_1				= 0.1
	self._time_2				= 0.2
end

function CSE_NewAttachableItem:__finalize	()
	log							("CSE_NewAttachableItem::~CSE_NewAttachableItem called!")
end

function CSE_NewAttachableItem:STATE_Write	(packet)
	log							("CSE_NewAttachableItem::STATE_Write called!")
	cse_alife_item.STATE_Write	(self,packet)
	// s8
//	packet:w_s8					(self._s8_0)
//	packet:w_s8					(self._s8_1)
//	packet:w_s8					(self._s8_2)
//	packet:w_s8					(self._s8_3)
	// s16
	packet:w_s16				(self._s16_0)
	packet:w_s16				(self._s16_1)
	packet:w_s16				(self._s16_2)
	packet:w_s16				(self._s16_3)
	// s32
	packet:w_s32				(self._s32_0)
	packet:w_s32				(self._s32_1)
	packet:w_s32				(self._s32_2)
	packet:w_s32				(self._s32_3)
	// u8
	packet:w_u8					(self._u8_0)
	packet:w_u8					(self._u8_1)
	packet:w_u8					(self._u8_2)
	packet:w_u8					(self._u8_3)
	// u16							   
	packet:w_u16				(self._u16_0)
	packet:w_u16				(self._u16_1)
	packet:w_u16				(self._u16_2)
	packet:w_u16				(self._u16_3)
	// u32							   
	packet:w_u32				(self._u32_0)
	packet:w_u32				(self._u32_1)
	packet:w_u32				(self._u32_2)
	packet:w_u32				(self._u32_3)
	// float
	packet:w_float				(self._float_0)
	packet:w_float				(self._float_1)
	packet:w_float				(self._float_2)
	packet:w_float				(self._float_3)
	packet:w_float				(self._float_4)
	// bool
	packet:w_bool				(self._bool_0)
	// vector
	packet:w_vec3				(self._vector_0)
	packet:w_vec3				(self._vector_1)
	packet:w_vec3				(self._vector_2)
	packet:w_vec3				(self._vector_3)
	packet:w_vec3				(self._vector_4)
	// vcolor
	packet:w_vec3				(self._vcolor_0)
	// angle
	packet:w_float				(self._angle_0)
	packet:w_float				(self._angle_1)
	packet:w_float				(self._angle_2)
	packet:w_float				(self._angle_3)
	packet:w_float				(self._angle_4)
	// vangle
	packet:w_vec3				(self._vangle_0)
	packet:w_vec3				(self._vangle_1)
	packet:w_vec3				(self._vangle_2)
	packet:w_vec3				(self._vangle_3)
	packet:w_vec3				(self._vangle_4)
	// flags16
	packet:w_u16				(self._flag16_0:get())
    // flags32
	packet:w_u32				(self._flag32_0:get())
    // color
	packet:w_u32				(self._color_0)
	// time
	packet:w_float				(self._time_0)
	packet:w_float				(self._time_1)
	packet:w_float				(self._time_2)
end

function CSE_NewAttachableItem:STATE_Read	(packet, size)
	log							("CSE_NewAttachableItem::STATE_Read called!")
	cse_alife_item.STATE_Read	(self,packet,size)
	// s8
//	self._s8_0					= packet:r_s8	()
//	self._s8_1					= packet:r_s8	()
//	self._s8_2					= packet:r_s8	()
//	self._s8_3					= packet:r_s8	()
	// s16
	self._s16_0					= packet:r_s16	()
	self._s16_1					= packet:r_s16	()
	self._s16_2					= packet:r_s16	()
	self._s16_3					= packet:r_s16	()
	// s32
	self._s32_0					= packet:r_s32	()
	self._s32_1					= packet:r_s32	()
	self._s32_2					= packet:r_s32	()
	self._s32_3					= packet:r_s32	()
	// u8
	self._u8_0					= packet:r_u8	()
	self._u8_1					= packet:r_u8	()
	self._u8_2					= packet:r_u8	()
	self._u8_3					= packet:r_u8	()
	// u16								   
	self._u16_0					= packet:r_u16	()
	self._u16_1					= packet:r_u16	()
	self._u16_2					= packet:r_u16	()
	self._u16_3					= packet:r_u16	()
	// u32								   
	self._u32_0					= packet:r_u32	()
	self._u32_1					= packet:r_u32	()
	self._u32_2					= packet:r_u32	()
	self._u32_3					= packet:r_u32	()
	// float								   
	self._float_0				= packet:r_float()
	self._float_1				= packet:r_float()
	self._float_2				= packet:r_float()
	self._float_3				= packet:r_float()
	self._float_4				= packet:r_float()
	// bool
	self._bool_0				= packet:r_bool()
	// vector
	packet:r_vec3				(self._vector_0)
	packet:r_vec3				(self._vector_1)
	packet:r_vec3				(self._vector_2)
	packet:r_vec3				(self._vector_3)
	packet:r_vec3				(self._vector_4)
	// vcolor
	packet:r_vec3				(self._vcolor_0)
	// angle								   
	self._angle_0				= packet:r_float()
	self._angle_1				= packet:r_float()
	self._angle_2				= packet:r_float()
	self._angle_3				= packet:r_float()
	self._angle_4				= packet:r_float()
	// vangle
	packet:r_vec3				(self._vangle_0)
	packet:r_vec3				(self._vangle_1)
	packet:r_vec3				(self._vangle_2)
	packet:r_vec3				(self._vangle_3)
	packet:r_vec3				(self._vangle_4)
	// flags16
	self._flag16_0:assign		(packet:r_u16())
	// flags32
	self._flag32_0:assign		(packet:r_u32())
    // color
	self._color_0				= packet:r_u32	()
	// float								   
	self._time_0				= packet:r_float()
	self._time_1				= packet:r_float()
	self._time_2				= packet:r_float()
end

function CSE_NewAttachableItem:FillProps	(pref,items)
	log							("CSE_NewAttachableItem::FillProps called!")
	cse_alife_item.FillProps	(self,pref,items)
	// s8
//	properties_helper():create_s8	(items,"script\\s8\\0",	self,"_s8_0")
//	properties_helper():create_s8	(items,"script\\s8\\1",	self,"_s8_1",-8)
//	properties_helper():create_s8	(items,"script\\s8\\2",	self,"_s8_2",-8,8)
//	properties_helper():create_s8	(items,"script\\s8\\3",	self,"_s8_3",-8,8,2)
	// s16
	properties_helper():create_s16	(items,"script\\s16\\0",self,"_s16_0")
	properties_helper():create_s16	(items,"script\\s16\\1",self,"_s16_1",-16)
	properties_helper():create_s16	(items,"script\\s16\\2",self,"_s16_2",-16,16)
	properties_helper():create_s16	(items,"script\\s16\\3",self,"_s16_3",-16,16,4)
	// s32
	properties_helper():create_s32	(items,"script\\s32\\0",self,"_s32_0")
	properties_helper():create_s32	(items,"script\\s32\\1",self,"_s32_1",-32)
	properties_helper():create_s32	(items,"script\\s32\\2",self,"_s32_2",-32,32)
	properties_helper():create_s32	(items,"script\\s32\\3",self,"_s32_3",-32,32,8)
	// u8
	properties_helper():create_u8	(items,"script\\u8\\0",	self,"_u8_0")
	properties_helper():create_u8	(items,"script\\u8\\1",	self,"_u8_1",1)
	properties_helper():create_u8	(items,"script\\u8\\2",	self,"_u8_2",1,8)
	properties_helper():create_u8	(items,"script\\u8\\3",	self,"_u8_3",1,8,2)
	// u16														   
	properties_helper():create_u16	(items,"script\\u16\\0",self,"_u16_0")
	properties_helper():create_u16	(items,"script\\u16\\1",self,"_u16_1",1)
	properties_helper():create_u16	(items,"script\\u16\\2",self,"_u16_2",1,16)
	properties_helper():create_u16	(items,"script\\u16\\3",self,"_u16_3",1,16,4)
	// u32														   
	properties_helper():create_u32	(items,"script\\u32\\0",self,"_u32_0")
	properties_helper():create_u32	(items,"script\\u32\\1",self,"_u32_1",1)
	properties_helper():create_u32	(items,"script\\u32\\2",self,"_u32_2",1,32)
	properties_helper():create_u32	(items,"script\\u32\\3",self,"_u32_3",1,32,8)
	// float														   
	properties_helper():create_float(items,"script\\float\\0",self,"_float_0")
	properties_helper():create_float(items,"script\\float\\1",self,"_float_1",0)
	properties_helper():create_float(items,"script\\float\\2",self,"_float_2",0,10)
	properties_helper():create_float(items,"script\\float\\3",self,"_float_3",0,10,0.1)
	properties_helper():create_float(items,"script\\float\\4",self,"_float_4",0,10,0.1,3)
	// bool														   
	properties_helper():create_bool	(items,"script\\bool\\0",self,"_bool_0")
	// vector
	properties_helper():create_vector(items,"script\\vector\\0",self,"_vector_0")
	properties_helper():create_vector(items,"script\\vector\\1",self,"_vector_1",-1)
	properties_helper():create_vector(items,"script\\vector\\2",self,"_vector_2",-10,10)
	properties_helper():create_vector(items,"script\\vector\\3",self,"_vector_3",-10,10,0.5)
	properties_helper():create_vector(items,"script\\vector\\4",self,"_vector_4",-10,10,0.5,4)
	// vcolor
	properties_helper():create_vcolor(items,"script\\vcolor\\0",self,"_vcolor_0")
	// angle
	properties_helper():create_float(items,"script\\angle\\0",self,"_angle_0")
	properties_helper():create_float(items,"script\\angle\\1",self,"_angle_1",0)
	properties_helper():create_float(items,"script\\angle\\2",self,"_angle_2",0,10)
	properties_helper():create_float(items,"script\\angle\\3",self,"_angle_3",0,10,0.1)
	properties_helper():create_float(items,"script\\angle\\4",self,"_angle_4",0,10,0.1,3)
	// vangle
	properties_helper():create_vangle(items,"script\\vangle\\0",self,"_vangle_0")
	properties_helper():create_vangle(items,"script\\vangle\\1",self,"_vangle_1",-1)
	properties_helper():create_vangle(items,"script\\vangle\\2",self,"_vangle_2",-10,10)
	properties_helper():create_vangle(items,"script\\vangle\\3",self,"_vangle_3",-10,10,0.5)
	properties_helper():create_vangle(items,"script\\vangle\\4",self,"_vangle_4",-10,10,0.5,4)
	// flags16
	properties_helper():create_flag16(items,"script\\flags16\\0",self,"_flag16_0",1)
	properties_helper():create_flag16(items,"script\\flags16\\1",self,"_flag16_0",2)
	properties_helper():create_flag16(items,"script\\flags16\\2",self,"_flag16_0",4)
	properties_helper():create_flag16(items,"script\\flags16\\3",self,"_flag16_0",8)
	// flags32
	properties_helper():create_flag32(items,"script\\flags32\\0",self,"_flag32_0",1)
	properties_helper():create_flag32(items,"script\\flags32\\1",self,"_flag32_0",2)
	properties_helper():create_flag32(items,"script\\flags32\\2",self,"_flag32_0",4)
	properties_helper():create_flag32(items,"script\\flags32\\3",self,"_flag32_0",8)
	// color
	properties_helper():create_color(items,"script\\color\\0",self,"_color_0")
	// time
	properties_helper():create_time	(items,"script\\time\\0",self,"_time_0")
	properties_helper():create_time	(items,"script\\time\\1",self,"_time_1",100)
	properties_helper():create_time	(items,"script\\time\\2",self,"_time_2",0,100000.0)
end
