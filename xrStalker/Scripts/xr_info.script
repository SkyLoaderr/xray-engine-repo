----------------------------------------------------------------------------------------------------------------------
--	Выдача информации сталкерам.
--	автор: Диденко Руслан (Stohe)
--	TODO: 
----------------------------------------------------------------------------------------------------------------------

local info_by_community = {
		stalker = {"encyclopedy_zone_artifact_af-medusa"},
		monolith = {"encyclopedy_zone_artifact_af-medusa"},
		military = {"encyclopedy_zone_artifact_af-medusa"},
		killer = {"encyclopedy_zone_artifact_af-medusa"},
		ecolog = {"encyclopedy_zone_artifact_af-medusa"},
		dolg = {"encyclopedy_zone_artifact_af-medusa"},
		freedom = {"encyclopedy_zone_artifact_af-medusa"},
		bandit = {"encyclopedy_zone_artifact_af-medusa"}
		}

local info_by_rank = {
		novice = {"encyclopedy_zone_artifact_af-medusa"},
		stalker = {"encyclopedy_zone_artifact_af-medusa"},
		veteran = {"encyclopedy_zone_artifact_af-medusa"},
		master = {"encyclopedy_zone_artifact_af-medusa"}
		}


function loadInfo(npc, char_ini)
	-- Загрузка из кастом даты
	if char_ini:section_exist("known_info") then
		local n = char_ini:line_count("known_info")
		local result, id, value = 0,"",""
	
		for i=0,n-1 do
			result, id, value = char_ini:r_line("known_info",i,"","")

			give_npc_info(npc, id)
		end
	end
	
	
	-- Загрузка из генератора.
	local community_info = info_by_community[npc:character_community()]
	if community_info == nil then
		return
	end
	
	local rank = "novice"
	if npc:character_rank() >= 90 then
		rank = "master"
	elseif npc:character_rank() >= 60 then
		rank = "veteran"
	elseif npc:character_rank() >= 30 then
		rank = "stalker"
	end	
	local rank_info = info_by_rank[rank]
	if rank_info == nil then
		return
	end

	local tt = {}
	-- оставляем инфопоршны, которые есть и там и там.
	for k,v in pairs(community_info) do
		for kk,vv in pairs(rank_info) do
			if v == vv then
				-- Добавляем в список доступных знаний
				table.insert(tt, v)
				break
			end
		end	
	end
	
	local size = table.getn(tt)
	if size > 0 and math.random(100) >= 0 then
		local ii = tt[math.random(size)]
		give_npc_info(npc, ii)
	end
end

function give_npc_info(npc, info)
	-- Даем НПС инфопоршны
	npc:give_info_portion(info)

	-- Проверяем есть ли озвученная история на этот инфопоршн, и если есть
	-- добавляем ее тоже
	if sound_theme.theme[info] ~= nil then
		if db.story_by_id[npc:id()] == nil then
			db.story_by_id[npc:id()] = {}
		end
		
		table.insert(db.story_by_id[npc:id()], info)
	end
end