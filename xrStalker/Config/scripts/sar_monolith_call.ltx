[logic]
active = ph_door@locked

[ph_door@locked]
locked = true
closed = true
snd_open_start = trader_door_locked
on_use = {-sar_access_decoding} ph_door@decoding %+sar_access_decoding%

[ph_door@decoding]
locked = true
on_info = {+sar_finish_decoding} ph_door@unlocked
on_info2 = {-sar_start_decoding} ph_door@locked %-sar_access_decoding%
closed = true
snd_open_start = trader_door_locked

[ph_door@unlocked]
locker = false
closed = false
snd_init = trader_door_unlock
snd_open_start = trader_door_open_start
snd_close_start = trader_door_close_start
snd_close_stop = trader_door_close_stop
on_use = ph_door@closed

[ph_door@closed]
locker = false
closed = true
snd_init = trader_door_unlock
snd_open_start = trader_door_open_start
snd_close_start = trader_door_close_start
snd_close_stop = trader_door_close_stop
on_use = ph_door@unlocked

[collide]
ignore_static