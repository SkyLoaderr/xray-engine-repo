local stalkers = {
                 {name = "bar_stalker_01",  id = -1},
                 {name = "bar_stalker_02",  id = -1},
                 {name = "bar_stalker_03",  id = -1},
                 {name = "bar_stalker_04",  id = -1},
                 {name = "bar_stalker_05",  id = -1},
                 {name = "bar_stalker_06",  id = -1},
                 {name = "bar_stalker_07",  id = -1},
                 {name = "bar_stalker_08",  id = -1},
                 {name = "bar_stalker_09",  id = -1},
                 {name = "bar_stalker_10",  id = -1},
                 {name = "bar_stalker_11",  id = -1},
                 {name = "bar_stalker_12",  id = -1},
                 {name = "bar_stalker_13",  id = -1},
                 {name = "bar_stalker_14",  id = -1},
                 {name = "bar_stalker_15",  id = -1}
                 }
local indices = {}                 
                 
local last_time = 0

-------------------------------------------------------------------------------------
function main ()
    if table.getn (stalkers) == 0 then return end
    --fill the id's
    for a = 1, table.getn (stalkers), 1 do
        local npc = get_level_object (stalkers[a].name)
        stalkers[a].id = npc:id ()
        this.switch_offline (a)
    end    
        
    local scr_zone = get_level_object ("bar_zone")
    scr_zone:set_callback (this.on_enter, true)
    scr_zone:set_callback (this.on_exit,  false)
    
    while true do
          wait ()
    end      
end
-------------------------------------------------------------------------------------
function on_enter (zone, obj)
    --printf ("ACTOR ENTERED")
    --flush ()
    local act = level.actor ()
    if act == nil or obj:id () ~= act:id () then return  end
    if game.time () - last_time > (12 * 60 * 60 * 1000) or table.getn (indices) == 0 then
       this.rechange ()
    end   
    
    for a = 1, table.getn (indices), 1 do
        this.switch_online (indices[a])
    end
end
 -------------------------------------------------------------------------------------
function on_exit (zone, obj)
    --printf ("ACTOR EXITED")
    --flush ()
    local act = level.actor ()
    if act == nil or obj:id () ~= act:id () then return  end
    for a = 1, table.getn (indices), 1 do
        this.switch_offline (indices[a])
    end
    last_time = game.time ()
end
-------------------------------------------------------------------------------------
function rechange ()
    --printf ("RECHANGE CALLED")
    --flush ()
    local num = table.getn (stalkers) / 3
    --printf ("NUMBER OF STALKERS %d", num)
    --flush ()
    indices = {}
    local a = 0
    while a ~= num do
          --printf ("PASS %d", a)
          --flush ()
          local index = math.random (1, table.getn (stalkers))
          if this.present (index) == false then
             --printf ("INSERT %d", index)
             --flush ()
             a = a + 1
             table.insert (indices, index)
          end
    end          
    --printf ("RECHANGE EXIT")
end
-------------------------------------------------------------------------------------
function present (index)
    for a = 1, table.getn (indices), 1 do
        if index == indices[a] then return true end
    end
    return false    
        
end
-------------------------------------------------------------------------------------
function switch_online (a)
    --printf ("SWITCH ONLINE CALLED")
    --flush ()
    local sim = alife ()
    if sim ~= nil then
       --printf ("PREPARE TO ONLINE") 
       --flush ()
       sim:set_switch_online  (stalkers[a].id, true) 
       sim:set_switch_offline (stalkers[a].id, false)
       --printf ("Object %s move to online at %d time", stalkers[a].name, device ():time_global ())
       --flush ()
    else
       printf ("NO SIMULATION")    
    end       
end
-------------------------------------------------------------------------------------------
function switch_offline (a)
    local sim = alife ()
    if sim ~= nil then
       sim:set_switch_online  (stalkers[a].id, false) 
       sim:set_switch_offline (stalkers[a].id, true)
       printf ("Object %s move to offline at %d time", stalkers[a].name, device ():time_global ())
    else
       printf ("NO SIMULATION")    
    end       
end
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
