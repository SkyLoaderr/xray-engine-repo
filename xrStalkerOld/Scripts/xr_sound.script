---------------------------------------------------------------------------------------------------------------------
--	Схема озвучки
--	автор:  Диденко Руслан  (Stohe)
--	update: Чугай Александр (Chugai)
----------------------------------------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------------------------------------------------
--	Установка и распарсивание тем в файлы.
-----------------------------------------------------------------------------------------------------------------------------------
function set_sound(npc, sound, now)
	--printf("*SND* try to change SND")
	if (db.sound[npc:id()] == nil or
	   db.sound[npc:id()].theme ~= sound) or
	   now == true
	then
		printf("*SND* change SND to [%s]", utils.to_str(sound))
		-- Туточки надобно распарсить имена тем в их id
		if sound == nil then sound = "weather, state" end
		db.sound[npc:id()].theme = sound
		db.sound[npc:id()].snd = parse_names(sound)
		db.sound[npc:id()].last_snd = {}
		if now == true then
			db.sound[npc:id()].begin = nil
		end
	end
end

function set_sound_play(npc, sound)
	printf("*SND* play SND to [%s]", utils.to_str(sound))
	if db.sound[npc:id()].last_snd == nil then
		db.sound[npc:id()].last_snd = {}
	end
	this.play_sound(npc, parse_names(sound))
end

function update(npc)
	if npc:active_sound_count() ~= 0 then return end
	
	if db.sound[npc:id()].snd == nil then return end
--	printf("*SND* [%s] - [%s] : [%s]", device():time_global(), 
--									   utils.to_str(db.sound[npc:id()].begin),
--									   utils.to_str(db.sound[npc:id()].idle))
	if db.sound[npc:id()].begin == nil or
	   device():time_global() - db.sound[npc:id()].begin >= db.sound[npc:id()].idle
	then
		this.play_sound(npc, db.sound[npc:id()].snd)
	end
end


function play_sound(npc, themes)
	function get_sound(path, tt)
		if path == nil then return nil end
		if path.exec == nil then

			-- чтение настроек темы
			if path.into_id ~= nil or
			   path.rnd_id ~= nil
			then
				tt.into_id = path.into_id
				tt.into_max = path.into_max
				tt.into_last = nil
				tt.rnd_id = path.rnd_id
				tt.rnd_max = path.rnd_max
				tt.rnd_last = nil
				tt.min_snd = path.min_snd
				tt.max_snd = path.max_snd
				tt.rnd_snd = path.rnd_snd
				
			end
		else
			get_sound(path.types[path.exec(path.types, npc, target)], tt)
		end
	end

	-- нужно составить список тем
	local snd_table = {}
	local t = 0		
	for k,v in themes do
		snd_table[t] = {}
		get_sound(sound_theme.theme[v], snd_table[t])
		t = t + 1
	end	
	--printf("*")
	--print_table(snd_table)
	--printf("*")
	-- из списка тем выбираем одну.	
	local snd = snd_table[math.random(0, t-1)]
	if snd ~= nil then
		--printf("!")
		--print_table(snd)
		--printf("!")
		db.sound[npc:id()].begin = device():time_global()
		db.sound[npc:id()].idle = math.random(snd.min_snd, snd.max_snd)*1000			
		-- необходимо ли нам играть into или rnd звуки
		if snd.into_max ~= nil and
			snd.into_max > 0 and
			(db.sound[npc:id()].last_snd[snd.into_id] == nil or
			db.sound[npc:id()].last_snd[snd.into_id] < snd.into_max-1)
		then
			-- играем входные
			if db.sound[npc:id()].last_snd[snd.into_id] == nil then db.sound[npc:id()].last_snd[snd.into_id] = -1 end
			
			--printf("*SND* play [%s]", db.sound[npc:id()].last_snd[snd.into_id])
			npc:play_sound(snd.into_id, 1, 0, 1, 0, db.sound[npc:id()].last_snd[snd.into_id]+1)
			db.sound[npc:id()].last_snd[snd.into_id] = db.sound[npc:id()].last_snd[snd.into_id] + 1
			--printf("*SND* play [%s]", db.sound[npc:id()].last_snd[snd.into_id])
			return
		end		
		if snd.rnd_max ~= nil and
			snd.rnd_max > 0
		then
			-- играем рандомные
			local s = 0
			if snd.rnd_max == 1 then
				s = 0
			else
				if db.sound[npc:id()].last_snd[snd.rnd_id] ~= nil then
					s = math.random(0, snd.rnd_max-2)
					if s >= db.sound[npc:id()].last_snd[snd.rnd_id] then s = s + 1 end
				else
					s = math.random(0, snd.rnd_max-1)					
				end	
			end			
							
			--printf("*SND* play [%s]", s)
			npc:play_sound(snd.rnd_id, 1, 0, 1, 0, s)
			db.sound[npc:id()].last_snd[snd.rnd_id] = s
		end		
	end			
end

function load_sound(npc)
	sound_theme.load_sound(npc)
end