#include "stdafx.h"
#pragma hdrstop

#include "xrHemisphere.h"

#define HEMI1_VERTS	26
#define HEMI1_FACES	40
#define HEMI2_VERTS	91
#define HEMI3_VERTS	196

#pragma warning (disable:4305)
const Fvector hemi_1[HEMI1_VERTS] = {
	{ 0.525730,	 0.850655,	-0.000000},
	{ 0.162460,	 0.850655,	 0.500000},
	{ 0.000000,	 1.000000,	-0.000000},
	{-0.425324,	 0.850655,	 0.309015},
	{-0.425324,	 0.850655,	-0.309017},
	{ 0.162460,	 0.850655,	-0.500000},
	{ 0.688194,	 0.525730,	 0.500000},
	{-0.262865,	 0.525730,	 0.809013},
	{-0.850647,	 0.525730,	-0.000001},
	{-0.262865,	 0.525730,	-0.809021},
	{ 0.688194,	 0.525730,	-0.500000},
	{ 0.894424,	 0.447212,	-0.000000},
	{ 0.276394,	 0.447212,	 0.850647},
	{-0.723610,	 0.447212,	 0.525730},
	{-0.723610,	 0.447212,	-0.525734},
	{ 0.276394,	 0.447212,	-0.850655},
	{ 0.951057,	 0.000000,	 0.309017},
	{ 0.587788,	 0.000000,	 0.809013},
	{ 0.000000,	 0.000000,	 1.000000},
	{-0.587784,	 0.000000,	 0.809013},
	{-0.951057,	 0.000000,	 0.309015},
	{-0.951057,	 0.000000,	-0.309017},
	{-0.587784,	 0.000000,	-0.809021},
	{ 0.000000,	 0.000000,	-1.000000},
	{ 0.587788,	 0.000000,	-0.809013},
	{ 0.951057,	 0.000000,	-0.309017},
};
const u16 hemi_1v[HEMI1_FACES*3] = {
	0,		1,		2,
	1,		3,		2,
	3,		4,		2,
	4,		5,		2,
	5,		0,		2,
	1,		0,		6,
	3,		1,		7,
	4,		3,		8,
	5,		4,		9,
	0,		5,		10,
	10,		11,		0,
	11,		6,		0,
	6,		12,		1,
	12,		7,		1,
	7,		13,		3,
	13,		8,		3,
	8,		14,		4,
	14,		9,		4,
	9,		15,		5,
	15,		10,		5,
	6,		11,		16,
	12,		6,		17,
	7,		12,		18,
	13,		7,		19,
	8,		13,		20,
	14,		8,		21,
	9,		14,		22,
	15,		9,		23,
	10,		15,		24,
	11,		10,		25,
	25,		16,		11,
	16,		17,		6,
	17,		18,		12,
	18,		19,		7,
	19,		20,		13,
	20,		21,		8,
	21,		22,		14,
	22,		23,		9,
	23,		24,		15,
	24,		25,		10,
};

const Fvector hemi_2[HEMI2_VERTS] = 
{
	{0.00000,	1.00000,	0.00000},
	{0.52573,	0.85065,	0.00000},
	{0.16246,	0.85065,	0.50000},
	{-0.42533,	0.85065,	0.30902},
	{-0.42533,	0.85065,	-0.30902},
	{0.16246,	0.85065,	-0.50000},
	{0.89443,	0.44721,	0.00000},
	{0.27639,	0.44721,	0.85065},
	{-0.72361,	0.44721,	0.52573},
	{-0.72361,	0.44721,	-0.52573},
	{0.27639,	0.44721,	-0.85065},
	{0.68819,	0.52573,	0.50000	},
	{-0.26287,	0.52573,	0.80902	},
	{-0.85065,	0.52573,	-0.00000},
	{-0.26287,	0.52573,	-0.80902},
	{0.68819,	0.52573,	-0.50000},
	{0.95106,	0.00000,	0.30902	},
	{0.58779,	0.00000,	0.80902	},
	{-0.00000,	0.00000,	1.00000	},
	{-0.58779,	0.00000,	0.80902	},
	{-0.95106,	0.00000,	0.30902	},
	{-0.95106,	0.00000,	-0.30902},
	{-0.58779,	0.00000,	-0.80902},
	{0.00000,	0.00000,	-1.00000},
	{0.58779,	0.00000,	-0.80902},
	{0.95106,	0.00000,	-0.30902},
	{0.27327,	0.96194,	0.00000	},
	{0.08444,	0.96194,	0.25989	},
	{-0.22108,	0.96194,	0.16062	},
	{-0.22108,	0.96194,	-0.16062},
	{0.08444,	0.96194,	-0.25989},
	{0.36180,	0.89443,	0.26287	},
	{-0.13820,	0.89443,	0.42533	},
	{-0.44721,	0.89443,	-0.00000},
	{-0.13820,	0.89443,	-0.42533},
	{0.36180,	0.89443,	-0.26287},
	{0.73818,	0.67461,	0.00000	},
	{0.22811,	0.67461,	0.70205	},
	{-0.59720,	0.67461,	0.43389	},
	{-0.59720,	0.67461,	-0.43389},
	{0.22811,	0.67461,	-0.70205},
	{0.63820,	0.72361,	0.26287	},
	{-0.05279,	0.72361,	0.68819	},
	{-0.67082,	0.72361,	0.16246	},
	{-0.36180,	0.72361,	-0.58779},
	{0.44721,	0.72361,	-0.52573},
	{0.63820,	0.72361,	-0.26287},
	{0.44721,	0.72361,	0.52573	},
	{-0.36180,	0.72361,	0.58779	},
	{-0.67082,	0.72361,	-0.16246},
	{-0.05279,	0.72361,	-0.68819},
	{0.82262,	0.50572,	0.25989	},
	{0.00703,	0.50572,	0.86267	},
	{-0.81827,	0.50572,	0.27327	},
	{-0.51275,	0.50572,	-0.69378},
	{0.50138,	0.50572,	-0.70205},
	{0.82262,	0.50572,	-0.25989},
	{0.50138,	0.50572,	0.70205	},
	{-0.51275,	0.50572,	0.69378	},
	{-0.81827,	0.50572,	-0.27327},
	{0.00703,	0.50572,	-0.86267},
	{0.95925,	0.23245,	0.16062	},
	{0.86180,	0.27639,	0.42533	},
	{0.67082,	0.27639,	0.68819	},
	{0.44919,	0.23245,	0.86267	},
	{0.14366,	0.23245,	0.96194	},
	{-0.13820,	0.27639,	0.95106	},
	{-0.44721,	0.27639,	0.85065	},
	{-0.68164,	0.23245,	0.69378	},
	{-0.87046,	0.23245,	0.43389	},
	{-0.94721,	0.27639,	0.16246	},
	{-0.94721,	0.27639,	-0.16246},
	{-0.87046,	0.23245,	-0.43389},
	{-0.68164,	0.23245,	-0.69378},
	{-0.44721,	0.27639,	-0.85065},
	{-0.13820,	0.27639,	-0.95106},
	{0.14366,	0.23245,	-0.96194},
	{0.44919,	0.23245,	-0.86267},
	{0.67082,	0.27639,	-0.68819},
	{0.86180,	0.27639,	-0.42533},
	{0.95925,	0.23245,	-0.16062},
	{0.80902,	0.00000,	0.58779	},
	{0.30902,	0.00000,	0.95106	},
	{-0.30902,	0.00000,	0.95106	},
	{-0.80902,	0.00000,	0.58779	},
	{-1.00000,	0.00000,	-0.00000},
	{-0.80902,	0.00000,	-0.58779},
	{-0.30902,	0.00000,	-0.95106},
	{0.30902,	0.00000,	-0.95106},
	{0.80902,	0.00000,	-0.58779},
	{1.00000,	0.00000,	0.00000	}
};					   	
const Fvector hemi_3[HEMI3_VERTS] = 
{					   	
	{+0.0000,	+0.5000,	+0.0000	},
	{+0.2629,	+0.4253,	+0.0000	},
	{+0.0812,	+0.4253,	+0.2500	},
	{-0.2127,	+0.4253,	+0.1545	},
	{-0.2127,	+0.4253,	-0.1545	},
	{+0.0812,	+0.4253,	-0.2500	},
	{+0.4472,	+0.2236,	+0.0000	},
	{+0.1382,	+0.2236,	+0.4253	},
	{-0.3618,	+0.2236,	+0.2629	},
	{-0.3618,	+0.2236,	-0.2629	},
	{+0.1382,	+0.2236,	-0.4253	},
	{+0.3441,	+0.2629,	+0.2500	},
	{-0.1314,	+0.2629,	+0.4045	},
	{-0.4253,	+0.2629,	-0.0000	},
	{-0.1314,	+0.2629,	-0.4045	},
	{+0.3441,	+0.2629,	-0.2500	},
	{+0.4755,	+0.0000,	+0.1545	},
	{+0.2939,	+0.0000,	+0.4045	},
	{-0.0000,	+0.0000,	+0.5000	},
	{-0.2939,	+0.0000,	+0.4045	},
	{-0.4755,	+0.0000,	+0.1545	},
	{-0.4755,	+0.0000,	-0.1545	},
	{-0.2939,	+0.0000,	-0.4045	},
	{+0.0000,	+0.0000,	-0.5000	},
	{+0.2939,	+0.0000,	-0.4045	},
	{+0.4755,	+0.0000,	-0.1545	},
	{+0.0917,	+0.4915,	+0.0000	},
	{+0.1804,	+0.4663,	+0.0000	},
	{+0.0283,	+0.4915,	+0.0872	},
	{+0.0557,	+0.4663,	+0.1715	},
	{-0.0742,	+0.4915,	+0.0539	},
	{-0.1459,	+0.4663,	+0.1060	},
	{-0.0742,	+0.4915,	-0.0539	},
	{-0.1459,	+0.4663,	-0.1060	},
	{+0.0283,	+0.4915,	-0.0872	},
	{+0.0557,	+0.4663,	-0.1715	},
	{+0.2106,	+0.4448,	+0.0884	},
	{+0.1492,	+0.4448,	+0.1730	},
	{-0.0190,	+0.4448,	+0.2276	},
	{-0.1184,	+0.4448,	+0.1953	},
	{-0.2224,	+0.4448,	+0.0523	},
	{-0.2224,	+0.4448,	-0.0523	},
	{-0.1184,	+0.4448,	-0.1953	},
	{-0.0190,	+0.4448,	-0.2276	},
	{+0.1492,	+0.4448,	-0.1730	},
	{+0.2106,	+0.4448,	-0.0884	},
	{+0.3364,	+0.3699,	+0.0000	},
	{+0.3986,	+0.3019,	+0.0000	},
	{+0.1040,	+0.3699,	+0.3200	},
	{+0.1232,	+0.3019,	+0.3791	},
	{-0.2722,	+0.3699,	+0.1978	},
	{-0.3225,	+0.3019,	+0.2343	},
	{-0.2722,	+0.3699,	-0.1978	},
	{-0.3225,	+0.3019,	-0.2343	},
	{+0.1040,	+0.3699,	-0.3200	},
	{+0.1232,	+0.3019,	-0.3791	},
	{+0.3036,	+0.3873,	+0.0884	},
	{+0.3311,	+0.3323,	+0.1730	},
	{+0.0097,	+0.3873,	+0.3161	},
	{-0.0622,	+0.3323,	+0.3683	},
	{-0.2976,	+0.3873,	+0.1069	},
	{-0.3695,	+0.3323,	+0.0547	},
	{-0.1936,	+0.3873,	-0.2500	},
	{-0.1662,	+0.3323,	-0.3346	},
	{+0.1779,	+0.3873,	-0.2614	},
	{+0.2668,	+0.3323,	-0.2614	},
	{+0.3036,	+0.3873,	-0.0884	},
	{+0.3311,	+0.3323,	-0.1730	},
	{+0.1779,	+0.3873,	+0.2614	},
	{+0.2668,	+0.3323,	+0.2614	},
	{-0.1936,	+0.3873,	+0.2500	},
	{-0.1662,	+0.3323,	+0.3346	},
	{-0.2976,	+0.3873,	-0.1069	},
	{-0.3695,	+0.3323,	-0.0547	},
	{+0.0097,	+0.3873,	-0.3161	},
	{-0.0622,	+0.3323,	-0.3683	},
	{+0.4269,	+0.2452,	+0.0872	},
	{+0.3922,	+0.2584,	+0.1715	},
	{+0.0490,	+0.2452,	+0.4330	},
	{-0.0420,	+0.2584,	+0.4260	},
	{-0.3967,	+0.2452,	+0.1804	},
	{-0.4181,	+0.2584,	+0.0917	},
	{-0.2941,	+0.2452,	-0.3215	},
	{-0.2165,	+0.2584,	-0.3693	},
	{+0.2149,	+0.2452,	-0.3791	},
	{+0.2843,	+0.2584,	-0.3200	},
	{+0.3922,	+0.2584,	-0.1715	},
	{+0.4269,	+0.2452,	-0.0872	},
	{+0.2843,	+0.2584,	+0.3200	},
	{+0.2149,	+0.2452,	+0.3791	},
	{-0.2165,	+0.2584,	+0.3693	},
	{-0.2941,	+0.2452,	+0.3215	},
	{-0.4181,	+0.2584,	-0.0917	},
	{-0.3967,	+0.2452,	-0.1804	},
	{-0.0420,	+0.2584,	-0.4260	},
	{+0.0490,	+0.2452,	-0.4330	},
	{+0.4728,	+0.1534,	+0.0539	},
	{+0.4824,	+0.0780,	+0.1060	},
	{+0.4063,	+0.1819,	+0.2276	},
	{+0.4508,	+0.0930,	+0.1953	},
	{+0.3421,	+0.1819,	+0.3161	},
	{+0.3251,	+0.0930,	+0.3683	},
	{+0.1974,	+0.1534,	+0.4330	},
	{+0.2499,	+0.0780,	+0.4260	},
	{+0.0948,	+0.1534,	+0.4663	},
	{+0.0482,	+0.0780,	+0.4915	},
	{-0.0909,	+0.1819,	+0.4568	},
	{-0.0465,	+0.0930,	+0.4891	},
	{-0.1949,	+0.1819,	+0.4230	},
	{-0.2499,	+0.0930,	+0.4230	},
	{-0.3508,	+0.1534,	+0.3215	},
	{-0.3279,	+0.0780,	+0.3693	},
	{-0.4142,	+0.1534,	+0.2343	},
	{-0.4526,	+0.0780,	+0.1978	},
	{-0.4625,	+0.1819,	+0.0547	},
	{-0.4795,	+0.0930,	+0.1069	},
	{-0.4625,	+0.1819,	-0.0547	},
	{-0.4795,	+0.0930,	-0.1069	},
	{-0.4142,	+0.1534,	-0.2343	},
	{-0.4526,	+0.0780,	-0.1978	},
	{-0.3508,	+0.1534,	-0.3215	},
	{-0.3279,	+0.0780,	-0.3693	},
	{-0.1949,	+0.1819,	-0.4230	},
	{-0.2499,	+0.0930,	-0.4230	},
	{-0.0909,	+0.1819,	-0.4568	},
	{-0.0465,	+0.0930,	-0.4891	},
	{+0.0948,	+0.1534,	-0.4663	},
	{+0.0482,	+0.0780,	-0.4915	},
	{+0.1974,	+0.1534,	-0.4330	},
	{+0.2499,	+0.0780,	-0.4260	},
	{+0.3421,	+0.1819,	-0.3161	},
	{+0.3251,	+0.0930,	-0.3683	},
	{+0.4063,	+0.1819,	-0.2276	},
	{+0.4508,	+0.0930,	-0.1953	},
	{+0.4728,	+0.1534,	-0.0539	},
	{+0.4824,	+0.0780,	-0.1060	},
	{+0.4330,	+0.0000,	+0.2500	},
	{+0.3716,	+0.0000,	+0.3346	},
	{+0.2034,	+0.0000,	+0.4568	},
	{+0.1040,	+0.0000,	+0.4891	},
	{-0.1040,	+0.0000,	+0.4891	},
	{-0.2034,	+0.0000,	+0.4568	},
	{-0.3716,	+0.0000,	+0.3346	},
	{-0.4330,	+0.0000,	+0.2500	},
	{-0.4973,	+0.0000,	+0.0523	},
	{-0.4973,	+0.0000,	-0.0523	},
	{-0.4330,	+0.0000,	-0.2500	},
	{-0.3716,	+0.0000,	-0.3346	},
	{-0.2034,	+0.0000,	-0.4568	},
	{-0.1040,	+0.0000,	-0.4891	},
	{+0.1040,	+0.0000,	-0.4891	},
	{+0.2034,	+0.0000,	-0.4568	},
	{+0.3716,	+0.0000,	-0.3346	},
	{+0.4330,	+0.0000,	-0.2500	},
	{+0.4973,	+0.0000,	-0.0523	},
	{+0.4973,	+0.0000,	+0.0523	},
	{+0.1208,	+0.4772,	+0.0878	},
	{-0.0461,	+0.4772,	+0.1420	},
	{-0.1493,	+0.4772,	-0.0000	},
	{-0.0461,	+0.4772,	-0.1420	},
	{+0.1208,	+0.4772,	-0.0878	},
	{+0.2465,	+0.3965,	+0.1791	},
	{-0.0941,	+0.3965,	+0.2897	},
	{-0.3047,	+0.3965,	-0.0000	},
	{-0.0941,	+0.3965,	-0.2897	},
	{+0.2465,	+0.3965,	-0.1791	},
	{+0.3715,	+0.3229,	-0.0881	},
	{+0.3715,	+0.3229,	+0.0881	},
	{+0.1986,	+0.3229,	+0.3261	},
	{+0.0310,	+0.3229,	+0.3805	},
	{-0.2488,	+0.3229,	+0.2896	},
	{-0.3523,	+0.3229,	+0.1471	},
	{-0.3523,	+0.3229,	-0.1471	},
	{-0.2488,	+0.3229,	-0.2896	},
	{+0.0310,	+0.3229,	-0.3805	},
	{+0.1986,	+0.3229,	-0.3261	},
	{+0.4476,	+0.1707,	+0.1433	},
	{+0.2746,	+0.1707,	+0.3814	},
	{+0.0020,	+0.1707,	+0.4700	},
	{-0.2778,	+0.1707,	+0.3790	},
	{-0.4463,	+0.1707,	+0.1471	},
	{-0.4463,	+0.1707,	-0.1471	},
	{-0.2778,	+0.1707,	-0.3790	},
	{+0.0020,	+0.1707,	-0.4700	},
	{+0.2746,	+0.1707,	-0.3814	},
	{+0.4476,	+0.1707,	-0.1433	},
	{+0.4936,	+0.0799,	+0.0000	},
	{+0.3971,	+0.0952,	+0.2885	},
	{+0.1525,	+0.0799,	+0.4694	},
	{-0.1517,	+0.0952,	+0.4668	},
	{-0.3993,	+0.0799,	+0.2901	},
	{-0.4909,	+0.0952,	-0.0000	},
	{-0.3993,	+0.0799,	-0.2901	},
	{-0.1517,	+0.0952,	-0.4668	},
	{+0.1525,	+0.0799,	-0.4694	},
	{+0.3971,	+0.0952,	-0.2885	},
};
#pragma warning(default:4305)

void ECORE_API xrHemisphereBuild	(int quality, float energy, xrHemisphereIterator* iterator, LPVOID param)
{
	const Fvector* hemi=0;
	int h_count		= xrHemisphereVertices(quality,hemi); VERIFY(h_count>0);
    // Calculate energy
    float total		= (float)h_count;
    float E			= 1.f/total;
		
    // Iterate
    for (int i=0; i<h_count; i++){
        float x		=	-float	(hemi[i][0]);
        float y		=	-float	(hemi[i][1]);
        float z		=	-float	(hemi[i][2]);
        float mag	=	_sqrt	(x*x + y*y + z*z);
        x /= mag;	y /= mag;	z /= mag;
        iterator	(x,y,z,E*energy,param);
    }
}

int ECORE_API xrHemisphereVertices	(int quality, const Fvector*& verts)
{
	// SELECT table
	int				h_count	= 0;
	switch (quality)
	{
	case 1:	// LOW quality
		h_count		= HEMI1_VERTS;
		verts		= hemi_1;
		break;
	case 2:	// HIGH quality
		h_count		= HEMI2_VERTS;
		verts		= hemi_2;
		break;
	case 3:	// SUPER HIGH quality
		h_count		= HEMI3_VERTS;
		verts		= hemi_3;
		break;
	default:// NO 	
		NODEFAULT;
	}
	return h_count;
}

int	ECORE_API xrHemisphereIndices	(int quality, const u16*& indices)
{
	// SELECT table
	int				h_count	= 0;
	switch (quality)
	{
	case 1:	// LOW quality
		h_count		= HEMI1_FACES*3;
		indices		= hemi_1v;
		break;
	case 2:	// HIGH quality
//		h_count		= HEMI2_FACES*3;
//		indices		= hemi_2v;
		break;
	case 3:	// SUPER HIGH quality
//		h_count		= HEMI3_FACES*3;
//		indices		= hemi_3v;
		break;
	default:// NO 	
		NODEFAULT;
	}
	return h_count;
}
