/////////////////////////////////////////////////////
//
// PdaMsg.h - сообщение посылаемое при помощи PDA
//
/////////////////////////////////////////////////////

#pragma once
#include "alife_space.h"

//типы сообщений PDA
enum EPdaMsg {
	ePdaMsgTrade  = u32(0),		//торговать
	ePdaMsgGoAway,				//убирайся с территории
	ePdaMsgNeedHelp,			//просьба о помощи

	ePdaMsgAccept,				//принять предложение
	ePdaMsgDecline,				//отказаться
	ePdaMsgDeclineRude,			//грубо отказаться
	ePdaMsgILeave,				//не могу ждать и ухожу

	ePdaMsgInfo,				//сообщение передает некоторую информацию

	ePdaMsgMax
};





//структура для описания сообщения PDA,
//используется для ведения логов
typedef struct tagSPdaMessage 
{
	EPdaMsg			msg;
	
	//true если мы получали сообщение 
	//и false если мы его посылали
	bool			receive;
	
	//true, если сообщение - вопрос
	//и false, если ответ
	bool			question;
	
	//порядковый номер информации
	INFO_INDEX info_index;

	//время получения/отправки сообщения
	ALife::_TIME_ID	time;
		
} SPdaMessage;


//информация о контактах персонажей по PDA и во время диалога
struct TALK_CONTACT_DATA
{
	TALK_CONTACT_DATA():id(u16(-1)),time(0){};
	TALK_CONTACT_DATA(u16 contact_id, ALife::_TIME_ID contact_time):id(contact_id),time(contact_time){};
	//id персонажа с которым говорили
	u16				id;
	//время контакта
	ALife::_TIME_ID	time;
};

DEFINE_VECTOR(TALK_CONTACT_DATA, TALK_CONTACT_VECTOR, TALK_CONTACT_VECTOR_IT);
